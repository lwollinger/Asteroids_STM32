
Game_Start2_STM32F411CE.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000735c  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000e20  080074fc  080074fc  000084fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800831c  0800831c  0000a080  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  0800831c  0800831c  0000931c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08008324  08008324  0000a080  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08008324  08008324  00009324  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08008328  08008328  00009328  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000080  20000000  0800832c  0000a000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00004cb4  20000080  080083ac  0000a080  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20004d34  080083ac  0000ad34  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000a080  2**0
                  CONTENTS, READONLY
 12 .debug_info   000193ec  00000000  00000000  0000a0b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00003ba1  00000000  00000000  0002349c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001668  00000000  00000000  00027040  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00001121  00000000  00000000  000286a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00005c78  00000000  00000000  000297c9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000192ae  00000000  00000000  0002f441  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000a4ead  00000000  00000000  000486ef  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000ed59c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00006254  00000000  00000000  000ed5e0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000077  00000000  00000000  000f3834  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000080 	.word	0x20000080
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080074e4 	.word	0x080074e4

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000084 	.word	0x20000084
 80001dc:	080074e4 	.word	0x080074e4

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_uldivmod>:
 8000280:	b953      	cbnz	r3, 8000298 <__aeabi_uldivmod+0x18>
 8000282:	b94a      	cbnz	r2, 8000298 <__aeabi_uldivmod+0x18>
 8000284:	2900      	cmp	r1, #0
 8000286:	bf08      	it	eq
 8000288:	2800      	cmpeq	r0, #0
 800028a:	bf1c      	itt	ne
 800028c:	f04f 31ff 	movne.w	r1, #4294967295
 8000290:	f04f 30ff 	movne.w	r0, #4294967295
 8000294:	f000 b988 	b.w	80005a8 <__aeabi_idiv0>
 8000298:	f1ad 0c08 	sub.w	ip, sp, #8
 800029c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002a0:	f000 f806 	bl	80002b0 <__udivmoddi4>
 80002a4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002a8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ac:	b004      	add	sp, #16
 80002ae:	4770      	bx	lr

080002b0 <__udivmoddi4>:
 80002b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002b4:	9d08      	ldr	r5, [sp, #32]
 80002b6:	468e      	mov	lr, r1
 80002b8:	4604      	mov	r4, r0
 80002ba:	4688      	mov	r8, r1
 80002bc:	2b00      	cmp	r3, #0
 80002be:	d14a      	bne.n	8000356 <__udivmoddi4+0xa6>
 80002c0:	428a      	cmp	r2, r1
 80002c2:	4617      	mov	r7, r2
 80002c4:	d962      	bls.n	800038c <__udivmoddi4+0xdc>
 80002c6:	fab2 f682 	clz	r6, r2
 80002ca:	b14e      	cbz	r6, 80002e0 <__udivmoddi4+0x30>
 80002cc:	f1c6 0320 	rsb	r3, r6, #32
 80002d0:	fa01 f806 	lsl.w	r8, r1, r6
 80002d4:	fa20 f303 	lsr.w	r3, r0, r3
 80002d8:	40b7      	lsls	r7, r6
 80002da:	ea43 0808 	orr.w	r8, r3, r8
 80002de:	40b4      	lsls	r4, r6
 80002e0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80002e4:	fa1f fc87 	uxth.w	ip, r7
 80002e8:	fbb8 f1fe 	udiv	r1, r8, lr
 80002ec:	0c23      	lsrs	r3, r4, #16
 80002ee:	fb0e 8811 	mls	r8, lr, r1, r8
 80002f2:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80002f6:	fb01 f20c 	mul.w	r2, r1, ip
 80002fa:	429a      	cmp	r2, r3
 80002fc:	d909      	bls.n	8000312 <__udivmoddi4+0x62>
 80002fe:	18fb      	adds	r3, r7, r3
 8000300:	f101 30ff 	add.w	r0, r1, #4294967295
 8000304:	f080 80ea 	bcs.w	80004dc <__udivmoddi4+0x22c>
 8000308:	429a      	cmp	r2, r3
 800030a:	f240 80e7 	bls.w	80004dc <__udivmoddi4+0x22c>
 800030e:	3902      	subs	r1, #2
 8000310:	443b      	add	r3, r7
 8000312:	1a9a      	subs	r2, r3, r2
 8000314:	b2a3      	uxth	r3, r4
 8000316:	fbb2 f0fe 	udiv	r0, r2, lr
 800031a:	fb0e 2210 	mls	r2, lr, r0, r2
 800031e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000322:	fb00 fc0c 	mul.w	ip, r0, ip
 8000326:	459c      	cmp	ip, r3
 8000328:	d909      	bls.n	800033e <__udivmoddi4+0x8e>
 800032a:	18fb      	adds	r3, r7, r3
 800032c:	f100 32ff 	add.w	r2, r0, #4294967295
 8000330:	f080 80d6 	bcs.w	80004e0 <__udivmoddi4+0x230>
 8000334:	459c      	cmp	ip, r3
 8000336:	f240 80d3 	bls.w	80004e0 <__udivmoddi4+0x230>
 800033a:	443b      	add	r3, r7
 800033c:	3802      	subs	r0, #2
 800033e:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000342:	eba3 030c 	sub.w	r3, r3, ip
 8000346:	2100      	movs	r1, #0
 8000348:	b11d      	cbz	r5, 8000352 <__udivmoddi4+0xa2>
 800034a:	40f3      	lsrs	r3, r6
 800034c:	2200      	movs	r2, #0
 800034e:	e9c5 3200 	strd	r3, r2, [r5]
 8000352:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000356:	428b      	cmp	r3, r1
 8000358:	d905      	bls.n	8000366 <__udivmoddi4+0xb6>
 800035a:	b10d      	cbz	r5, 8000360 <__udivmoddi4+0xb0>
 800035c:	e9c5 0100 	strd	r0, r1, [r5]
 8000360:	2100      	movs	r1, #0
 8000362:	4608      	mov	r0, r1
 8000364:	e7f5      	b.n	8000352 <__udivmoddi4+0xa2>
 8000366:	fab3 f183 	clz	r1, r3
 800036a:	2900      	cmp	r1, #0
 800036c:	d146      	bne.n	80003fc <__udivmoddi4+0x14c>
 800036e:	4573      	cmp	r3, lr
 8000370:	d302      	bcc.n	8000378 <__udivmoddi4+0xc8>
 8000372:	4282      	cmp	r2, r0
 8000374:	f200 8105 	bhi.w	8000582 <__udivmoddi4+0x2d2>
 8000378:	1a84      	subs	r4, r0, r2
 800037a:	eb6e 0203 	sbc.w	r2, lr, r3
 800037e:	2001      	movs	r0, #1
 8000380:	4690      	mov	r8, r2
 8000382:	2d00      	cmp	r5, #0
 8000384:	d0e5      	beq.n	8000352 <__udivmoddi4+0xa2>
 8000386:	e9c5 4800 	strd	r4, r8, [r5]
 800038a:	e7e2      	b.n	8000352 <__udivmoddi4+0xa2>
 800038c:	2a00      	cmp	r2, #0
 800038e:	f000 8090 	beq.w	80004b2 <__udivmoddi4+0x202>
 8000392:	fab2 f682 	clz	r6, r2
 8000396:	2e00      	cmp	r6, #0
 8000398:	f040 80a4 	bne.w	80004e4 <__udivmoddi4+0x234>
 800039c:	1a8a      	subs	r2, r1, r2
 800039e:	0c03      	lsrs	r3, r0, #16
 80003a0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80003a4:	b280      	uxth	r0, r0
 80003a6:	b2bc      	uxth	r4, r7
 80003a8:	2101      	movs	r1, #1
 80003aa:	fbb2 fcfe 	udiv	ip, r2, lr
 80003ae:	fb0e 221c 	mls	r2, lr, ip, r2
 80003b2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80003b6:	fb04 f20c 	mul.w	r2, r4, ip
 80003ba:	429a      	cmp	r2, r3
 80003bc:	d907      	bls.n	80003ce <__udivmoddi4+0x11e>
 80003be:	18fb      	adds	r3, r7, r3
 80003c0:	f10c 38ff 	add.w	r8, ip, #4294967295
 80003c4:	d202      	bcs.n	80003cc <__udivmoddi4+0x11c>
 80003c6:	429a      	cmp	r2, r3
 80003c8:	f200 80e0 	bhi.w	800058c <__udivmoddi4+0x2dc>
 80003cc:	46c4      	mov	ip, r8
 80003ce:	1a9b      	subs	r3, r3, r2
 80003d0:	fbb3 f2fe 	udiv	r2, r3, lr
 80003d4:	fb0e 3312 	mls	r3, lr, r2, r3
 80003d8:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 80003dc:	fb02 f404 	mul.w	r4, r2, r4
 80003e0:	429c      	cmp	r4, r3
 80003e2:	d907      	bls.n	80003f4 <__udivmoddi4+0x144>
 80003e4:	18fb      	adds	r3, r7, r3
 80003e6:	f102 30ff 	add.w	r0, r2, #4294967295
 80003ea:	d202      	bcs.n	80003f2 <__udivmoddi4+0x142>
 80003ec:	429c      	cmp	r4, r3
 80003ee:	f200 80ca 	bhi.w	8000586 <__udivmoddi4+0x2d6>
 80003f2:	4602      	mov	r2, r0
 80003f4:	1b1b      	subs	r3, r3, r4
 80003f6:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 80003fa:	e7a5      	b.n	8000348 <__udivmoddi4+0x98>
 80003fc:	f1c1 0620 	rsb	r6, r1, #32
 8000400:	408b      	lsls	r3, r1
 8000402:	fa22 f706 	lsr.w	r7, r2, r6
 8000406:	431f      	orrs	r7, r3
 8000408:	fa0e f401 	lsl.w	r4, lr, r1
 800040c:	fa20 f306 	lsr.w	r3, r0, r6
 8000410:	fa2e fe06 	lsr.w	lr, lr, r6
 8000414:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000418:	4323      	orrs	r3, r4
 800041a:	fa00 f801 	lsl.w	r8, r0, r1
 800041e:	fa1f fc87 	uxth.w	ip, r7
 8000422:	fbbe f0f9 	udiv	r0, lr, r9
 8000426:	0c1c      	lsrs	r4, r3, #16
 8000428:	fb09 ee10 	mls	lr, r9, r0, lr
 800042c:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000430:	fb00 fe0c 	mul.w	lr, r0, ip
 8000434:	45a6      	cmp	lr, r4
 8000436:	fa02 f201 	lsl.w	r2, r2, r1
 800043a:	d909      	bls.n	8000450 <__udivmoddi4+0x1a0>
 800043c:	193c      	adds	r4, r7, r4
 800043e:	f100 3aff 	add.w	sl, r0, #4294967295
 8000442:	f080 809c 	bcs.w	800057e <__udivmoddi4+0x2ce>
 8000446:	45a6      	cmp	lr, r4
 8000448:	f240 8099 	bls.w	800057e <__udivmoddi4+0x2ce>
 800044c:	3802      	subs	r0, #2
 800044e:	443c      	add	r4, r7
 8000450:	eba4 040e 	sub.w	r4, r4, lr
 8000454:	fa1f fe83 	uxth.w	lr, r3
 8000458:	fbb4 f3f9 	udiv	r3, r4, r9
 800045c:	fb09 4413 	mls	r4, r9, r3, r4
 8000460:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000464:	fb03 fc0c 	mul.w	ip, r3, ip
 8000468:	45a4      	cmp	ip, r4
 800046a:	d908      	bls.n	800047e <__udivmoddi4+0x1ce>
 800046c:	193c      	adds	r4, r7, r4
 800046e:	f103 3eff 	add.w	lr, r3, #4294967295
 8000472:	f080 8082 	bcs.w	800057a <__udivmoddi4+0x2ca>
 8000476:	45a4      	cmp	ip, r4
 8000478:	d97f      	bls.n	800057a <__udivmoddi4+0x2ca>
 800047a:	3b02      	subs	r3, #2
 800047c:	443c      	add	r4, r7
 800047e:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000482:	eba4 040c 	sub.w	r4, r4, ip
 8000486:	fba0 ec02 	umull	lr, ip, r0, r2
 800048a:	4564      	cmp	r4, ip
 800048c:	4673      	mov	r3, lr
 800048e:	46e1      	mov	r9, ip
 8000490:	d362      	bcc.n	8000558 <__udivmoddi4+0x2a8>
 8000492:	d05f      	beq.n	8000554 <__udivmoddi4+0x2a4>
 8000494:	b15d      	cbz	r5, 80004ae <__udivmoddi4+0x1fe>
 8000496:	ebb8 0203 	subs.w	r2, r8, r3
 800049a:	eb64 0409 	sbc.w	r4, r4, r9
 800049e:	fa04 f606 	lsl.w	r6, r4, r6
 80004a2:	fa22 f301 	lsr.w	r3, r2, r1
 80004a6:	431e      	orrs	r6, r3
 80004a8:	40cc      	lsrs	r4, r1
 80004aa:	e9c5 6400 	strd	r6, r4, [r5]
 80004ae:	2100      	movs	r1, #0
 80004b0:	e74f      	b.n	8000352 <__udivmoddi4+0xa2>
 80004b2:	fbb1 fcf2 	udiv	ip, r1, r2
 80004b6:	0c01      	lsrs	r1, r0, #16
 80004b8:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 80004bc:	b280      	uxth	r0, r0
 80004be:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 80004c2:	463b      	mov	r3, r7
 80004c4:	4638      	mov	r0, r7
 80004c6:	463c      	mov	r4, r7
 80004c8:	46b8      	mov	r8, r7
 80004ca:	46be      	mov	lr, r7
 80004cc:	2620      	movs	r6, #32
 80004ce:	fbb1 f1f7 	udiv	r1, r1, r7
 80004d2:	eba2 0208 	sub.w	r2, r2, r8
 80004d6:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 80004da:	e766      	b.n	80003aa <__udivmoddi4+0xfa>
 80004dc:	4601      	mov	r1, r0
 80004de:	e718      	b.n	8000312 <__udivmoddi4+0x62>
 80004e0:	4610      	mov	r0, r2
 80004e2:	e72c      	b.n	800033e <__udivmoddi4+0x8e>
 80004e4:	f1c6 0220 	rsb	r2, r6, #32
 80004e8:	fa2e f302 	lsr.w	r3, lr, r2
 80004ec:	40b7      	lsls	r7, r6
 80004ee:	40b1      	lsls	r1, r6
 80004f0:	fa20 f202 	lsr.w	r2, r0, r2
 80004f4:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80004f8:	430a      	orrs	r2, r1
 80004fa:	fbb3 f8fe 	udiv	r8, r3, lr
 80004fe:	b2bc      	uxth	r4, r7
 8000500:	fb0e 3318 	mls	r3, lr, r8, r3
 8000504:	0c11      	lsrs	r1, r2, #16
 8000506:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800050a:	fb08 f904 	mul.w	r9, r8, r4
 800050e:	40b0      	lsls	r0, r6
 8000510:	4589      	cmp	r9, r1
 8000512:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000516:	b280      	uxth	r0, r0
 8000518:	d93e      	bls.n	8000598 <__udivmoddi4+0x2e8>
 800051a:	1879      	adds	r1, r7, r1
 800051c:	f108 3cff 	add.w	ip, r8, #4294967295
 8000520:	d201      	bcs.n	8000526 <__udivmoddi4+0x276>
 8000522:	4589      	cmp	r9, r1
 8000524:	d81f      	bhi.n	8000566 <__udivmoddi4+0x2b6>
 8000526:	eba1 0109 	sub.w	r1, r1, r9
 800052a:	fbb1 f9fe 	udiv	r9, r1, lr
 800052e:	fb09 f804 	mul.w	r8, r9, r4
 8000532:	fb0e 1119 	mls	r1, lr, r9, r1
 8000536:	b292      	uxth	r2, r2
 8000538:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800053c:	4542      	cmp	r2, r8
 800053e:	d229      	bcs.n	8000594 <__udivmoddi4+0x2e4>
 8000540:	18ba      	adds	r2, r7, r2
 8000542:	f109 31ff 	add.w	r1, r9, #4294967295
 8000546:	d2c4      	bcs.n	80004d2 <__udivmoddi4+0x222>
 8000548:	4542      	cmp	r2, r8
 800054a:	d2c2      	bcs.n	80004d2 <__udivmoddi4+0x222>
 800054c:	f1a9 0102 	sub.w	r1, r9, #2
 8000550:	443a      	add	r2, r7
 8000552:	e7be      	b.n	80004d2 <__udivmoddi4+0x222>
 8000554:	45f0      	cmp	r8, lr
 8000556:	d29d      	bcs.n	8000494 <__udivmoddi4+0x1e4>
 8000558:	ebbe 0302 	subs.w	r3, lr, r2
 800055c:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000560:	3801      	subs	r0, #1
 8000562:	46e1      	mov	r9, ip
 8000564:	e796      	b.n	8000494 <__udivmoddi4+0x1e4>
 8000566:	eba7 0909 	sub.w	r9, r7, r9
 800056a:	4449      	add	r1, r9
 800056c:	f1a8 0c02 	sub.w	ip, r8, #2
 8000570:	fbb1 f9fe 	udiv	r9, r1, lr
 8000574:	fb09 f804 	mul.w	r8, r9, r4
 8000578:	e7db      	b.n	8000532 <__udivmoddi4+0x282>
 800057a:	4673      	mov	r3, lr
 800057c:	e77f      	b.n	800047e <__udivmoddi4+0x1ce>
 800057e:	4650      	mov	r0, sl
 8000580:	e766      	b.n	8000450 <__udivmoddi4+0x1a0>
 8000582:	4608      	mov	r0, r1
 8000584:	e6fd      	b.n	8000382 <__udivmoddi4+0xd2>
 8000586:	443b      	add	r3, r7
 8000588:	3a02      	subs	r2, #2
 800058a:	e733      	b.n	80003f4 <__udivmoddi4+0x144>
 800058c:	f1ac 0c02 	sub.w	ip, ip, #2
 8000590:	443b      	add	r3, r7
 8000592:	e71c      	b.n	80003ce <__udivmoddi4+0x11e>
 8000594:	4649      	mov	r1, r9
 8000596:	e79c      	b.n	80004d2 <__udivmoddi4+0x222>
 8000598:	eba1 0109 	sub.w	r1, r1, r9
 800059c:	46c4      	mov	ip, r8
 800059e:	fbb1 f9fe 	udiv	r9, r1, lr
 80005a2:	fb09 f804 	mul.w	r8, r9, r4
 80005a6:	e7c4      	b.n	8000532 <__udivmoddi4+0x282>

080005a8 <__aeabi_idiv0>:
 80005a8:	4770      	bx	lr
 80005aa:	bf00      	nop

080005ac <init_LFSR>:
 80005ac:	b480      	push	{r7}
 80005ae:	b083      	sub	sp, #12
 80005b0:	af00      	add	r7, sp, #0
 80005b2:	6078      	str	r0, [r7, #4]
 80005b4:	4a04      	ldr	r2, [pc, #16]	@ (80005c8 <init_LFSR+0x1c>)
 80005b6:	687b      	ldr	r3, [r7, #4]
 80005b8:	6013      	str	r3, [r2, #0]
 80005ba:	bf00      	nop
 80005bc:	370c      	adds	r7, #12
 80005be:	46bd      	mov	sp, r7
 80005c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005c4:	4770      	bx	lr
 80005c6:	bf00      	nop
 80005c8:	2000009c 	.word	0x2000009c

080005cc <HAL_ADC_ConvCpltCallback>:

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */

void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
{
 80005cc:	b480      	push	{r7}
 80005ce:	b083      	sub	sp, #12
 80005d0:	af00      	add	r7, sp, #0
 80005d2:	6078      	str	r0, [r7, #4]

	    valor_ADC[0]=ADC_buffer[0];
 80005d4:	4b06      	ldr	r3, [pc, #24]	@ (80005f0 <HAL_ADC_ConvCpltCallback+0x24>)
 80005d6:	881a      	ldrh	r2, [r3, #0]
 80005d8:	4b06      	ldr	r3, [pc, #24]	@ (80005f4 <HAL_ADC_ConvCpltCallback+0x28>)
 80005da:	801a      	strh	r2, [r3, #0]
		valor_ADC[1]=ADC_buffer[1];
 80005dc:	4b04      	ldr	r3, [pc, #16]	@ (80005f0 <HAL_ADC_ConvCpltCallback+0x24>)
 80005de:	885a      	ldrh	r2, [r3, #2]
 80005e0:	4b04      	ldr	r3, [pc, #16]	@ (80005f4 <HAL_ADC_ConvCpltCallback+0x28>)
 80005e2:	805a      	strh	r2, [r3, #2]
}
 80005e4:	bf00      	nop
 80005e6:	370c      	adds	r7, #12
 80005e8:	46bd      	mov	sp, r7
 80005ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005ee:	4770      	bx	lr
 80005f0:	200001a4 	.word	0x200001a4
 80005f4:	200001a8 	.word	0x200001a8

080005f8 <vTask_Move_Nave>:

//---------------------------------------------------------------------------------------------------

//---------------------------------------------------------------------------------------------------
void vTask_Move_Nave(void *pvParameters)
{
 80005f8:	b580      	push	{r7, lr}
 80005fa:	b086      	sub	sp, #24
 80005fc:	af02      	add	r7, sp, #8
 80005fe:	6078      	str	r0, [r7, #4]

	uint32_t dif_eixoX, dif_eixoY;

	while(1)
	{
		ST7735_FillRectangle(nave_x, nave_y, 9, 9, ST7735_BLACK);
 8000600:	4b2c      	ldr	r3, [pc, #176]	@ (80006b4 <vTask_Move_Nave+0xbc>)
 8000602:	681b      	ldr	r3, [r3, #0]
 8000604:	b298      	uxth	r0, r3
 8000606:	4b2c      	ldr	r3, [pc, #176]	@ (80006b8 <vTask_Move_Nave+0xc0>)
 8000608:	681b      	ldr	r3, [r3, #0]
 800060a:	b299      	uxth	r1, r3
 800060c:	2300      	movs	r3, #0
 800060e:	9300      	str	r3, [sp, #0]
 8000610:	2309      	movs	r3, #9
 8000612:	2209      	movs	r2, #9
 8000614:	f000 fd38 	bl	8001088 <ST7735_FillRectangle>

		dif_eixoX = valor_ADC[1]; // media_eixoX;
 8000618:	4b28      	ldr	r3, [pc, #160]	@ (80006bc <vTask_Move_Nave+0xc4>)
 800061a:	885b      	ldrh	r3, [r3, #2]
 800061c:	60fb      	str	r3, [r7, #12]
		dif_eixoY = valor_ADC[0]; //media_eixoY;
 800061e:	4b27      	ldr	r3, [pc, #156]	@ (80006bc <vTask_Move_Nave+0xc4>)
 8000620:	881b      	ldrh	r3, [r3, #0]
 8000622:	60bb      	str	r3, [r7, #8]

		if(dif_eixoX < 1800){   // aprox. 200 de segurança
 8000624:	68fb      	ldr	r3, [r7, #12]
 8000626:	f5b3 6fe1 	cmp.w	r3, #1800	@ 0x708
 800062a:	d209      	bcs.n	8000640 <vTask_Move_Nave+0x48>
			if(nave_x>0) nave_x--;
 800062c:	4b21      	ldr	r3, [pc, #132]	@ (80006b4 <vTask_Move_Nave+0xbc>)
 800062e:	681b      	ldr	r3, [r3, #0]
 8000630:	2b00      	cmp	r3, #0
 8000632:	d013      	beq.n	800065c <vTask_Move_Nave+0x64>
 8000634:	4b1f      	ldr	r3, [pc, #124]	@ (80006b4 <vTask_Move_Nave+0xbc>)
 8000636:	681b      	ldr	r3, [r3, #0]
 8000638:	3b01      	subs	r3, #1
 800063a:	4a1e      	ldr	r2, [pc, #120]	@ (80006b4 <vTask_Move_Nave+0xbc>)
 800063c:	6013      	str	r3, [r2, #0]
 800063e:	e00d      	b.n	800065c <vTask_Move_Nave+0x64>
		}
		else if(dif_eixoX > 3800){ // 50 = Delta de tolerancia no deslocamento do eixo
 8000640:	68fb      	ldr	r3, [r7, #12]
 8000642:	f640 62d8 	movw	r2, #3800	@ 0xed8
 8000646:	4293      	cmp	r3, r2
 8000648:	d908      	bls.n	800065c <vTask_Move_Nave+0x64>
			if(nave_x<150) nave_x++;
 800064a:	4b1a      	ldr	r3, [pc, #104]	@ (80006b4 <vTask_Move_Nave+0xbc>)
 800064c:	681b      	ldr	r3, [r3, #0]
 800064e:	2b95      	cmp	r3, #149	@ 0x95
 8000650:	d804      	bhi.n	800065c <vTask_Move_Nave+0x64>
 8000652:	4b18      	ldr	r3, [pc, #96]	@ (80006b4 <vTask_Move_Nave+0xbc>)
 8000654:	681b      	ldr	r3, [r3, #0]
 8000656:	3301      	adds	r3, #1
 8000658:	4a16      	ldr	r2, [pc, #88]	@ (80006b4 <vTask_Move_Nave+0xbc>)
 800065a:	6013      	str	r3, [r2, #0]
		}
		// ------------------------------------------------------------------------
		if(dif_eixoY < 1800){
 800065c:	68bb      	ldr	r3, [r7, #8]
 800065e:	f5b3 6fe1 	cmp.w	r3, #1800	@ 0x708
 8000662:	d209      	bcs.n	8000678 <vTask_Move_Nave+0x80>
			if(nave_y>0) nave_y--;
 8000664:	4b14      	ldr	r3, [pc, #80]	@ (80006b8 <vTask_Move_Nave+0xc0>)
 8000666:	681b      	ldr	r3, [r3, #0]
 8000668:	2b00      	cmp	r3, #0
 800066a:	d013      	beq.n	8000694 <vTask_Move_Nave+0x9c>
 800066c:	4b12      	ldr	r3, [pc, #72]	@ (80006b8 <vTask_Move_Nave+0xc0>)
 800066e:	681b      	ldr	r3, [r3, #0]
 8000670:	3b01      	subs	r3, #1
 8000672:	4a11      	ldr	r2, [pc, #68]	@ (80006b8 <vTask_Move_Nave+0xc0>)
 8000674:	6013      	str	r3, [r2, #0]
 8000676:	e00d      	b.n	8000694 <vTask_Move_Nave+0x9c>
		}
		else if(dif_eixoY > 3800){
 8000678:	68bb      	ldr	r3, [r7, #8]
 800067a:	f640 62d8 	movw	r2, #3800	@ 0xed8
 800067e:	4293      	cmp	r3, r2
 8000680:	d908      	bls.n	8000694 <vTask_Move_Nave+0x9c>
			if(nave_y<120) nave_y++;
 8000682:	4b0d      	ldr	r3, [pc, #52]	@ (80006b8 <vTask_Move_Nave+0xc0>)
 8000684:	681b      	ldr	r3, [r3, #0]
 8000686:	2b77      	cmp	r3, #119	@ 0x77
 8000688:	d804      	bhi.n	8000694 <vTask_Move_Nave+0x9c>
 800068a:	4b0b      	ldr	r3, [pc, #44]	@ (80006b8 <vTask_Move_Nave+0xc0>)
 800068c:	681b      	ldr	r3, [r3, #0]
 800068e:	3301      	adds	r3, #1
 8000690:	4a09      	ldr	r2, [pc, #36]	@ (80006b8 <vTask_Move_Nave+0xc0>)
 8000692:	6013      	str	r3, [r2, #0]
		}
		// ------------------------------------------------------------------------
		ST7735_draw_figure(nave_x, nave_y, nave, ST7735_PINK);
 8000694:	4b07      	ldr	r3, [pc, #28]	@ (80006b4 <vTask_Move_Nave+0xbc>)
 8000696:	6818      	ldr	r0, [r3, #0]
 8000698:	4b07      	ldr	r3, [pc, #28]	@ (80006b8 <vTask_Move_Nave+0xc0>)
 800069a:	6819      	ldr	r1, [r3, #0]
 800069c:	4b08      	ldr	r3, [pc, #32]	@ (80006c0 <vTask_Move_Nave+0xc8>)
 800069e:	f64f 429f 	movw	r2, #64671	@ 0xfc9f
 80006a2:	9200      	str	r2, [sp, #0]
 80006a4:	cb0c      	ldmia	r3, {r2, r3}
 80006a6:	f000 fd74 	bl	8001192 <ST7735_draw_figure>
		vTaskDelay(20);
 80006aa:	2014      	movs	r0, #20
 80006ac:	f004 fd04 	bl	80050b8 <vTaskDelay>
		ST7735_FillRectangle(nave_x, nave_y, 9, 9, ST7735_BLACK);
 80006b0:	e7a6      	b.n	8000600 <vTask_Move_Nave+0x8>
 80006b2:	bf00      	nop
 80006b4:	20000018 	.word	0x20000018
 80006b8:	2000001c 	.word	0x2000001c
 80006bc:	200001a8 	.word	0x200001a8
 80006c0:	20000008 	.word	0x20000008

080006c4 <vTask_Move_Tiro>:
	}
}
//---------------------------------------------------------------------------------------------------
void vTask_Move_Tiro(void *pvParameters)
{
 80006c4:	b580      	push	{r7, lr}
 80006c6:	b084      	sub	sp, #16
 80006c8:	af02      	add	r7, sp, #8
 80006ca:	6078      	str	r0, [r7, #4]
    while(1){

        // Se o botão foi pressionado e não há tiro ativo, dispara da posição da nave
        if(!HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_15) && tiro_ativo == 0) {
 80006cc:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80006d0:	4824      	ldr	r0, [pc, #144]	@ (8000764 <vTask_Move_Tiro+0xa0>)
 80006d2:	f002 fa37 	bl	8002b44 <HAL_GPIO_ReadPin>
 80006d6:	4603      	mov	r3, r0
 80006d8:	2b00      	cmp	r3, #0
 80006da:	d113      	bne.n	8000704 <vTask_Move_Tiro+0x40>
 80006dc:	4b22      	ldr	r3, [pc, #136]	@ (8000768 <vTask_Move_Tiro+0xa4>)
 80006de:	781b      	ldrb	r3, [r3, #0]
 80006e0:	b2db      	uxtb	r3, r3
 80006e2:	2b00      	cmp	r3, #0
 80006e4:	d10e      	bne.n	8000704 <vTask_Move_Tiro+0x40>
            tiro_x = nave_x + 4;
 80006e6:	4b21      	ldr	r3, [pc, #132]	@ (800076c <vTask_Move_Tiro+0xa8>)
 80006e8:	681b      	ldr	r3, [r3, #0]
 80006ea:	b29b      	uxth	r3, r3
 80006ec:	3304      	adds	r3, #4
 80006ee:	b29a      	uxth	r2, r3
 80006f0:	4b1f      	ldr	r3, [pc, #124]	@ (8000770 <vTask_Move_Tiro+0xac>)
 80006f2:	801a      	strh	r2, [r3, #0]
            tiro_y = nave_y;
 80006f4:	4b1f      	ldr	r3, [pc, #124]	@ (8000774 <vTask_Move_Tiro+0xb0>)
 80006f6:	681b      	ldr	r3, [r3, #0]
 80006f8:	b29a      	uxth	r2, r3
 80006fa:	4b1f      	ldr	r3, [pc, #124]	@ (8000778 <vTask_Move_Tiro+0xb4>)
 80006fc:	801a      	strh	r2, [r3, #0]
            tiro_ativo = 1;
 80006fe:	4b1a      	ldr	r3, [pc, #104]	@ (8000768 <vTask_Move_Tiro+0xa4>)
 8000700:	2201      	movs	r2, #1
 8000702:	701a      	strb	r2, [r3, #0]
        }

        if(tiro_ativo == 1){
 8000704:	4b18      	ldr	r3, [pc, #96]	@ (8000768 <vTask_Move_Tiro+0xa4>)
 8000706:	781b      	ldrb	r3, [r3, #0]
 8000708:	b2db      	uxtb	r3, r3
 800070a:	2b01      	cmp	r3, #1
 800070c:	d126      	bne.n	800075c <vTask_Move_Tiro+0x98>
            // Apaga o tiro anterior
        	ST7735_FillRectangle(tiro_x, tiro_y, 5, 5,  ST7735_BLACK);
 800070e:	4b18      	ldr	r3, [pc, #96]	@ (8000770 <vTask_Move_Tiro+0xac>)
 8000710:	881b      	ldrh	r3, [r3, #0]
 8000712:	b298      	uxth	r0, r3
 8000714:	4b18      	ldr	r3, [pc, #96]	@ (8000778 <vTask_Move_Tiro+0xb4>)
 8000716:	881b      	ldrh	r3, [r3, #0]
 8000718:	b299      	uxth	r1, r3
 800071a:	2300      	movs	r3, #0
 800071c:	9300      	str	r3, [sp, #0]
 800071e:	2305      	movs	r3, #5
 8000720:	2205      	movs	r2, #5
 8000722:	f000 fcb1 	bl	8001088 <ST7735_FillRectangle>

            // Atualiza posição do tiro (subindo)
            if(tiro_y > 0){
 8000726:	4b14      	ldr	r3, [pc, #80]	@ (8000778 <vTask_Move_Tiro+0xb4>)
 8000728:	881b      	ldrh	r3, [r3, #0]
 800072a:	b29b      	uxth	r3, r3
 800072c:	2b00      	cmp	r3, #0
 800072e:	d012      	beq.n	8000756 <vTask_Move_Tiro+0x92>
                tiro_y--; // move pra cima
 8000730:	4b11      	ldr	r3, [pc, #68]	@ (8000778 <vTask_Move_Tiro+0xb4>)
 8000732:	881b      	ldrh	r3, [r3, #0]
 8000734:	b29b      	uxth	r3, r3
 8000736:	3b01      	subs	r3, #1
 8000738:	b29a      	uxth	r2, r3
 800073a:	4b0f      	ldr	r3, [pc, #60]	@ (8000778 <vTask_Move_Tiro+0xb4>)
 800073c:	801a      	strh	r2, [r3, #0]
                ST7735_DrawPixel(tiro_x, tiro_y, ST7735_YELLOW);
 800073e:	4b0c      	ldr	r3, [pc, #48]	@ (8000770 <vTask_Move_Tiro+0xac>)
 8000740:	881b      	ldrh	r3, [r3, #0]
 8000742:	b29b      	uxth	r3, r3
 8000744:	4a0c      	ldr	r2, [pc, #48]	@ (8000778 <vTask_Move_Tiro+0xb4>)
 8000746:	8812      	ldrh	r2, [r2, #0]
 8000748:	b291      	uxth	r1, r2
 800074a:	f64f 72e0 	movw	r2, #65504	@ 0xffe0
 800074e:	4618      	mov	r0, r3
 8000750:	f000 fbbc 	bl	8000ecc <ST7735_DrawPixel>
 8000754:	e002      	b.n	800075c <vTask_Move_Tiro+0x98>
            } else{
                tiro_ativo = 0; // tiro saiu da tela
 8000756:	4b04      	ldr	r3, [pc, #16]	@ (8000768 <vTask_Move_Tiro+0xa4>)
 8000758:	2200      	movs	r2, #0
 800075a:	701a      	strb	r2, [r3, #0]
            }
        }

        vTaskDelay(20); // controla velocidade do tiro
 800075c:	2014      	movs	r0, #20
 800075e:	f004 fcab 	bl	80050b8 <vTaskDelay>
        if(!HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_15) && tiro_ativo == 0) {
 8000762:	e7b3      	b.n	80006cc <vTask_Move_Tiro+0x8>
 8000764:	40020800 	.word	0x40020800
 8000768:	200001ac 	.word	0x200001ac
 800076c:	20000018 	.word	0x20000018
 8000770:	200001ae 	.word	0x200001ae
 8000774:	2000001c 	.word	0x2000001c
 8000778:	200001b0 	.word	0x200001b0

0800077c <vTask_Print_ValorADC>:
    }
}
//---------------------------------------------------------------------------------------------------
void vTask_Print_ValorADC(void *pvParameters)
{
 800077c:	b580      	push	{r7, lr}
 800077e:	b086      	sub	sp, #24
 8000780:	af04      	add	r7, sp, #16
 8000782:	6078      	str	r0, [r7, #4]
	while(1)
	{
		ST7735_WriteString(128, 50, "     ", Font_7x10, ST7735_GREEN, ST7735_BLACK);
 8000784:	4b21      	ldr	r3, [pc, #132]	@ (800080c <vTask_Print_ValorADC+0x90>)
 8000786:	2200      	movs	r2, #0
 8000788:	9202      	str	r2, [sp, #8]
 800078a:	f44f 62fc 	mov.w	r2, #2016	@ 0x7e0
 800078e:	9201      	str	r2, [sp, #4]
 8000790:	685a      	ldr	r2, [r3, #4]
 8000792:	9200      	str	r2, [sp, #0]
 8000794:	681b      	ldr	r3, [r3, #0]
 8000796:	4a1e      	ldr	r2, [pc, #120]	@ (8000810 <vTask_Print_ValorADC+0x94>)
 8000798:	2132      	movs	r1, #50	@ 0x32
 800079a:	2080      	movs	r0, #128	@ 0x80
 800079c:	f000 fc44 	bl	8001028 <ST7735_WriteString>
		ST7735_write_nr(128, 10, valor_ADC[0], Font_7x10, ST7735_GREEN, ST7735_BLACK);
 80007a0:	4b1c      	ldr	r3, [pc, #112]	@ (8000814 <vTask_Print_ValorADC+0x98>)
 80007a2:	881b      	ldrh	r3, [r3, #0]
 80007a4:	4619      	mov	r1, r3
 80007a6:	4b19      	ldr	r3, [pc, #100]	@ (800080c <vTask_Print_ValorADC+0x90>)
 80007a8:	2200      	movs	r2, #0
 80007aa:	9202      	str	r2, [sp, #8]
 80007ac:	f44f 62fc 	mov.w	r2, #2016	@ 0x7e0
 80007b0:	9201      	str	r2, [sp, #4]
 80007b2:	685a      	ldr	r2, [r3, #4]
 80007b4:	9200      	str	r2, [sp, #0]
 80007b6:	681b      	ldr	r3, [r3, #0]
 80007b8:	460a      	mov	r2, r1
 80007ba:	210a      	movs	r1, #10
 80007bc:	2080      	movs	r0, #128	@ 0x80
 80007be:	f000 fd5b 	bl	8001278 <ST7735_write_nr>

		ST7735_WriteString(128, 60, "     ", Font_7x10, ST7735_GREEN, ST7735_BLACK);
 80007c2:	4b12      	ldr	r3, [pc, #72]	@ (800080c <vTask_Print_ValorADC+0x90>)
 80007c4:	2200      	movs	r2, #0
 80007c6:	9202      	str	r2, [sp, #8]
 80007c8:	f44f 62fc 	mov.w	r2, #2016	@ 0x7e0
 80007cc:	9201      	str	r2, [sp, #4]
 80007ce:	685a      	ldr	r2, [r3, #4]
 80007d0:	9200      	str	r2, [sp, #0]
 80007d2:	681b      	ldr	r3, [r3, #0]
 80007d4:	4a0e      	ldr	r2, [pc, #56]	@ (8000810 <vTask_Print_ValorADC+0x94>)
 80007d6:	213c      	movs	r1, #60	@ 0x3c
 80007d8:	2080      	movs	r0, #128	@ 0x80
 80007da:	f000 fc25 	bl	8001028 <ST7735_WriteString>
		ST7735_write_nr(128, 20, valor_ADC[1], Font_7x10, ST7735_GREEN, ST7735_BLACK);
 80007de:	4b0d      	ldr	r3, [pc, #52]	@ (8000814 <vTask_Print_ValorADC+0x98>)
 80007e0:	885b      	ldrh	r3, [r3, #2]
 80007e2:	4619      	mov	r1, r3
 80007e4:	4b09      	ldr	r3, [pc, #36]	@ (800080c <vTask_Print_ValorADC+0x90>)
 80007e6:	2200      	movs	r2, #0
 80007e8:	9202      	str	r2, [sp, #8]
 80007ea:	f44f 62fc 	mov.w	r2, #2016	@ 0x7e0
 80007ee:	9201      	str	r2, [sp, #4]
 80007f0:	685a      	ldr	r2, [r3, #4]
 80007f2:	9200      	str	r2, [sp, #0]
 80007f4:	681b      	ldr	r3, [r3, #0]
 80007f6:	460a      	mov	r2, r1
 80007f8:	2114      	movs	r1, #20
 80007fa:	2080      	movs	r0, #128	@ 0x80
 80007fc:	f000 fd3c 	bl	8001278 <ST7735_write_nr>

		vTaskDelay(500);
 8000800:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8000804:	f004 fc58 	bl	80050b8 <vTaskDelay>
		ST7735_WriteString(128, 50, "     ", Font_7x10, ST7735_GREEN, ST7735_BLACK);
 8000808:	bf00      	nop
 800080a:	e7bb      	b.n	8000784 <vTask_Print_ValorADC+0x8>
 800080c:	20000010 	.word	0x20000010
 8000810:	08007508 	.word	0x08007508
 8000814:	200001a8 	.word	0x200001a8

08000818 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000818:	b580      	push	{r7, lr}
 800081a:	b086      	sub	sp, #24
 800081c:	af04      	add	r7, sp, #16

  /* USER CODE BEGIN 1 */
  uint32_t semente_PRNG=1;
 800081e:	2301      	movs	r3, #1
 8000820:	607b      	str	r3, [r7, #4]
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000822:	f000 ff5b 	bl	80016dc <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000826:	f000 f88b 	bl	8000940 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800082a:	f000 f9a7 	bl	8000b7c <MX_GPIO_Init>
  MX_DMA_Init();
 800082e:	f000 f985 	bl	8000b3c <MX_DMA_Init>
  MX_SPI1_Init();
 8000832:	f000 f94d 	bl	8000ad0 <MX_SPI1_Init>
  MX_ADC1_Init();
 8000836:	f000 f8eb 	bl	8000a10 <MX_ADC1_Init>
  /* USER CODE BEGIN 2 */

// inicializa LCD

  HAL_Delay(100);
 800083a:	2064      	movs	r0, #100	@ 0x64
 800083c:	f000 ff90 	bl	8001760 <HAL_Delay>
  ST7735_Init();
 8000840:	f000 fb2a 	bl	8000e98 <ST7735_Init>

  // Clear all black
  ST7735_FillScreen(ST7735_BLACK);
 8000844:	2000      	movs	r0, #0
 8000846:	f000 fc93 	bl	8001170 <ST7735_FillScreen>

  ST7735_draw_figure(35, 20, pirata, ST7735_WHITE);
 800084a:	4b2e      	ldr	r3, [pc, #184]	@ (8000904 <main+0xec>)
 800084c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8000850:	9200      	str	r2, [sp, #0]
 8000852:	cb0c      	ldmia	r3, {r2, r3}
 8000854:	2114      	movs	r1, #20
 8000856:	2023      	movs	r0, #35	@ 0x23
 8000858:	f000 fc9b 	bl	8001192 <ST7735_draw_figure>

  ST7735_WriteString(42, 5,"Press Start!", Font_7x10, ST7735_RED, ST7735_BLACK);
 800085c:	4b2a      	ldr	r3, [pc, #168]	@ (8000908 <main+0xf0>)
 800085e:	2200      	movs	r2, #0
 8000860:	9202      	str	r2, [sp, #8]
 8000862:	f44f 4278 	mov.w	r2, #63488	@ 0xf800
 8000866:	9201      	str	r2, [sp, #4]
 8000868:	685a      	ldr	r2, [r3, #4]
 800086a:	9200      	str	r2, [sp, #0]
 800086c:	681b      	ldr	r3, [r3, #0]
 800086e:	4a27      	ldr	r2, [pc, #156]	@ (800090c <main+0xf4>)
 8000870:	2105      	movs	r1, #5
 8000872:	202a      	movs	r0, #42	@ 0x2a
 8000874:	f000 fbd8 	bl	8001028 <ST7735_WriteString>

  // --------------------------------------------------------------------------------------
  // inicializa nr. aleatorio e segue programção

  while(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_15))// quando pressionar a tecla come�a o jogo
 8000878:	e002      	b.n	8000880 <main+0x68>
  {
	  semente_PRNG++;
 800087a:	687b      	ldr	r3, [r7, #4]
 800087c:	3301      	adds	r3, #1
 800087e:	607b      	str	r3, [r7, #4]
  while(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_15))// quando pressionar a tecla come�a o jogo
 8000880:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8000884:	4822      	ldr	r0, [pc, #136]	@ (8000910 <main+0xf8>)
 8000886:	f002 f95d 	bl	8002b44 <HAL_GPIO_ReadPin>
 800088a:	4603      	mov	r3, r0
 800088c:	2b00      	cmp	r3, #0
 800088e:	d1f4      	bne.n	800087a <main+0x62>
  }
  init_LFSR(semente_PRNG);	// inicializacao para geracao de numeros pseudoaleatorios
 8000890:	6878      	ldr	r0, [r7, #4]
 8000892:	f7ff fe8b 	bl	80005ac <init_LFSR>

  ST7735_FillScreen(ST7735_BLACK);
 8000896:	2000      	movs	r0, #0
 8000898:	f000 fc6a 	bl	8001170 <ST7735_FillScreen>

  HAL_ADC_Start_DMA(&hadc1,(uint32_t*)ADC_buffer,2);
 800089c:	2202      	movs	r2, #2
 800089e:	491d      	ldr	r1, [pc, #116]	@ (8000914 <main+0xfc>)
 80008a0:	481d      	ldr	r0, [pc, #116]	@ (8000918 <main+0x100>)
 80008a2:	f000 ffc5 	bl	8001830 <HAL_ADC_Start_DMA>

  /* USER CODE END 2 */

  /* Init scheduler */
  osKernelInitialize();
 80008a6:	f003 fb6f 	bl	8003f88 <osKernelInitialize>
  /* add queues, ... */
  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* creation of defaultTask */
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80008aa:	4a1c      	ldr	r2, [pc, #112]	@ (800091c <main+0x104>)
 80008ac:	2100      	movs	r1, #0
 80008ae:	481c      	ldr	r0, [pc, #112]	@ (8000920 <main+0x108>)
 80008b0:	f003 fbb4 	bl	800401c <osThreadNew>
 80008b4:	4603      	mov	r3, r0
 80008b6:	4a1b      	ldr	r2, [pc, #108]	@ (8000924 <main+0x10c>)
 80008b8:	6013      	str	r3, [r2, #0]

  /* USER CODE BEGIN RTOS_THREADS */
  /* add threads, ... */

    xTaskCreate(vTask_Print_ValorADC, "ADC do Joystick", 256, NULL, osPriorityNormal, NULL);
 80008ba:	2300      	movs	r3, #0
 80008bc:	9301      	str	r3, [sp, #4]
 80008be:	2318      	movs	r3, #24
 80008c0:	9300      	str	r3, [sp, #0]
 80008c2:	2300      	movs	r3, #0
 80008c4:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80008c8:	4917      	ldr	r1, [pc, #92]	@ (8000928 <main+0x110>)
 80008ca:	4818      	ldr	r0, [pc, #96]	@ (800092c <main+0x114>)
 80008cc:	f004 fa96 	bl	8004dfc <xTaskCreate>
  	xTaskCreate(vTask_Move_Tiro, "tiro", 256, NULL, osPriorityNormal, NULL);
 80008d0:	2300      	movs	r3, #0
 80008d2:	9301      	str	r3, [sp, #4]
 80008d4:	2318      	movs	r3, #24
 80008d6:	9300      	str	r3, [sp, #0]
 80008d8:	2300      	movs	r3, #0
 80008da:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80008de:	4914      	ldr	r1, [pc, #80]	@ (8000930 <main+0x118>)
 80008e0:	4814      	ldr	r0, [pc, #80]	@ (8000934 <main+0x11c>)
 80008e2:	f004 fa8b 	bl	8004dfc <xTaskCreate>
  	xTaskCreate(vTask_Move_Nave, "nave_anda", 256, NULL, osPriorityAboveNormal, NULL);
 80008e6:	2300      	movs	r3, #0
 80008e8:	9301      	str	r3, [sp, #4]
 80008ea:	2320      	movs	r3, #32
 80008ec:	9300      	str	r3, [sp, #0]
 80008ee:	2300      	movs	r3, #0
 80008f0:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80008f4:	4910      	ldr	r1, [pc, #64]	@ (8000938 <main+0x120>)
 80008f6:	4811      	ldr	r0, [pc, #68]	@ (800093c <main+0x124>)
 80008f8:	f004 fa80 	bl	8004dfc <xTaskCreate>
  /* USER CODE BEGIN RTOS_EVENTS */
  /* add events, ... */
  /* USER CODE END RTOS_EVENTS */

  /* Start scheduler */
  osKernelStart();
 80008fc:	f003 fb68 	bl	8003fd0 <osKernelStart>

  /* We should never get here as control is now taken by the scheduler */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8000900:	bf00      	nop
 8000902:	e7fd      	b.n	8000900 <main+0xe8>
 8000904:	20000000 	.word	0x20000000
 8000908:	20000010 	.word	0x20000010
 800090c:	08007510 	.word	0x08007510
 8000910:	40020800 	.word	0x40020800
 8000914:	200001a4 	.word	0x200001a4
 8000918:	200000a0 	.word	0x200000a0
 800091c:	0800822c 	.word	0x0800822c
 8000920:	08000c85 	.word	0x08000c85
 8000924:	200001a0 	.word	0x200001a0
 8000928:	08007520 	.word	0x08007520
 800092c:	0800077d 	.word	0x0800077d
 8000930:	08007530 	.word	0x08007530
 8000934:	080006c5 	.word	0x080006c5
 8000938:	08007538 	.word	0x08007538
 800093c:	080005f9 	.word	0x080005f9

08000940 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000940:	b580      	push	{r7, lr}
 8000942:	b094      	sub	sp, #80	@ 0x50
 8000944:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000946:	f107 0320 	add.w	r3, r7, #32
 800094a:	2230      	movs	r2, #48	@ 0x30
 800094c:	2100      	movs	r1, #0
 800094e:	4618      	mov	r0, r3
 8000950:	f006 f99a 	bl	8006c88 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000954:	f107 030c 	add.w	r3, r7, #12
 8000958:	2200      	movs	r2, #0
 800095a:	601a      	str	r2, [r3, #0]
 800095c:	605a      	str	r2, [r3, #4]
 800095e:	609a      	str	r2, [r3, #8]
 8000960:	60da      	str	r2, [r3, #12]
 8000962:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000964:	2300      	movs	r3, #0
 8000966:	60bb      	str	r3, [r7, #8]
 8000968:	4b27      	ldr	r3, [pc, #156]	@ (8000a08 <SystemClock_Config+0xc8>)
 800096a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800096c:	4a26      	ldr	r2, [pc, #152]	@ (8000a08 <SystemClock_Config+0xc8>)
 800096e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000972:	6413      	str	r3, [r2, #64]	@ 0x40
 8000974:	4b24      	ldr	r3, [pc, #144]	@ (8000a08 <SystemClock_Config+0xc8>)
 8000976:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000978:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800097c:	60bb      	str	r3, [r7, #8]
 800097e:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000980:	2300      	movs	r3, #0
 8000982:	607b      	str	r3, [r7, #4]
 8000984:	4b21      	ldr	r3, [pc, #132]	@ (8000a0c <SystemClock_Config+0xcc>)
 8000986:	681b      	ldr	r3, [r3, #0]
 8000988:	4a20      	ldr	r2, [pc, #128]	@ (8000a0c <SystemClock_Config+0xcc>)
 800098a:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800098e:	6013      	str	r3, [r2, #0]
 8000990:	4b1e      	ldr	r3, [pc, #120]	@ (8000a0c <SystemClock_Config+0xcc>)
 8000992:	681b      	ldr	r3, [r3, #0]
 8000994:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8000998:	607b      	str	r3, [r7, #4]
 800099a:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800099c:	2302      	movs	r3, #2
 800099e:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80009a0:	2301      	movs	r3, #1
 80009a2:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80009a4:	2310      	movs	r3, #16
 80009a6:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80009a8:	2302      	movs	r3, #2
 80009aa:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80009ac:	2300      	movs	r3, #0
 80009ae:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLM = 16;
 80009b0:	2310      	movs	r3, #16
 80009b2:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLN = 192;
 80009b4:	23c0      	movs	r3, #192	@ 0xc0
 80009b6:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80009b8:	2302      	movs	r3, #2
 80009ba:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80009bc:	2304      	movs	r3, #4
 80009be:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80009c0:	f107 0320 	add.w	r3, r7, #32
 80009c4:	4618      	mov	r0, r3
 80009c6:	f002 f909 	bl	8002bdc <HAL_RCC_OscConfig>
 80009ca:	4603      	mov	r3, r0
 80009cc:	2b00      	cmp	r3, #0
 80009ce:	d001      	beq.n	80009d4 <SystemClock_Config+0x94>
  {
    Error_Handler();
 80009d0:	f000 f97a 	bl	8000cc8 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80009d4:	230f      	movs	r3, #15
 80009d6:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80009d8:	2302      	movs	r3, #2
 80009da:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80009dc:	2300      	movs	r3, #0
 80009de:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80009e0:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80009e4:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80009e6:	2300      	movs	r3, #0
 80009e8:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 80009ea:	f107 030c 	add.w	r3, r7, #12
 80009ee:	2103      	movs	r1, #3
 80009f0:	4618      	mov	r0, r3
 80009f2:	f002 fb6b 	bl	80030cc <HAL_RCC_ClockConfig>
 80009f6:	4603      	mov	r3, r0
 80009f8:	2b00      	cmp	r3, #0
 80009fa:	d001      	beq.n	8000a00 <SystemClock_Config+0xc0>
  {
    Error_Handler();
 80009fc:	f000 f964 	bl	8000cc8 <Error_Handler>
  }
}
 8000a00:	bf00      	nop
 8000a02:	3750      	adds	r7, #80	@ 0x50
 8000a04:	46bd      	mov	sp, r7
 8000a06:	bd80      	pop	{r7, pc}
 8000a08:	40023800 	.word	0x40023800
 8000a0c:	40007000 	.word	0x40007000

08000a10 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8000a10:	b580      	push	{r7, lr}
 8000a12:	b084      	sub	sp, #16
 8000a14:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8000a16:	463b      	mov	r3, r7
 8000a18:	2200      	movs	r2, #0
 8000a1a:	601a      	str	r2, [r3, #0]
 8000a1c:	605a      	str	r2, [r3, #4]
 8000a1e:	609a      	str	r2, [r3, #8]
 8000a20:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8000a22:	4b28      	ldr	r3, [pc, #160]	@ (8000ac4 <MX_ADC1_Init+0xb4>)
 8000a24:	4a28      	ldr	r2, [pc, #160]	@ (8000ac8 <MX_ADC1_Init+0xb8>)
 8000a26:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8000a28:	4b26      	ldr	r3, [pc, #152]	@ (8000ac4 <MX_ADC1_Init+0xb4>)
 8000a2a:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 8000a2e:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8000a30:	4b24      	ldr	r3, [pc, #144]	@ (8000ac4 <MX_ADC1_Init+0xb4>)
 8000a32:	2200      	movs	r2, #0
 8000a34:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = ENABLE;
 8000a36:	4b23      	ldr	r3, [pc, #140]	@ (8000ac4 <MX_ADC1_Init+0xb4>)
 8000a38:	2201      	movs	r2, #1
 8000a3a:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = ENABLE;
 8000a3c:	4b21      	ldr	r3, [pc, #132]	@ (8000ac4 <MX_ADC1_Init+0xb4>)
 8000a3e:	2201      	movs	r2, #1
 8000a40:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8000a42:	4b20      	ldr	r3, [pc, #128]	@ (8000ac4 <MX_ADC1_Init+0xb4>)
 8000a44:	2200      	movs	r2, #0
 8000a46:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000a4a:	4b1e      	ldr	r3, [pc, #120]	@ (8000ac4 <MX_ADC1_Init+0xb4>)
 8000a4c:	2200      	movs	r2, #0
 8000a4e:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000a50:	4b1c      	ldr	r3, [pc, #112]	@ (8000ac4 <MX_ADC1_Init+0xb4>)
 8000a52:	4a1e      	ldr	r2, [pc, #120]	@ (8000acc <MX_ADC1_Init+0xbc>)
 8000a54:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8000a56:	4b1b      	ldr	r3, [pc, #108]	@ (8000ac4 <MX_ADC1_Init+0xb4>)
 8000a58:	2200      	movs	r2, #0
 8000a5a:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 2;
 8000a5c:	4b19      	ldr	r3, [pc, #100]	@ (8000ac4 <MX_ADC1_Init+0xb4>)
 8000a5e:	2202      	movs	r2, #2
 8000a60:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = ENABLE;
 8000a62:	4b18      	ldr	r3, [pc, #96]	@ (8000ac4 <MX_ADC1_Init+0xb4>)
 8000a64:	2201      	movs	r2, #1
 8000a66:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000a6a:	4b16      	ldr	r3, [pc, #88]	@ (8000ac4 <MX_ADC1_Init+0xb4>)
 8000a6c:	2201      	movs	r2, #1
 8000a6e:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8000a70:	4814      	ldr	r0, [pc, #80]	@ (8000ac4 <MX_ADC1_Init+0xb4>)
 8000a72:	f000 fe99 	bl	80017a8 <HAL_ADC_Init>
 8000a76:	4603      	mov	r3, r0
 8000a78:	2b00      	cmp	r3, #0
 8000a7a:	d001      	beq.n	8000a80 <MX_ADC1_Init+0x70>
  {
    Error_Handler();
 8000a7c:	f000 f924 	bl	8000cc8 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_0;
 8000a80:	2300      	movs	r3, #0
 8000a82:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8000a84:	2301      	movs	r3, #1
 8000a86:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8000a88:	2307      	movs	r3, #7
 8000a8a:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000a8c:	463b      	mov	r3, r7
 8000a8e:	4619      	mov	r1, r3
 8000a90:	480c      	ldr	r0, [pc, #48]	@ (8000ac4 <MX_ADC1_Init+0xb4>)
 8000a92:	f000 ffd1 	bl	8001a38 <HAL_ADC_ConfigChannel>
 8000a96:	4603      	mov	r3, r0
 8000a98:	2b00      	cmp	r3, #0
 8000a9a:	d001      	beq.n	8000aa0 <MX_ADC1_Init+0x90>
  {
    Error_Handler();
 8000a9c:	f000 f914 	bl	8000cc8 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_1;
 8000aa0:	2301      	movs	r3, #1
 8000aa2:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 2;
 8000aa4:	2302      	movs	r3, #2
 8000aa6:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000aa8:	463b      	mov	r3, r7
 8000aaa:	4619      	mov	r1, r3
 8000aac:	4805      	ldr	r0, [pc, #20]	@ (8000ac4 <MX_ADC1_Init+0xb4>)
 8000aae:	f000 ffc3 	bl	8001a38 <HAL_ADC_ConfigChannel>
 8000ab2:	4603      	mov	r3, r0
 8000ab4:	2b00      	cmp	r3, #0
 8000ab6:	d001      	beq.n	8000abc <MX_ADC1_Init+0xac>
  {
    Error_Handler();
 8000ab8:	f000 f906 	bl	8000cc8 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8000abc:	bf00      	nop
 8000abe:	3710      	adds	r7, #16
 8000ac0:	46bd      	mov	sp, r7
 8000ac2:	bd80      	pop	{r7, pc}
 8000ac4:	200000a0 	.word	0x200000a0
 8000ac8:	40012000 	.word	0x40012000
 8000acc:	0f000001 	.word	0x0f000001

08000ad0 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8000ad0:	b580      	push	{r7, lr}
 8000ad2:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8000ad4:	4b17      	ldr	r3, [pc, #92]	@ (8000b34 <MX_SPI1_Init+0x64>)
 8000ad6:	4a18      	ldr	r2, [pc, #96]	@ (8000b38 <MX_SPI1_Init+0x68>)
 8000ad8:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8000ada:	4b16      	ldr	r3, [pc, #88]	@ (8000b34 <MX_SPI1_Init+0x64>)
 8000adc:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8000ae0:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8000ae2:	4b14      	ldr	r3, [pc, #80]	@ (8000b34 <MX_SPI1_Init+0x64>)
 8000ae4:	2200      	movs	r2, #0
 8000ae6:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8000ae8:	4b12      	ldr	r3, [pc, #72]	@ (8000b34 <MX_SPI1_Init+0x64>)
 8000aea:	2200      	movs	r2, #0
 8000aec:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8000aee:	4b11      	ldr	r3, [pc, #68]	@ (8000b34 <MX_SPI1_Init+0x64>)
 8000af0:	2200      	movs	r2, #0
 8000af2:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000af4:	4b0f      	ldr	r3, [pc, #60]	@ (8000b34 <MX_SPI1_Init+0x64>)
 8000af6:	2200      	movs	r2, #0
 8000af8:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8000afa:	4b0e      	ldr	r3, [pc, #56]	@ (8000b34 <MX_SPI1_Init+0x64>)
 8000afc:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000b00:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 8000b02:	4b0c      	ldr	r3, [pc, #48]	@ (8000b34 <MX_SPI1_Init+0x64>)
 8000b04:	2210      	movs	r2, #16
 8000b06:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000b08:	4b0a      	ldr	r3, [pc, #40]	@ (8000b34 <MX_SPI1_Init+0x64>)
 8000b0a:	2200      	movs	r2, #0
 8000b0c:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8000b0e:	4b09      	ldr	r3, [pc, #36]	@ (8000b34 <MX_SPI1_Init+0x64>)
 8000b10:	2200      	movs	r2, #0
 8000b12:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000b14:	4b07      	ldr	r3, [pc, #28]	@ (8000b34 <MX_SPI1_Init+0x64>)
 8000b16:	2200      	movs	r2, #0
 8000b18:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi1.Init.CRCPolynomial = 10;
 8000b1a:	4b06      	ldr	r3, [pc, #24]	@ (8000b34 <MX_SPI1_Init+0x64>)
 8000b1c:	220a      	movs	r2, #10
 8000b1e:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8000b20:	4804      	ldr	r0, [pc, #16]	@ (8000b34 <MX_SPI1_Init+0x64>)
 8000b22:	f002 fcd1 	bl	80034c8 <HAL_SPI_Init>
 8000b26:	4603      	mov	r3, r0
 8000b28:	2b00      	cmp	r3, #0
 8000b2a:	d001      	beq.n	8000b30 <MX_SPI1_Init+0x60>
  {
    Error_Handler();
 8000b2c:	f000 f8cc 	bl	8000cc8 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8000b30:	bf00      	nop
 8000b32:	bd80      	pop	{r7, pc}
 8000b34:	20000148 	.word	0x20000148
 8000b38:	40013000 	.word	0x40013000

08000b3c <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8000b3c:	b580      	push	{r7, lr}
 8000b3e:	b082      	sub	sp, #8
 8000b40:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA2_CLK_ENABLE();
 8000b42:	2300      	movs	r3, #0
 8000b44:	607b      	str	r3, [r7, #4]
 8000b46:	4b0c      	ldr	r3, [pc, #48]	@ (8000b78 <MX_DMA_Init+0x3c>)
 8000b48:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000b4a:	4a0b      	ldr	r2, [pc, #44]	@ (8000b78 <MX_DMA_Init+0x3c>)
 8000b4c:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8000b50:	6313      	str	r3, [r2, #48]	@ 0x30
 8000b52:	4b09      	ldr	r3, [pc, #36]	@ (8000b78 <MX_DMA_Init+0x3c>)
 8000b54:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000b56:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8000b5a:	607b      	str	r3, [r7, #4]
 8000b5c:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA2_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 5, 0);
 8000b5e:	2200      	movs	r2, #0
 8000b60:	2105      	movs	r1, #5
 8000b62:	2038      	movs	r0, #56	@ 0x38
 8000b64:	f001 fad0 	bl	8002108 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 8000b68:	2038      	movs	r0, #56	@ 0x38
 8000b6a:	f001 fae9 	bl	8002140 <HAL_NVIC_EnableIRQ>

}
 8000b6e:	bf00      	nop
 8000b70:	3708      	adds	r7, #8
 8000b72:	46bd      	mov	sp, r7
 8000b74:	bd80      	pop	{r7, pc}
 8000b76:	bf00      	nop
 8000b78:	40023800 	.word	0x40023800

08000b7c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000b7c:	b580      	push	{r7, lr}
 8000b7e:	b08a      	sub	sp, #40	@ 0x28
 8000b80:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b82:	f107 0314 	add.w	r3, r7, #20
 8000b86:	2200      	movs	r2, #0
 8000b88:	601a      	str	r2, [r3, #0]
 8000b8a:	605a      	str	r2, [r3, #4]
 8000b8c:	609a      	str	r2, [r3, #8]
 8000b8e:	60da      	str	r2, [r3, #12]
 8000b90:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000b92:	2300      	movs	r3, #0
 8000b94:	613b      	str	r3, [r7, #16]
 8000b96:	4b38      	ldr	r3, [pc, #224]	@ (8000c78 <MX_GPIO_Init+0xfc>)
 8000b98:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000b9a:	4a37      	ldr	r2, [pc, #220]	@ (8000c78 <MX_GPIO_Init+0xfc>)
 8000b9c:	f043 0304 	orr.w	r3, r3, #4
 8000ba0:	6313      	str	r3, [r2, #48]	@ 0x30
 8000ba2:	4b35      	ldr	r3, [pc, #212]	@ (8000c78 <MX_GPIO_Init+0xfc>)
 8000ba4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000ba6:	f003 0304 	and.w	r3, r3, #4
 8000baa:	613b      	str	r3, [r7, #16]
 8000bac:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000bae:	2300      	movs	r3, #0
 8000bb0:	60fb      	str	r3, [r7, #12]
 8000bb2:	4b31      	ldr	r3, [pc, #196]	@ (8000c78 <MX_GPIO_Init+0xfc>)
 8000bb4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000bb6:	4a30      	ldr	r2, [pc, #192]	@ (8000c78 <MX_GPIO_Init+0xfc>)
 8000bb8:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000bbc:	6313      	str	r3, [r2, #48]	@ 0x30
 8000bbe:	4b2e      	ldr	r3, [pc, #184]	@ (8000c78 <MX_GPIO_Init+0xfc>)
 8000bc0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000bc2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000bc6:	60fb      	str	r3, [r7, #12]
 8000bc8:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000bca:	2300      	movs	r3, #0
 8000bcc:	60bb      	str	r3, [r7, #8]
 8000bce:	4b2a      	ldr	r3, [pc, #168]	@ (8000c78 <MX_GPIO_Init+0xfc>)
 8000bd0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000bd2:	4a29      	ldr	r2, [pc, #164]	@ (8000c78 <MX_GPIO_Init+0xfc>)
 8000bd4:	f043 0301 	orr.w	r3, r3, #1
 8000bd8:	6313      	str	r3, [r2, #48]	@ 0x30
 8000bda:	4b27      	ldr	r3, [pc, #156]	@ (8000c78 <MX_GPIO_Init+0xfc>)
 8000bdc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000bde:	f003 0301 	and.w	r3, r3, #1
 8000be2:	60bb      	str	r3, [r7, #8]
 8000be4:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000be6:	2300      	movs	r3, #0
 8000be8:	607b      	str	r3, [r7, #4]
 8000bea:	4b23      	ldr	r3, [pc, #140]	@ (8000c78 <MX_GPIO_Init+0xfc>)
 8000bec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000bee:	4a22      	ldr	r2, [pc, #136]	@ (8000c78 <MX_GPIO_Init+0xfc>)
 8000bf0:	f043 0302 	orr.w	r3, r3, #2
 8000bf4:	6313      	str	r3, [r2, #48]	@ 0x30
 8000bf6:	4b20      	ldr	r3, [pc, #128]	@ (8000c78 <MX_GPIO_Init+0xfc>)
 8000bf8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000bfa:	f003 0302 	and.w	r3, r3, #2
 8000bfe:	607b      	str	r3, [r7, #4]
 8000c00:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 8000c02:	2200      	movs	r2, #0
 8000c04:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000c08:	481c      	ldr	r0, [pc, #112]	@ (8000c7c <MX_GPIO_Init+0x100>)
 8000c0a:	f001 ffb3 	bl	8002b74 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, CS_Pin|RST_Pin|DC_Pin, GPIO_PIN_RESET);
 8000c0e:	2200      	movs	r2, #0
 8000c10:	f44f 41e0 	mov.w	r1, #28672	@ 0x7000
 8000c14:	481a      	ldr	r0, [pc, #104]	@ (8000c80 <MX_GPIO_Init+0x104>)
 8000c16:	f001 ffad 	bl	8002b74 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : LED_Pin */
  GPIO_InitStruct.Pin = LED_Pin;
 8000c1a:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8000c1e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c20:	2301      	movs	r3, #1
 8000c22:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c24:	2300      	movs	r3, #0
 8000c26:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c28:	2300      	movs	r3, #0
 8000c2a:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 8000c2c:	f107 0314 	add.w	r3, r7, #20
 8000c30:	4619      	mov	r1, r3
 8000c32:	4812      	ldr	r0, [pc, #72]	@ (8000c7c <MX_GPIO_Init+0x100>)
 8000c34:	f001 fe02 	bl	800283c <HAL_GPIO_Init>

  /*Configure GPIO pin : PC15 */
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8000c38:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8000c3c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000c3e:	2300      	movs	r3, #0
 8000c40:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000c42:	2301      	movs	r3, #1
 8000c44:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000c46:	f107 0314 	add.w	r3, r7, #20
 8000c4a:	4619      	mov	r1, r3
 8000c4c:	480b      	ldr	r0, [pc, #44]	@ (8000c7c <MX_GPIO_Init+0x100>)
 8000c4e:	f001 fdf5 	bl	800283c <HAL_GPIO_Init>

  /*Configure GPIO pins : CS_Pin RST_Pin DC_Pin */
  GPIO_InitStruct.Pin = CS_Pin|RST_Pin|DC_Pin;
 8000c52:	f44f 43e0 	mov.w	r3, #28672	@ 0x7000
 8000c56:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c58:	2301      	movs	r3, #1
 8000c5a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c5c:	2300      	movs	r3, #0
 8000c5e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c60:	2300      	movs	r3, #0
 8000c62:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000c64:	f107 0314 	add.w	r3, r7, #20
 8000c68:	4619      	mov	r1, r3
 8000c6a:	4805      	ldr	r0, [pc, #20]	@ (8000c80 <MX_GPIO_Init+0x104>)
 8000c6c:	f001 fde6 	bl	800283c <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000c70:	bf00      	nop
 8000c72:	3728      	adds	r7, #40	@ 0x28
 8000c74:	46bd      	mov	sp, r7
 8000c76:	bd80      	pop	{r7, pc}
 8000c78:	40023800 	.word	0x40023800
 8000c7c:	40020800 	.word	0x40020800
 8000c80:	40020400 	.word	0x40020400

08000c84 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8000c84:	b580      	push	{r7, lr}
 8000c86:	b082      	sub	sp, #8
 8000c88:	af00      	add	r7, sp, #0
 8000c8a:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
	while(1)
	{
		  HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 8000c8c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000c90:	4803      	ldr	r0, [pc, #12]	@ (8000ca0 <StartDefaultTask+0x1c>)
 8000c92:	f001 ff88 	bl	8002ba6 <HAL_GPIO_TogglePin>

		  osDelay(200);
 8000c96:	20c8      	movs	r0, #200	@ 0xc8
 8000c98:	f003 fa52 	bl	8004140 <osDelay>
		  HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 8000c9c:	bf00      	nop
 8000c9e:	e7f5      	b.n	8000c8c <StartDefaultTask+0x8>
 8000ca0:	40020800 	.word	0x40020800

08000ca4 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8000ca4:	b580      	push	{r7, lr}
 8000ca6:	b082      	sub	sp, #8
 8000ca8:	af00      	add	r7, sp, #0
 8000caa:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM4) {
 8000cac:	687b      	ldr	r3, [r7, #4]
 8000cae:	681b      	ldr	r3, [r3, #0]
 8000cb0:	4a04      	ldr	r2, [pc, #16]	@ (8000cc4 <HAL_TIM_PeriodElapsedCallback+0x20>)
 8000cb2:	4293      	cmp	r3, r2
 8000cb4:	d101      	bne.n	8000cba <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 8000cb6:	f000 fd33 	bl	8001720 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8000cba:	bf00      	nop
 8000cbc:	3708      	adds	r7, #8
 8000cbe:	46bd      	mov	sp, r7
 8000cc0:	bd80      	pop	{r7, pc}
 8000cc2:	bf00      	nop
 8000cc4:	40000800 	.word	0x40000800

08000cc8 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000cc8:	b480      	push	{r7}
 8000cca:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000ccc:	b672      	cpsid	i
}
 8000cce:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000cd0:	bf00      	nop
 8000cd2:	e7fd      	b.n	8000cd0 <Error_Handler+0x8>

08000cd4 <ST7735_Select>:
    ST7735_NORON  ,    DELAY, //  3: Normal display on, no args, w/delay
      10,                     //     10 ms delay
    ST7735_DISPON ,    DELAY, //  4: Main screen turn on, no args w/delay
      100 };                  //     100 ms delay

static void ST7735_Select() {
 8000cd4:	b580      	push	{r7, lr}
 8000cd6:	af00      	add	r7, sp, #0
    HAL_GPIO_WritePin(ST7735_CS_GPIO_Port, ST7735_CS_Pin, GPIO_PIN_RESET);
 8000cd8:	2200      	movs	r2, #0
 8000cda:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000cde:	4802      	ldr	r0, [pc, #8]	@ (8000ce8 <ST7735_Select+0x14>)
 8000ce0:	f001 ff48 	bl	8002b74 <HAL_GPIO_WritePin>
}
 8000ce4:	bf00      	nop
 8000ce6:	bd80      	pop	{r7, pc}
 8000ce8:	40020400 	.word	0x40020400

08000cec <ST7735_Unselect>:

void ST7735_Unselect() {
 8000cec:	b580      	push	{r7, lr}
 8000cee:	af00      	add	r7, sp, #0
    HAL_GPIO_WritePin(ST7735_CS_GPIO_Port, ST7735_CS_Pin, GPIO_PIN_SET);
 8000cf0:	2201      	movs	r2, #1
 8000cf2:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000cf6:	4802      	ldr	r0, [pc, #8]	@ (8000d00 <ST7735_Unselect+0x14>)
 8000cf8:	f001 ff3c 	bl	8002b74 <HAL_GPIO_WritePin>
}
 8000cfc:	bf00      	nop
 8000cfe:	bd80      	pop	{r7, pc}
 8000d00:	40020400 	.word	0x40020400

08000d04 <ST7735_Reset>:

static void ST7735_Reset() {
 8000d04:	b580      	push	{r7, lr}
 8000d06:	af00      	add	r7, sp, #0
    HAL_GPIO_WritePin(ST7735_RES_GPIO_Port, ST7735_RES_Pin, GPIO_PIN_RESET);
 8000d08:	2200      	movs	r2, #0
 8000d0a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000d0e:	4807      	ldr	r0, [pc, #28]	@ (8000d2c <ST7735_Reset+0x28>)
 8000d10:	f001 ff30 	bl	8002b74 <HAL_GPIO_WritePin>
    HAL_Delay(5);
 8000d14:	2005      	movs	r0, #5
 8000d16:	f000 fd23 	bl	8001760 <HAL_Delay>
    HAL_GPIO_WritePin(ST7735_RES_GPIO_Port, ST7735_RES_Pin, GPIO_PIN_SET);
 8000d1a:	2201      	movs	r2, #1
 8000d1c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000d20:	4802      	ldr	r0, [pc, #8]	@ (8000d2c <ST7735_Reset+0x28>)
 8000d22:	f001 ff27 	bl	8002b74 <HAL_GPIO_WritePin>
}
 8000d26:	bf00      	nop
 8000d28:	bd80      	pop	{r7, pc}
 8000d2a:	bf00      	nop
 8000d2c:	40020400 	.word	0x40020400

08000d30 <ST7735_WriteCommand>:

static void ST7735_WriteCommand(uint8_t cmd) {
 8000d30:	b580      	push	{r7, lr}
 8000d32:	b082      	sub	sp, #8
 8000d34:	af00      	add	r7, sp, #0
 8000d36:	4603      	mov	r3, r0
 8000d38:	71fb      	strb	r3, [r7, #7]
    HAL_GPIO_WritePin(ST7735_DC_GPIO_Port, ST7735_DC_Pin, GPIO_PIN_RESET);
 8000d3a:	2200      	movs	r2, #0
 8000d3c:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000d40:	4806      	ldr	r0, [pc, #24]	@ (8000d5c <ST7735_WriteCommand+0x2c>)
 8000d42:	f001 ff17 	bl	8002b74 <HAL_GPIO_WritePin>
    HAL_SPI_Transmit(&ST7735_SPI_PORT, &cmd, sizeof(cmd), HAL_MAX_DELAY);
 8000d46:	1df9      	adds	r1, r7, #7
 8000d48:	f04f 33ff 	mov.w	r3, #4294967295
 8000d4c:	2201      	movs	r2, #1
 8000d4e:	4804      	ldr	r0, [pc, #16]	@ (8000d60 <ST7735_WriteCommand+0x30>)
 8000d50:	f002 fc43 	bl	80035da <HAL_SPI_Transmit>
}
 8000d54:	bf00      	nop
 8000d56:	3708      	adds	r7, #8
 8000d58:	46bd      	mov	sp, r7
 8000d5a:	bd80      	pop	{r7, pc}
 8000d5c:	40020400 	.word	0x40020400
 8000d60:	20000148 	.word	0x20000148

08000d64 <ST7735_WriteData>:

static void ST7735_WriteData(uint8_t* buff, size_t buff_size) {
 8000d64:	b580      	push	{r7, lr}
 8000d66:	b082      	sub	sp, #8
 8000d68:	af00      	add	r7, sp, #0
 8000d6a:	6078      	str	r0, [r7, #4]
 8000d6c:	6039      	str	r1, [r7, #0]
    HAL_GPIO_WritePin(ST7735_DC_GPIO_Port, ST7735_DC_Pin, GPIO_PIN_SET);
 8000d6e:	2201      	movs	r2, #1
 8000d70:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000d74:	4807      	ldr	r0, [pc, #28]	@ (8000d94 <ST7735_WriteData+0x30>)
 8000d76:	f001 fefd 	bl	8002b74 <HAL_GPIO_WritePin>
    HAL_SPI_Transmit(&ST7735_SPI_PORT, buff, buff_size, HAL_MAX_DELAY);
 8000d7a:	683b      	ldr	r3, [r7, #0]
 8000d7c:	b29a      	uxth	r2, r3
 8000d7e:	f04f 33ff 	mov.w	r3, #4294967295
 8000d82:	6879      	ldr	r1, [r7, #4]
 8000d84:	4804      	ldr	r0, [pc, #16]	@ (8000d98 <ST7735_WriteData+0x34>)
 8000d86:	f002 fc28 	bl	80035da <HAL_SPI_Transmit>
}
 8000d8a:	bf00      	nop
 8000d8c:	3708      	adds	r7, #8
 8000d8e:	46bd      	mov	sp, r7
 8000d90:	bd80      	pop	{r7, pc}
 8000d92:	bf00      	nop
 8000d94:	40020400 	.word	0x40020400
 8000d98:	20000148 	.word	0x20000148

08000d9c <ST7735_ExecuteCommandList>:

static void ST7735_ExecuteCommandList(const uint8_t *addr) {
 8000d9c:	b580      	push	{r7, lr}
 8000d9e:	b084      	sub	sp, #16
 8000da0:	af00      	add	r7, sp, #0
 8000da2:	6078      	str	r0, [r7, #4]
    uint8_t numCommands, numArgs;
    uint16_t ms;

    numCommands = *addr++;
 8000da4:	687b      	ldr	r3, [r7, #4]
 8000da6:	1c5a      	adds	r2, r3, #1
 8000da8:	607a      	str	r2, [r7, #4]
 8000daa:	781b      	ldrb	r3, [r3, #0]
 8000dac:	73fb      	strb	r3, [r7, #15]
    while(numCommands--) {
 8000dae:	e034      	b.n	8000e1a <ST7735_ExecuteCommandList+0x7e>
        uint8_t cmd = *addr++;
 8000db0:	687b      	ldr	r3, [r7, #4]
 8000db2:	1c5a      	adds	r2, r3, #1
 8000db4:	607a      	str	r2, [r7, #4]
 8000db6:	781b      	ldrb	r3, [r3, #0]
 8000db8:	72fb      	strb	r3, [r7, #11]
        ST7735_WriteCommand(cmd);
 8000dba:	7afb      	ldrb	r3, [r7, #11]
 8000dbc:	4618      	mov	r0, r3
 8000dbe:	f7ff ffb7 	bl	8000d30 <ST7735_WriteCommand>

        numArgs = *addr++;
 8000dc2:	687b      	ldr	r3, [r7, #4]
 8000dc4:	1c5a      	adds	r2, r3, #1
 8000dc6:	607a      	str	r2, [r7, #4]
 8000dc8:	781b      	ldrb	r3, [r3, #0]
 8000dca:	72bb      	strb	r3, [r7, #10]
        // If high bit set, delay follows args
        ms = numArgs & DELAY;
 8000dcc:	7abb      	ldrb	r3, [r7, #10]
 8000dce:	b29b      	uxth	r3, r3
 8000dd0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000dd4:	81bb      	strh	r3, [r7, #12]
        numArgs &= ~DELAY;
 8000dd6:	7abb      	ldrb	r3, [r7, #10]
 8000dd8:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8000ddc:	72bb      	strb	r3, [r7, #10]
        if(numArgs) {
 8000dde:	7abb      	ldrb	r3, [r7, #10]
 8000de0:	2b00      	cmp	r3, #0
 8000de2:	d008      	beq.n	8000df6 <ST7735_ExecuteCommandList+0x5a>
            ST7735_WriteData((uint8_t*)addr, numArgs);
 8000de4:	7abb      	ldrb	r3, [r7, #10]
 8000de6:	4619      	mov	r1, r3
 8000de8:	6878      	ldr	r0, [r7, #4]
 8000dea:	f7ff ffbb 	bl	8000d64 <ST7735_WriteData>
            addr += numArgs;
 8000dee:	7abb      	ldrb	r3, [r7, #10]
 8000df0:	687a      	ldr	r2, [r7, #4]
 8000df2:	4413      	add	r3, r2
 8000df4:	607b      	str	r3, [r7, #4]
        }

        if(ms) {
 8000df6:	89bb      	ldrh	r3, [r7, #12]
 8000df8:	2b00      	cmp	r3, #0
 8000dfa:	d00e      	beq.n	8000e1a <ST7735_ExecuteCommandList+0x7e>
            ms = *addr++;
 8000dfc:	687b      	ldr	r3, [r7, #4]
 8000dfe:	1c5a      	adds	r2, r3, #1
 8000e00:	607a      	str	r2, [r7, #4]
 8000e02:	781b      	ldrb	r3, [r3, #0]
 8000e04:	81bb      	strh	r3, [r7, #12]
            if(ms == 255) ms = 500;
 8000e06:	89bb      	ldrh	r3, [r7, #12]
 8000e08:	2bff      	cmp	r3, #255	@ 0xff
 8000e0a:	d102      	bne.n	8000e12 <ST7735_ExecuteCommandList+0x76>
 8000e0c:	f44f 73fa 	mov.w	r3, #500	@ 0x1f4
 8000e10:	81bb      	strh	r3, [r7, #12]
            HAL_Delay(ms);
 8000e12:	89bb      	ldrh	r3, [r7, #12]
 8000e14:	4618      	mov	r0, r3
 8000e16:	f000 fca3 	bl	8001760 <HAL_Delay>
    while(numCommands--) {
 8000e1a:	7bfb      	ldrb	r3, [r7, #15]
 8000e1c:	1e5a      	subs	r2, r3, #1
 8000e1e:	73fa      	strb	r2, [r7, #15]
 8000e20:	2b00      	cmp	r3, #0
 8000e22:	d1c5      	bne.n	8000db0 <ST7735_ExecuteCommandList+0x14>
        }
    }
}
 8000e24:	bf00      	nop
 8000e26:	bf00      	nop
 8000e28:	3710      	adds	r7, #16
 8000e2a:	46bd      	mov	sp, r7
 8000e2c:	bd80      	pop	{r7, pc}

08000e2e <ST7735_SetAddressWindow>:

static void ST7735_SetAddressWindow(uint8_t x0, uint8_t y0, uint8_t x1, uint8_t y1) {
 8000e2e:	b590      	push	{r4, r7, lr}
 8000e30:	b085      	sub	sp, #20
 8000e32:	af00      	add	r7, sp, #0
 8000e34:	4604      	mov	r4, r0
 8000e36:	4608      	mov	r0, r1
 8000e38:	4611      	mov	r1, r2
 8000e3a:	461a      	mov	r2, r3
 8000e3c:	4623      	mov	r3, r4
 8000e3e:	71fb      	strb	r3, [r7, #7]
 8000e40:	4603      	mov	r3, r0
 8000e42:	71bb      	strb	r3, [r7, #6]
 8000e44:	460b      	mov	r3, r1
 8000e46:	717b      	strb	r3, [r7, #5]
 8000e48:	4613      	mov	r3, r2
 8000e4a:	713b      	strb	r3, [r7, #4]
    // column address set
    ST7735_WriteCommand(ST7735_CASET);
 8000e4c:	202a      	movs	r0, #42	@ 0x2a
 8000e4e:	f7ff ff6f 	bl	8000d30 <ST7735_WriteCommand>
    uint8_t data[] = { 0x00, x0 + ST7735_XSTART, 0x00, x1 + ST7735_XSTART };
 8000e52:	2300      	movs	r3, #0
 8000e54:	733b      	strb	r3, [r7, #12]
 8000e56:	79fb      	ldrb	r3, [r7, #7]
 8000e58:	737b      	strb	r3, [r7, #13]
 8000e5a:	2300      	movs	r3, #0
 8000e5c:	73bb      	strb	r3, [r7, #14]
 8000e5e:	797b      	ldrb	r3, [r7, #5]
 8000e60:	73fb      	strb	r3, [r7, #15]
    ST7735_WriteData(data, sizeof(data));
 8000e62:	f107 030c 	add.w	r3, r7, #12
 8000e66:	2104      	movs	r1, #4
 8000e68:	4618      	mov	r0, r3
 8000e6a:	f7ff ff7b 	bl	8000d64 <ST7735_WriteData>

    // row address set
    ST7735_WriteCommand(ST7735_RASET);
 8000e6e:	202b      	movs	r0, #43	@ 0x2b
 8000e70:	f7ff ff5e 	bl	8000d30 <ST7735_WriteCommand>
    data[1] = y0 + ST7735_YSTART;
 8000e74:	79bb      	ldrb	r3, [r7, #6]
 8000e76:	737b      	strb	r3, [r7, #13]
    data[3] = y1 + ST7735_YSTART;
 8000e78:	793b      	ldrb	r3, [r7, #4]
 8000e7a:	73fb      	strb	r3, [r7, #15]
    ST7735_WriteData(data, sizeof(data));
 8000e7c:	f107 030c 	add.w	r3, r7, #12
 8000e80:	2104      	movs	r1, #4
 8000e82:	4618      	mov	r0, r3
 8000e84:	f7ff ff6e 	bl	8000d64 <ST7735_WriteData>

    // write to RAM
    ST7735_WriteCommand(ST7735_RAMWR);
 8000e88:	202c      	movs	r0, #44	@ 0x2c
 8000e8a:	f7ff ff51 	bl	8000d30 <ST7735_WriteCommand>
}
 8000e8e:	bf00      	nop
 8000e90:	3714      	adds	r7, #20
 8000e92:	46bd      	mov	sp, r7
 8000e94:	bd90      	pop	{r4, r7, pc}
	...

08000e98 <ST7735_Init>:

void ST7735_Init() {
 8000e98:	b580      	push	{r7, lr}
 8000e9a:	af00      	add	r7, sp, #0
    ST7735_Select();
 8000e9c:	f7ff ff1a 	bl	8000cd4 <ST7735_Select>
    ST7735_Reset();
 8000ea0:	f7ff ff30 	bl	8000d04 <ST7735_Reset>
    ST7735_ExecuteCommandList(init_cmds1);
 8000ea4:	4806      	ldr	r0, [pc, #24]	@ (8000ec0 <ST7735_Init+0x28>)
 8000ea6:	f7ff ff79 	bl	8000d9c <ST7735_ExecuteCommandList>
    ST7735_ExecuteCommandList(init_cmds2);
 8000eaa:	4806      	ldr	r0, [pc, #24]	@ (8000ec4 <ST7735_Init+0x2c>)
 8000eac:	f7ff ff76 	bl	8000d9c <ST7735_ExecuteCommandList>
    ST7735_ExecuteCommandList(init_cmds3);
 8000eb0:	4805      	ldr	r0, [pc, #20]	@ (8000ec8 <ST7735_Init+0x30>)
 8000eb2:	f7ff ff73 	bl	8000d9c <ST7735_ExecuteCommandList>
    ST7735_Unselect();
 8000eb6:	f7ff ff19 	bl	8000cec <ST7735_Unselect>
}
 8000eba:	bf00      	nop
 8000ebc:	bd80      	pop	{r7, pc}
 8000ebe:	bf00      	nop
 8000ec0:	08008250 	.word	0x08008250
 8000ec4:	0800828c 	.word	0x0800828c
 8000ec8:	0800829c 	.word	0x0800829c

08000ecc <ST7735_DrawPixel>:

void ST7735_DrawPixel(uint16_t x, uint16_t y, uint16_t color) {
 8000ecc:	b580      	push	{r7, lr}
 8000ece:	b084      	sub	sp, #16
 8000ed0:	af00      	add	r7, sp, #0
 8000ed2:	4603      	mov	r3, r0
 8000ed4:	80fb      	strh	r3, [r7, #6]
 8000ed6:	460b      	mov	r3, r1
 8000ed8:	80bb      	strh	r3, [r7, #4]
 8000eda:	4613      	mov	r3, r2
 8000edc:	807b      	strh	r3, [r7, #2]
    if((x >= ST7735_WIDTH) || (y >= ST7735_HEIGHT))
 8000ede:	88fb      	ldrh	r3, [r7, #6]
 8000ee0:	2b9f      	cmp	r3, #159	@ 0x9f
 8000ee2:	d823      	bhi.n	8000f2c <ST7735_DrawPixel+0x60>
 8000ee4:	88bb      	ldrh	r3, [r7, #4]
 8000ee6:	2b7f      	cmp	r3, #127	@ 0x7f
 8000ee8:	d820      	bhi.n	8000f2c <ST7735_DrawPixel+0x60>
        return;

    ST7735_Select();
 8000eea:	f7ff fef3 	bl	8000cd4 <ST7735_Select>

    ST7735_SetAddressWindow(x, y, x+1, y+1);
 8000eee:	88fb      	ldrh	r3, [r7, #6]
 8000ef0:	b2d8      	uxtb	r0, r3
 8000ef2:	88bb      	ldrh	r3, [r7, #4]
 8000ef4:	b2d9      	uxtb	r1, r3
 8000ef6:	88fb      	ldrh	r3, [r7, #6]
 8000ef8:	b2db      	uxtb	r3, r3
 8000efa:	3301      	adds	r3, #1
 8000efc:	b2da      	uxtb	r2, r3
 8000efe:	88bb      	ldrh	r3, [r7, #4]
 8000f00:	b2db      	uxtb	r3, r3
 8000f02:	3301      	adds	r3, #1
 8000f04:	b2db      	uxtb	r3, r3
 8000f06:	f7ff ff92 	bl	8000e2e <ST7735_SetAddressWindow>
    uint8_t data[] = { color >> 8, color & 0xFF };
 8000f0a:	887b      	ldrh	r3, [r7, #2]
 8000f0c:	0a1b      	lsrs	r3, r3, #8
 8000f0e:	b29b      	uxth	r3, r3
 8000f10:	b2db      	uxtb	r3, r3
 8000f12:	733b      	strb	r3, [r7, #12]
 8000f14:	887b      	ldrh	r3, [r7, #2]
 8000f16:	b2db      	uxtb	r3, r3
 8000f18:	737b      	strb	r3, [r7, #13]
    ST7735_WriteData(data, sizeof(data));
 8000f1a:	f107 030c 	add.w	r3, r7, #12
 8000f1e:	2102      	movs	r1, #2
 8000f20:	4618      	mov	r0, r3
 8000f22:	f7ff ff1f 	bl	8000d64 <ST7735_WriteData>

    ST7735_Unselect();
 8000f26:	f7ff fee1 	bl	8000cec <ST7735_Unselect>
 8000f2a:	e000      	b.n	8000f2e <ST7735_DrawPixel+0x62>
        return;
 8000f2c:	bf00      	nop
}
 8000f2e:	3710      	adds	r7, #16
 8000f30:	46bd      	mov	sp, r7
 8000f32:	bd80      	pop	{r7, pc}

08000f34 <ST7735_WriteChar>:

void ST7735_WriteChar(uint16_t x, uint16_t y, char ch, FontDef font, uint16_t color, uint16_t bgcolor) {
 8000f34:	b082      	sub	sp, #8
 8000f36:	b590      	push	{r4, r7, lr}
 8000f38:	b089      	sub	sp, #36	@ 0x24
 8000f3a:	af00      	add	r7, sp, #0
 8000f3c:	637b      	str	r3, [r7, #52]	@ 0x34
 8000f3e:	4603      	mov	r3, r0
 8000f40:	80fb      	strh	r3, [r7, #6]
 8000f42:	460b      	mov	r3, r1
 8000f44:	80bb      	strh	r3, [r7, #4]
 8000f46:	4613      	mov	r3, r2
 8000f48:	70fb      	strb	r3, [r7, #3]
    uint32_t i, b, j;

    ST7735_Select();
 8000f4a:	f7ff fec3 	bl	8000cd4 <ST7735_Select>

    ST7735_SetAddressWindow(x, y, x+font.width-1, y+font.height-1);
 8000f4e:	88fb      	ldrh	r3, [r7, #6]
 8000f50:	b2d8      	uxtb	r0, r3
 8000f52:	88bb      	ldrh	r3, [r7, #4]
 8000f54:	b2d9      	uxtb	r1, r3
 8000f56:	88fb      	ldrh	r3, [r7, #6]
 8000f58:	b2da      	uxtb	r2, r3
 8000f5a:	f897 3034 	ldrb.w	r3, [r7, #52]	@ 0x34
 8000f5e:	4413      	add	r3, r2
 8000f60:	b2db      	uxtb	r3, r3
 8000f62:	3b01      	subs	r3, #1
 8000f64:	b2dc      	uxtb	r4, r3
 8000f66:	88bb      	ldrh	r3, [r7, #4]
 8000f68:	b2da      	uxtb	r2, r3
 8000f6a:	f897 3035 	ldrb.w	r3, [r7, #53]	@ 0x35
 8000f6e:	4413      	add	r3, r2
 8000f70:	b2db      	uxtb	r3, r3
 8000f72:	3b01      	subs	r3, #1
 8000f74:	b2db      	uxtb	r3, r3
 8000f76:	4622      	mov	r2, r4
 8000f78:	f7ff ff59 	bl	8000e2e <ST7735_SetAddressWindow>

    for(i = 0; i < font.height; i++) {
 8000f7c:	2300      	movs	r3, #0
 8000f7e:	61fb      	str	r3, [r7, #28]
 8000f80:	e043      	b.n	800100a <ST7735_WriteChar+0xd6>
        b = font.data[(ch - 32) * font.height + i];
 8000f82:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8000f84:	78fb      	ldrb	r3, [r7, #3]
 8000f86:	3b20      	subs	r3, #32
 8000f88:	f897 1035 	ldrb.w	r1, [r7, #53]	@ 0x35
 8000f8c:	fb01 f303 	mul.w	r3, r1, r3
 8000f90:	4619      	mov	r1, r3
 8000f92:	69fb      	ldr	r3, [r7, #28]
 8000f94:	440b      	add	r3, r1
 8000f96:	005b      	lsls	r3, r3, #1
 8000f98:	4413      	add	r3, r2
 8000f9a:	881b      	ldrh	r3, [r3, #0]
 8000f9c:	617b      	str	r3, [r7, #20]
        for(j = 0; j < font.width; j++) {
 8000f9e:	2300      	movs	r3, #0
 8000fa0:	61bb      	str	r3, [r7, #24]
 8000fa2:	e029      	b.n	8000ff8 <ST7735_WriteChar+0xc4>
            if((b << j) & 0x8000)  {
 8000fa4:	697a      	ldr	r2, [r7, #20]
 8000fa6:	69bb      	ldr	r3, [r7, #24]
 8000fa8:	fa02 f303 	lsl.w	r3, r2, r3
 8000fac:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8000fb0:	2b00      	cmp	r3, #0
 8000fb2:	d00e      	beq.n	8000fd2 <ST7735_WriteChar+0x9e>
                uint8_t data[] = { color >> 8, color & 0xFF };
 8000fb4:	8fbb      	ldrh	r3, [r7, #60]	@ 0x3c
 8000fb6:	0a1b      	lsrs	r3, r3, #8
 8000fb8:	b29b      	uxth	r3, r3
 8000fba:	b2db      	uxtb	r3, r3
 8000fbc:	743b      	strb	r3, [r7, #16]
 8000fbe:	8fbb      	ldrh	r3, [r7, #60]	@ 0x3c
 8000fc0:	b2db      	uxtb	r3, r3
 8000fc2:	747b      	strb	r3, [r7, #17]
                ST7735_WriteData(data, sizeof(data));
 8000fc4:	f107 0310 	add.w	r3, r7, #16
 8000fc8:	2102      	movs	r1, #2
 8000fca:	4618      	mov	r0, r3
 8000fcc:	f7ff feca 	bl	8000d64 <ST7735_WriteData>
 8000fd0:	e00f      	b.n	8000ff2 <ST7735_WriteChar+0xbe>
            } else {
                uint8_t data[] = { bgcolor >> 8, bgcolor & 0xFF };
 8000fd2:	f8b7 3040 	ldrh.w	r3, [r7, #64]	@ 0x40
 8000fd6:	0a1b      	lsrs	r3, r3, #8
 8000fd8:	b29b      	uxth	r3, r3
 8000fda:	b2db      	uxtb	r3, r3
 8000fdc:	733b      	strb	r3, [r7, #12]
 8000fde:	f8b7 3040 	ldrh.w	r3, [r7, #64]	@ 0x40
 8000fe2:	b2db      	uxtb	r3, r3
 8000fe4:	737b      	strb	r3, [r7, #13]
                ST7735_WriteData(data, sizeof(data));
 8000fe6:	f107 030c 	add.w	r3, r7, #12
 8000fea:	2102      	movs	r1, #2
 8000fec:	4618      	mov	r0, r3
 8000fee:	f7ff feb9 	bl	8000d64 <ST7735_WriteData>
        for(j = 0; j < font.width; j++) {
 8000ff2:	69bb      	ldr	r3, [r7, #24]
 8000ff4:	3301      	adds	r3, #1
 8000ff6:	61bb      	str	r3, [r7, #24]
 8000ff8:	f897 3034 	ldrb.w	r3, [r7, #52]	@ 0x34
 8000ffc:	461a      	mov	r2, r3
 8000ffe:	69bb      	ldr	r3, [r7, #24]
 8001000:	4293      	cmp	r3, r2
 8001002:	d3cf      	bcc.n	8000fa4 <ST7735_WriteChar+0x70>
    for(i = 0; i < font.height; i++) {
 8001004:	69fb      	ldr	r3, [r7, #28]
 8001006:	3301      	adds	r3, #1
 8001008:	61fb      	str	r3, [r7, #28]
 800100a:	f897 3035 	ldrb.w	r3, [r7, #53]	@ 0x35
 800100e:	461a      	mov	r2, r3
 8001010:	69fb      	ldr	r3, [r7, #28]
 8001012:	4293      	cmp	r3, r2
 8001014:	d3b5      	bcc.n	8000f82 <ST7735_WriteChar+0x4e>
            }
        }
    }

    ST7735_Unselect();
 8001016:	f7ff fe69 	bl	8000cec <ST7735_Unselect>
}
 800101a:	bf00      	nop
 800101c:	3724      	adds	r7, #36	@ 0x24
 800101e:	46bd      	mov	sp, r7
 8001020:	e8bd 4090 	ldmia.w	sp!, {r4, r7, lr}
 8001024:	b002      	add	sp, #8
 8001026:	4770      	bx	lr

08001028 <ST7735_WriteString>:

void ST7735_WriteString(uint16_t x, uint16_t y, const char* str, FontDef font, uint16_t color, uint16_t bgcolor) {
 8001028:	b082      	sub	sp, #8
 800102a:	b580      	push	{r7, lr}
 800102c:	b086      	sub	sp, #24
 800102e:	af04      	add	r7, sp, #16
 8001030:	603a      	str	r2, [r7, #0]
 8001032:	617b      	str	r3, [r7, #20]
 8001034:	4603      	mov	r3, r0
 8001036:	80fb      	strh	r3, [r7, #6]
 8001038:	460b      	mov	r3, r1
 800103a:	80bb      	strh	r3, [r7, #4]
    ST7735_Select();
 800103c:	f7ff fe4a 	bl	8000cd4 <ST7735_Select>

    while(*str)
 8001040:	e014      	b.n	800106c <ST7735_WriteString+0x44>
    {

        ST7735_WriteChar(x, y, *str, font, color, bgcolor);
 8001042:	683b      	ldr	r3, [r7, #0]
 8001044:	781a      	ldrb	r2, [r3, #0]
 8001046:	88b9      	ldrh	r1, [r7, #4]
 8001048:	88f8      	ldrh	r0, [r7, #6]
 800104a:	8c3b      	ldrh	r3, [r7, #32]
 800104c:	9302      	str	r3, [sp, #8]
 800104e:	8bbb      	ldrh	r3, [r7, #28]
 8001050:	9301      	str	r3, [sp, #4]
 8001052:	69bb      	ldr	r3, [r7, #24]
 8001054:	9300      	str	r3, [sp, #0]
 8001056:	697b      	ldr	r3, [r7, #20]
 8001058:	f7ff ff6c 	bl	8000f34 <ST7735_WriteChar>
        x += font.width;
 800105c:	7d3b      	ldrb	r3, [r7, #20]
 800105e:	461a      	mov	r2, r3
 8001060:	88fb      	ldrh	r3, [r7, #6]
 8001062:	4413      	add	r3, r2
 8001064:	80fb      	strh	r3, [r7, #6]
        str++;
 8001066:	683b      	ldr	r3, [r7, #0]
 8001068:	3301      	adds	r3, #1
 800106a:	603b      	str	r3, [r7, #0]
    while(*str)
 800106c:	683b      	ldr	r3, [r7, #0]
 800106e:	781b      	ldrb	r3, [r3, #0]
 8001070:	2b00      	cmp	r3, #0
 8001072:	d1e6      	bne.n	8001042 <ST7735_WriteString+0x1a>
    }

    ST7735_Unselect();
 8001074:	f7ff fe3a 	bl	8000cec <ST7735_Unselect>
}
 8001078:	bf00      	nop
 800107a:	3708      	adds	r7, #8
 800107c:	46bd      	mov	sp, r7
 800107e:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8001082:	b002      	add	sp, #8
 8001084:	4770      	bx	lr
	...

08001088 <ST7735_FillRectangle>:

void ST7735_FillRectangle(uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t color) {
 8001088:	b590      	push	{r4, r7, lr}
 800108a:	b085      	sub	sp, #20
 800108c:	af00      	add	r7, sp, #0
 800108e:	4604      	mov	r4, r0
 8001090:	4608      	mov	r0, r1
 8001092:	4611      	mov	r1, r2
 8001094:	461a      	mov	r2, r3
 8001096:	4623      	mov	r3, r4
 8001098:	80fb      	strh	r3, [r7, #6]
 800109a:	4603      	mov	r3, r0
 800109c:	80bb      	strh	r3, [r7, #4]
 800109e:	460b      	mov	r3, r1
 80010a0:	807b      	strh	r3, [r7, #2]
 80010a2:	4613      	mov	r3, r2
 80010a4:	803b      	strh	r3, [r7, #0]
    // clipping
    if((x >= ST7735_WIDTH) || (y >= ST7735_HEIGHT)) return;
 80010a6:	88fb      	ldrh	r3, [r7, #6]
 80010a8:	2b9f      	cmp	r3, #159	@ 0x9f
 80010aa:	d858      	bhi.n	800115e <ST7735_FillRectangle+0xd6>
 80010ac:	88bb      	ldrh	r3, [r7, #4]
 80010ae:	2b7f      	cmp	r3, #127	@ 0x7f
 80010b0:	d855      	bhi.n	800115e <ST7735_FillRectangle+0xd6>
    if((x + w - 1) >= ST7735_WIDTH) w = ST7735_WIDTH - x;
 80010b2:	88fa      	ldrh	r2, [r7, #6]
 80010b4:	887b      	ldrh	r3, [r7, #2]
 80010b6:	4413      	add	r3, r2
 80010b8:	2ba0      	cmp	r3, #160	@ 0xa0
 80010ba:	dd03      	ble.n	80010c4 <ST7735_FillRectangle+0x3c>
 80010bc:	88fb      	ldrh	r3, [r7, #6]
 80010be:	f1c3 03a0 	rsb	r3, r3, #160	@ 0xa0
 80010c2:	807b      	strh	r3, [r7, #2]
    if((y + h - 1) >= ST7735_HEIGHT) h = ST7735_HEIGHT - y;
 80010c4:	88ba      	ldrh	r2, [r7, #4]
 80010c6:	883b      	ldrh	r3, [r7, #0]
 80010c8:	4413      	add	r3, r2
 80010ca:	2b80      	cmp	r3, #128	@ 0x80
 80010cc:	dd03      	ble.n	80010d6 <ST7735_FillRectangle+0x4e>
 80010ce:	88bb      	ldrh	r3, [r7, #4]
 80010d0:	f1c3 0380 	rsb	r3, r3, #128	@ 0x80
 80010d4:	803b      	strh	r3, [r7, #0]

    ST7735_Select();
 80010d6:	f7ff fdfd 	bl	8000cd4 <ST7735_Select>
    ST7735_SetAddressWindow(x, y, x+w-1, y+h-1);
 80010da:	88fb      	ldrh	r3, [r7, #6]
 80010dc:	b2d8      	uxtb	r0, r3
 80010de:	88bb      	ldrh	r3, [r7, #4]
 80010e0:	b2d9      	uxtb	r1, r3
 80010e2:	88fb      	ldrh	r3, [r7, #6]
 80010e4:	b2da      	uxtb	r2, r3
 80010e6:	887b      	ldrh	r3, [r7, #2]
 80010e8:	b2db      	uxtb	r3, r3
 80010ea:	4413      	add	r3, r2
 80010ec:	b2db      	uxtb	r3, r3
 80010ee:	3b01      	subs	r3, #1
 80010f0:	b2dc      	uxtb	r4, r3
 80010f2:	88bb      	ldrh	r3, [r7, #4]
 80010f4:	b2da      	uxtb	r2, r3
 80010f6:	883b      	ldrh	r3, [r7, #0]
 80010f8:	b2db      	uxtb	r3, r3
 80010fa:	4413      	add	r3, r2
 80010fc:	b2db      	uxtb	r3, r3
 80010fe:	3b01      	subs	r3, #1
 8001100:	b2db      	uxtb	r3, r3
 8001102:	4622      	mov	r2, r4
 8001104:	f7ff fe93 	bl	8000e2e <ST7735_SetAddressWindow>

    uint8_t data[] = { color >> 8, color & 0xFF };
 8001108:	8c3b      	ldrh	r3, [r7, #32]
 800110a:	0a1b      	lsrs	r3, r3, #8
 800110c:	b29b      	uxth	r3, r3
 800110e:	b2db      	uxtb	r3, r3
 8001110:	733b      	strb	r3, [r7, #12]
 8001112:	8c3b      	ldrh	r3, [r7, #32]
 8001114:	b2db      	uxtb	r3, r3
 8001116:	737b      	strb	r3, [r7, #13]
    HAL_GPIO_WritePin(ST7735_DC_GPIO_Port, ST7735_DC_Pin, GPIO_PIN_SET);
 8001118:	2201      	movs	r2, #1
 800111a:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 800111e:	4812      	ldr	r0, [pc, #72]	@ (8001168 <ST7735_FillRectangle+0xe0>)
 8001120:	f001 fd28 	bl	8002b74 <HAL_GPIO_WritePin>
    for(y = h; y > 0; y--) {
 8001124:	883b      	ldrh	r3, [r7, #0]
 8001126:	80bb      	strh	r3, [r7, #4]
 8001128:	e013      	b.n	8001152 <ST7735_FillRectangle+0xca>
        for(x = w; x > 0; x--) {
 800112a:	887b      	ldrh	r3, [r7, #2]
 800112c:	80fb      	strh	r3, [r7, #6]
 800112e:	e00a      	b.n	8001146 <ST7735_FillRectangle+0xbe>
            HAL_SPI_Transmit(&ST7735_SPI_PORT, data, sizeof(data), HAL_MAX_DELAY);
 8001130:	f107 010c 	add.w	r1, r7, #12
 8001134:	f04f 33ff 	mov.w	r3, #4294967295
 8001138:	2202      	movs	r2, #2
 800113a:	480c      	ldr	r0, [pc, #48]	@ (800116c <ST7735_FillRectangle+0xe4>)
 800113c:	f002 fa4d 	bl	80035da <HAL_SPI_Transmit>
        for(x = w; x > 0; x--) {
 8001140:	88fb      	ldrh	r3, [r7, #6]
 8001142:	3b01      	subs	r3, #1
 8001144:	80fb      	strh	r3, [r7, #6]
 8001146:	88fb      	ldrh	r3, [r7, #6]
 8001148:	2b00      	cmp	r3, #0
 800114a:	d1f1      	bne.n	8001130 <ST7735_FillRectangle+0xa8>
    for(y = h; y > 0; y--) {
 800114c:	88bb      	ldrh	r3, [r7, #4]
 800114e:	3b01      	subs	r3, #1
 8001150:	80bb      	strh	r3, [r7, #4]
 8001152:	88bb      	ldrh	r3, [r7, #4]
 8001154:	2b00      	cmp	r3, #0
 8001156:	d1e8      	bne.n	800112a <ST7735_FillRectangle+0xa2>
        }
    }

    ST7735_Unselect();
 8001158:	f7ff fdc8 	bl	8000cec <ST7735_Unselect>
 800115c:	e000      	b.n	8001160 <ST7735_FillRectangle+0xd8>
    if((x >= ST7735_WIDTH) || (y >= ST7735_HEIGHT)) return;
 800115e:	bf00      	nop
}
 8001160:	3714      	adds	r7, #20
 8001162:	46bd      	mov	sp, r7
 8001164:	bd90      	pop	{r4, r7, pc}
 8001166:	bf00      	nop
 8001168:	40020400 	.word	0x40020400
 800116c:	20000148 	.word	0x20000148

08001170 <ST7735_FillScreen>:

    free(line);
    ST7735_Unselect();
}

void ST7735_FillScreen(uint16_t color) {
 8001170:	b580      	push	{r7, lr}
 8001172:	b084      	sub	sp, #16
 8001174:	af02      	add	r7, sp, #8
 8001176:	4603      	mov	r3, r0
 8001178:	80fb      	strh	r3, [r7, #6]
    ST7735_FillRectangle(0, 0, ST7735_WIDTH, ST7735_HEIGHT, color);
 800117a:	88fb      	ldrh	r3, [r7, #6]
 800117c:	9300      	str	r3, [sp, #0]
 800117e:	2380      	movs	r3, #128	@ 0x80
 8001180:	22a0      	movs	r2, #160	@ 0xa0
 8001182:	2100      	movs	r1, #0
 8001184:	2000      	movs	r0, #0
 8001186:	f7ff ff7f 	bl	8001088 <ST7735_FillRectangle>
}
 800118a:	bf00      	nop
 800118c:	3708      	adds	r7, #8
 800118e:	46bd      	mov	sp, r7
 8001190:	bd80      	pop	{r7, pc}

08001192 <ST7735_draw_figure>:
}
//------------------------------------------------------------------------------
// desenha figura com uma unica cor
//------------------------------------------------------------------------------
void ST7735_draw_figure(uint32_t x, uint32_t y, FigDef fig, uint16_t color)
{
 8001192:	b580      	push	{r7, lr}
 8001194:	b08c      	sub	sp, #48	@ 0x30
 8001196:	af00      	add	r7, sp, #0
 8001198:	60f8      	str	r0, [r7, #12]
 800119a:	60b9      	str	r1, [r7, #8]
 800119c:	4639      	mov	r1, r7
 800119e:	e881 000c 	stmia.w	r1, {r2, r3}
    uint32_t i,j,k,l,m=0, resto_w, nr_colunas, nr_rot;
 80011a2:	2300      	movs	r3, #0
 80011a4:	61fb      	str	r3, [r7, #28]

    resto_w = fig.width%16; 			// resto para uso caso nao tenha um nr multiplo de 16 pixels de largura
 80011a6:	783b      	ldrb	r3, [r7, #0]
 80011a8:	f003 030f 	and.w	r3, r3, #15
 80011ac:	613b      	str	r3, [r7, #16]

    nr_colunas = fig.width/16;
 80011ae:	783b      	ldrb	r3, [r7, #0]
 80011b0:	091b      	lsrs	r3, r3, #4
 80011b2:	b2db      	uxtb	r3, r3
 80011b4:	61bb      	str	r3, [r7, #24]

    if (resto_w!=0)
 80011b6:	693b      	ldr	r3, [r7, #16]
 80011b8:	2b00      	cmp	r3, #0
 80011ba:	d002      	beq.n	80011c2 <ST7735_draw_figure+0x30>
    	nr_colunas++;
 80011bc:	69bb      	ldr	r3, [r7, #24]
 80011be:	3301      	adds	r3, #1
 80011c0:	61bb      	str	r3, [r7, #24]

    for(k=0; k<(fig.height*nr_colunas); k+=nr_colunas)	// varre as linhas
 80011c2:	2300      	movs	r3, #0
 80011c4:	627b      	str	r3, [r7, #36]	@ 0x24
 80011c6:	e04a      	b.n	800125e <ST7735_draw_figure+0xcc>
    {
    	nr_rot = 16;			// 16 bits para uma linha de informação da figura
 80011c8:	2310      	movs	r3, #16
 80011ca:	617b      	str	r3, [r7, #20]
    	l = 0;
 80011cc:	2300      	movs	r3, #0
 80011ce:	623b      	str	r3, [r7, #32]


    	for(j=0; j<nr_colunas; j++) // varre as colunas
 80011d0:	2300      	movs	r3, #0
 80011d2:	62bb      	str	r3, [r7, #40]	@ 0x28
 80011d4:	e038      	b.n	8001248 <ST7735_draw_figure+0xb6>
    	{

    		if((j==(nr_colunas-1))&& (resto_w!=0)) // na ultima coluna muda nr de bits para rotacao se necessario
 80011d6:	69bb      	ldr	r3, [r7, #24]
 80011d8:	3b01      	subs	r3, #1
 80011da:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80011dc:	429a      	cmp	r2, r3
 80011de:	d104      	bne.n	80011ea <ST7735_draw_figure+0x58>
 80011e0:	693b      	ldr	r3, [r7, #16]
 80011e2:	2b00      	cmp	r3, #0
 80011e4:	d001      	beq.n	80011ea <ST7735_draw_figure+0x58>
    			  nr_rot = resto_w;
 80011e6:	693b      	ldr	r3, [r7, #16]
 80011e8:	617b      	str	r3, [r7, #20]

    		for(i=0; i<nr_rot; i++)
 80011ea:	2300      	movs	r3, #0
 80011ec:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80011ee:	e024      	b.n	800123a <ST7735_draw_figure+0xa8>
    		{
    			if(fig.data[k+j]<<i & 0x8000) 			//if (bit == 1)
 80011f0:	687a      	ldr	r2, [r7, #4]
 80011f2:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 80011f4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80011f6:	440b      	add	r3, r1
 80011f8:	005b      	lsls	r3, r3, #1
 80011fa:	4413      	add	r3, r2
 80011fc:	881b      	ldrh	r3, [r3, #0]
 80011fe:	461a      	mov	r2, r3
 8001200:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001202:	fa02 f303 	lsl.w	r3, r2, r3
 8001206:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800120a:	2b00      	cmp	r3, #0
 800120c:	d00f      	beq.n	800122e <ST7735_draw_figure+0x9c>
    				ST7735_DrawPixel(x+l, y+m, color);
 800120e:	68fb      	ldr	r3, [r7, #12]
 8001210:	b29a      	uxth	r2, r3
 8001212:	6a3b      	ldr	r3, [r7, #32]
 8001214:	b29b      	uxth	r3, r3
 8001216:	4413      	add	r3, r2
 8001218:	b298      	uxth	r0, r3
 800121a:	68bb      	ldr	r3, [r7, #8]
 800121c:	b29a      	uxth	r2, r3
 800121e:	69fb      	ldr	r3, [r7, #28]
 8001220:	b29b      	uxth	r3, r3
 8001222:	4413      	add	r3, r2
 8001224:	b29b      	uxth	r3, r3
 8001226:	8f3a      	ldrh	r2, [r7, #56]	@ 0x38
 8001228:	4619      	mov	r1, r3
 800122a:	f7ff fe4f 	bl	8000ecc <ST7735_DrawPixel>
    			l++;
 800122e:	6a3b      	ldr	r3, [r7, #32]
 8001230:	3301      	adds	r3, #1
 8001232:	623b      	str	r3, [r7, #32]
    		for(i=0; i<nr_rot; i++)
 8001234:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001236:	3301      	adds	r3, #1
 8001238:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800123a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800123c:	697b      	ldr	r3, [r7, #20]
 800123e:	429a      	cmp	r2, r3
 8001240:	d3d6      	bcc.n	80011f0 <ST7735_draw_figure+0x5e>
    	for(j=0; j<nr_colunas; j++) // varre as colunas
 8001242:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001244:	3301      	adds	r3, #1
 8001246:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001248:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800124a:	69bb      	ldr	r3, [r7, #24]
 800124c:	429a      	cmp	r2, r3
 800124e:	d3c2      	bcc.n	80011d6 <ST7735_draw_figure+0x44>
    		}
    	}
    	m++;
 8001250:	69fb      	ldr	r3, [r7, #28]
 8001252:	3301      	adds	r3, #1
 8001254:	61fb      	str	r3, [r7, #28]
    for(k=0; k<(fig.height*nr_colunas); k+=nr_colunas)	// varre as linhas
 8001256:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001258:	69bb      	ldr	r3, [r7, #24]
 800125a:	4413      	add	r3, r2
 800125c:	627b      	str	r3, [r7, #36]	@ 0x24
 800125e:	787b      	ldrb	r3, [r7, #1]
 8001260:	461a      	mov	r2, r3
 8001262:	69bb      	ldr	r3, [r7, #24]
 8001264:	fb02 f303 	mul.w	r3, r2, r3
 8001268:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800126a:	429a      	cmp	r2, r3
 800126c:	d3ac      	bcc.n	80011c8 <ST7735_draw_figure+0x36>
  	}
}
 800126e:	bf00      	nop
 8001270:	bf00      	nop
 8001272:	3730      	adds	r7, #48	@ 0x30
 8001274:	46bd      	mov	sp, r7
 8001276:	bd80      	pop	{r7, pc}

08001278 <ST7735_write_nr>:
//------------------------------------------------------------------------------
void ST7735_write_nr(uint32_t x, uint32_t y, int nr, FontDef font, uint16_t color, uint16_t bgcolor)
{
 8001278:	b082      	sub	sp, #8
 800127a:	b580      	push	{r7, lr}
 800127c:	b08c      	sub	sp, #48	@ 0x30
 800127e:	af04      	add	r7, sp, #16
 8001280:	60f8      	str	r0, [r7, #12]
 8001282:	60b9      	str	r1, [r7, #8]
 8001284:	607a      	str	r2, [r7, #4]
 8001286:	62fb      	str	r3, [r7, #44]	@ 0x2c
	char string_nr[10];

	sprintf(string_nr, "%d",nr);
 8001288:	f107 0314 	add.w	r3, r7, #20
 800128c:	687a      	ldr	r2, [r7, #4]
 800128e:	490d      	ldr	r1, [pc, #52]	@ (80012c4 <ST7735_write_nr+0x4c>)
 8001290:	4618      	mov	r0, r3
 8001292:	f005 fcd7 	bl	8006c44 <siprintf>
	ST7735_WriteString(x, y, string_nr, font, color, bgcolor);
 8001296:	68fb      	ldr	r3, [r7, #12]
 8001298:	b298      	uxth	r0, r3
 800129a:	68bb      	ldr	r3, [r7, #8]
 800129c:	b299      	uxth	r1, r3
 800129e:	f107 0214 	add.w	r2, r7, #20
 80012a2:	8f3b      	ldrh	r3, [r7, #56]	@ 0x38
 80012a4:	9302      	str	r3, [sp, #8]
 80012a6:	8ebb      	ldrh	r3, [r7, #52]	@ 0x34
 80012a8:	9301      	str	r3, [sp, #4]
 80012aa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80012ac:	9300      	str	r3, [sp, #0]
 80012ae:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80012b0:	f7ff feba 	bl	8001028 <ST7735_WriteString>
}
 80012b4:	bf00      	nop
 80012b6:	3720      	adds	r7, #32
 80012b8:	46bd      	mov	sp, r7
 80012ba:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80012be:	b002      	add	sp, #8
 80012c0:	4770      	bx	lr
 80012c2:	bf00      	nop
 80012c4:	08007544 	.word	0x08007544

080012c8 <HAL_MspInit>:
 80012c8:	b580      	push	{r7, lr}
 80012ca:	b082      	sub	sp, #8
 80012cc:	af00      	add	r7, sp, #0
 80012ce:	2300      	movs	r3, #0
 80012d0:	607b      	str	r3, [r7, #4]
 80012d2:	4b12      	ldr	r3, [pc, #72]	@ (800131c <HAL_MspInit+0x54>)
 80012d4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80012d6:	4a11      	ldr	r2, [pc, #68]	@ (800131c <HAL_MspInit+0x54>)
 80012d8:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80012dc:	6453      	str	r3, [r2, #68]	@ 0x44
 80012de:	4b0f      	ldr	r3, [pc, #60]	@ (800131c <HAL_MspInit+0x54>)
 80012e0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80012e2:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80012e6:	607b      	str	r3, [r7, #4]
 80012e8:	687b      	ldr	r3, [r7, #4]
 80012ea:	2300      	movs	r3, #0
 80012ec:	603b      	str	r3, [r7, #0]
 80012ee:	4b0b      	ldr	r3, [pc, #44]	@ (800131c <HAL_MspInit+0x54>)
 80012f0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80012f2:	4a0a      	ldr	r2, [pc, #40]	@ (800131c <HAL_MspInit+0x54>)
 80012f4:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80012f8:	6413      	str	r3, [r2, #64]	@ 0x40
 80012fa:	4b08      	ldr	r3, [pc, #32]	@ (800131c <HAL_MspInit+0x54>)
 80012fc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80012fe:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001302:	603b      	str	r3, [r7, #0]
 8001304:	683b      	ldr	r3, [r7, #0]
 8001306:	2200      	movs	r2, #0
 8001308:	210f      	movs	r1, #15
 800130a:	f06f 0001 	mvn.w	r0, #1
 800130e:	f000 fefb 	bl	8002108 <HAL_NVIC_SetPriority>
 8001312:	bf00      	nop
 8001314:	3708      	adds	r7, #8
 8001316:	46bd      	mov	sp, r7
 8001318:	bd80      	pop	{r7, pc}
 800131a:	bf00      	nop
 800131c:	40023800 	.word	0x40023800

08001320 <HAL_ADC_MspInit>:
 8001320:	b580      	push	{r7, lr}
 8001322:	b08a      	sub	sp, #40	@ 0x28
 8001324:	af00      	add	r7, sp, #0
 8001326:	6078      	str	r0, [r7, #4]
 8001328:	f107 0314 	add.w	r3, r7, #20
 800132c:	2200      	movs	r2, #0
 800132e:	601a      	str	r2, [r3, #0]
 8001330:	605a      	str	r2, [r3, #4]
 8001332:	609a      	str	r2, [r3, #8]
 8001334:	60da      	str	r2, [r3, #12]
 8001336:	611a      	str	r2, [r3, #16]
 8001338:	687b      	ldr	r3, [r7, #4]
 800133a:	681b      	ldr	r3, [r3, #0]
 800133c:	4a2f      	ldr	r2, [pc, #188]	@ (80013fc <HAL_ADC_MspInit+0xdc>)
 800133e:	4293      	cmp	r3, r2
 8001340:	d157      	bne.n	80013f2 <HAL_ADC_MspInit+0xd2>
 8001342:	2300      	movs	r3, #0
 8001344:	613b      	str	r3, [r7, #16]
 8001346:	4b2e      	ldr	r3, [pc, #184]	@ (8001400 <HAL_ADC_MspInit+0xe0>)
 8001348:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800134a:	4a2d      	ldr	r2, [pc, #180]	@ (8001400 <HAL_ADC_MspInit+0xe0>)
 800134c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001350:	6453      	str	r3, [r2, #68]	@ 0x44
 8001352:	4b2b      	ldr	r3, [pc, #172]	@ (8001400 <HAL_ADC_MspInit+0xe0>)
 8001354:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001356:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800135a:	613b      	str	r3, [r7, #16]
 800135c:	693b      	ldr	r3, [r7, #16]
 800135e:	2300      	movs	r3, #0
 8001360:	60fb      	str	r3, [r7, #12]
 8001362:	4b27      	ldr	r3, [pc, #156]	@ (8001400 <HAL_ADC_MspInit+0xe0>)
 8001364:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001366:	4a26      	ldr	r2, [pc, #152]	@ (8001400 <HAL_ADC_MspInit+0xe0>)
 8001368:	f043 0301 	orr.w	r3, r3, #1
 800136c:	6313      	str	r3, [r2, #48]	@ 0x30
 800136e:	4b24      	ldr	r3, [pc, #144]	@ (8001400 <HAL_ADC_MspInit+0xe0>)
 8001370:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001372:	f003 0301 	and.w	r3, r3, #1
 8001376:	60fb      	str	r3, [r7, #12]
 8001378:	68fb      	ldr	r3, [r7, #12]
 800137a:	2303      	movs	r3, #3
 800137c:	617b      	str	r3, [r7, #20]
 800137e:	2303      	movs	r3, #3
 8001380:	61bb      	str	r3, [r7, #24]
 8001382:	2300      	movs	r3, #0
 8001384:	61fb      	str	r3, [r7, #28]
 8001386:	f107 0314 	add.w	r3, r7, #20
 800138a:	4619      	mov	r1, r3
 800138c:	481d      	ldr	r0, [pc, #116]	@ (8001404 <HAL_ADC_MspInit+0xe4>)
 800138e:	f001 fa55 	bl	800283c <HAL_GPIO_Init>
 8001392:	4b1d      	ldr	r3, [pc, #116]	@ (8001408 <HAL_ADC_MspInit+0xe8>)
 8001394:	4a1d      	ldr	r2, [pc, #116]	@ (800140c <HAL_ADC_MspInit+0xec>)
 8001396:	601a      	str	r2, [r3, #0]
 8001398:	4b1b      	ldr	r3, [pc, #108]	@ (8001408 <HAL_ADC_MspInit+0xe8>)
 800139a:	2200      	movs	r2, #0
 800139c:	605a      	str	r2, [r3, #4]
 800139e:	4b1a      	ldr	r3, [pc, #104]	@ (8001408 <HAL_ADC_MspInit+0xe8>)
 80013a0:	2200      	movs	r2, #0
 80013a2:	609a      	str	r2, [r3, #8]
 80013a4:	4b18      	ldr	r3, [pc, #96]	@ (8001408 <HAL_ADC_MspInit+0xe8>)
 80013a6:	2200      	movs	r2, #0
 80013a8:	60da      	str	r2, [r3, #12]
 80013aa:	4b17      	ldr	r3, [pc, #92]	@ (8001408 <HAL_ADC_MspInit+0xe8>)
 80013ac:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80013b0:	611a      	str	r2, [r3, #16]
 80013b2:	4b15      	ldr	r3, [pc, #84]	@ (8001408 <HAL_ADC_MspInit+0xe8>)
 80013b4:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 80013b8:	615a      	str	r2, [r3, #20]
 80013ba:	4b13      	ldr	r3, [pc, #76]	@ (8001408 <HAL_ADC_MspInit+0xe8>)
 80013bc:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80013c0:	619a      	str	r2, [r3, #24]
 80013c2:	4b11      	ldr	r3, [pc, #68]	@ (8001408 <HAL_ADC_MspInit+0xe8>)
 80013c4:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80013c8:	61da      	str	r2, [r3, #28]
 80013ca:	4b0f      	ldr	r3, [pc, #60]	@ (8001408 <HAL_ADC_MspInit+0xe8>)
 80013cc:	2200      	movs	r2, #0
 80013ce:	621a      	str	r2, [r3, #32]
 80013d0:	4b0d      	ldr	r3, [pc, #52]	@ (8001408 <HAL_ADC_MspInit+0xe8>)
 80013d2:	2200      	movs	r2, #0
 80013d4:	625a      	str	r2, [r3, #36]	@ 0x24
 80013d6:	480c      	ldr	r0, [pc, #48]	@ (8001408 <HAL_ADC_MspInit+0xe8>)
 80013d8:	f000 fec0 	bl	800215c <HAL_DMA_Init>
 80013dc:	4603      	mov	r3, r0
 80013de:	2b00      	cmp	r3, #0
 80013e0:	d001      	beq.n	80013e6 <HAL_ADC_MspInit+0xc6>
 80013e2:	f7ff fc71 	bl	8000cc8 <Error_Handler>
 80013e6:	687b      	ldr	r3, [r7, #4]
 80013e8:	4a07      	ldr	r2, [pc, #28]	@ (8001408 <HAL_ADC_MspInit+0xe8>)
 80013ea:	639a      	str	r2, [r3, #56]	@ 0x38
 80013ec:	4a06      	ldr	r2, [pc, #24]	@ (8001408 <HAL_ADC_MspInit+0xe8>)
 80013ee:	687b      	ldr	r3, [r7, #4]
 80013f0:	6393      	str	r3, [r2, #56]	@ 0x38
 80013f2:	bf00      	nop
 80013f4:	3728      	adds	r7, #40	@ 0x28
 80013f6:	46bd      	mov	sp, r7
 80013f8:	bd80      	pop	{r7, pc}
 80013fa:	bf00      	nop
 80013fc:	40012000 	.word	0x40012000
 8001400:	40023800 	.word	0x40023800
 8001404:	40020000 	.word	0x40020000
 8001408:	200000e8 	.word	0x200000e8
 800140c:	40026410 	.word	0x40026410

08001410 <HAL_SPI_MspInit>:
 8001410:	b580      	push	{r7, lr}
 8001412:	b08a      	sub	sp, #40	@ 0x28
 8001414:	af00      	add	r7, sp, #0
 8001416:	6078      	str	r0, [r7, #4]
 8001418:	f107 0314 	add.w	r3, r7, #20
 800141c:	2200      	movs	r2, #0
 800141e:	601a      	str	r2, [r3, #0]
 8001420:	605a      	str	r2, [r3, #4]
 8001422:	609a      	str	r2, [r3, #8]
 8001424:	60da      	str	r2, [r3, #12]
 8001426:	611a      	str	r2, [r3, #16]
 8001428:	687b      	ldr	r3, [r7, #4]
 800142a:	681b      	ldr	r3, [r3, #0]
 800142c:	4a19      	ldr	r2, [pc, #100]	@ (8001494 <HAL_SPI_MspInit+0x84>)
 800142e:	4293      	cmp	r3, r2
 8001430:	d12b      	bne.n	800148a <HAL_SPI_MspInit+0x7a>
 8001432:	2300      	movs	r3, #0
 8001434:	613b      	str	r3, [r7, #16]
 8001436:	4b18      	ldr	r3, [pc, #96]	@ (8001498 <HAL_SPI_MspInit+0x88>)
 8001438:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800143a:	4a17      	ldr	r2, [pc, #92]	@ (8001498 <HAL_SPI_MspInit+0x88>)
 800143c:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8001440:	6453      	str	r3, [r2, #68]	@ 0x44
 8001442:	4b15      	ldr	r3, [pc, #84]	@ (8001498 <HAL_SPI_MspInit+0x88>)
 8001444:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001446:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800144a:	613b      	str	r3, [r7, #16]
 800144c:	693b      	ldr	r3, [r7, #16]
 800144e:	2300      	movs	r3, #0
 8001450:	60fb      	str	r3, [r7, #12]
 8001452:	4b11      	ldr	r3, [pc, #68]	@ (8001498 <HAL_SPI_MspInit+0x88>)
 8001454:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001456:	4a10      	ldr	r2, [pc, #64]	@ (8001498 <HAL_SPI_MspInit+0x88>)
 8001458:	f043 0301 	orr.w	r3, r3, #1
 800145c:	6313      	str	r3, [r2, #48]	@ 0x30
 800145e:	4b0e      	ldr	r3, [pc, #56]	@ (8001498 <HAL_SPI_MspInit+0x88>)
 8001460:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001462:	f003 0301 	and.w	r3, r3, #1
 8001466:	60fb      	str	r3, [r7, #12]
 8001468:	68fb      	ldr	r3, [r7, #12]
 800146a:	23a0      	movs	r3, #160	@ 0xa0
 800146c:	617b      	str	r3, [r7, #20]
 800146e:	2302      	movs	r3, #2
 8001470:	61bb      	str	r3, [r7, #24]
 8001472:	2300      	movs	r3, #0
 8001474:	61fb      	str	r3, [r7, #28]
 8001476:	2303      	movs	r3, #3
 8001478:	623b      	str	r3, [r7, #32]
 800147a:	2305      	movs	r3, #5
 800147c:	627b      	str	r3, [r7, #36]	@ 0x24
 800147e:	f107 0314 	add.w	r3, r7, #20
 8001482:	4619      	mov	r1, r3
 8001484:	4805      	ldr	r0, [pc, #20]	@ (800149c <HAL_SPI_MspInit+0x8c>)
 8001486:	f001 f9d9 	bl	800283c <HAL_GPIO_Init>
 800148a:	bf00      	nop
 800148c:	3728      	adds	r7, #40	@ 0x28
 800148e:	46bd      	mov	sp, r7
 8001490:	bd80      	pop	{r7, pc}
 8001492:	bf00      	nop
 8001494:	40013000 	.word	0x40013000
 8001498:	40023800 	.word	0x40023800
 800149c:	40020000 	.word	0x40020000

080014a0 <HAL_InitTick>:
 80014a0:	b580      	push	{r7, lr}
 80014a2:	b08e      	sub	sp, #56	@ 0x38
 80014a4:	af00      	add	r7, sp, #0
 80014a6:	6078      	str	r0, [r7, #4]
 80014a8:	2300      	movs	r3, #0
 80014aa:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80014ac:	2300      	movs	r3, #0
 80014ae:	62bb      	str	r3, [r7, #40]	@ 0x28
 80014b0:	2300      	movs	r3, #0
 80014b2:	60fb      	str	r3, [r7, #12]
 80014b4:	4b33      	ldr	r3, [pc, #204]	@ (8001584 <HAL_InitTick+0xe4>)
 80014b6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80014b8:	4a32      	ldr	r2, [pc, #200]	@ (8001584 <HAL_InitTick+0xe4>)
 80014ba:	f043 0304 	orr.w	r3, r3, #4
 80014be:	6413      	str	r3, [r2, #64]	@ 0x40
 80014c0:	4b30      	ldr	r3, [pc, #192]	@ (8001584 <HAL_InitTick+0xe4>)
 80014c2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80014c4:	f003 0304 	and.w	r3, r3, #4
 80014c8:	60fb      	str	r3, [r7, #12]
 80014ca:	68fb      	ldr	r3, [r7, #12]
 80014cc:	f107 0210 	add.w	r2, r7, #16
 80014d0:	f107 0314 	add.w	r3, r7, #20
 80014d4:	4611      	mov	r1, r2
 80014d6:	4618      	mov	r0, r3
 80014d8:	f001 ffc4 	bl	8003464 <HAL_RCC_GetClockConfig>
 80014dc:	6a3b      	ldr	r3, [r7, #32]
 80014de:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80014e0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80014e2:	2b00      	cmp	r3, #0
 80014e4:	d103      	bne.n	80014ee <HAL_InitTick+0x4e>
 80014e6:	f001 ffa9 	bl	800343c <HAL_RCC_GetPCLK1Freq>
 80014ea:	6378      	str	r0, [r7, #52]	@ 0x34
 80014ec:	e004      	b.n	80014f8 <HAL_InitTick+0x58>
 80014ee:	f001 ffa5 	bl	800343c <HAL_RCC_GetPCLK1Freq>
 80014f2:	4603      	mov	r3, r0
 80014f4:	005b      	lsls	r3, r3, #1
 80014f6:	637b      	str	r3, [r7, #52]	@ 0x34
 80014f8:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80014fa:	4a23      	ldr	r2, [pc, #140]	@ (8001588 <HAL_InitTick+0xe8>)
 80014fc:	fba2 2303 	umull	r2, r3, r2, r3
 8001500:	0c9b      	lsrs	r3, r3, #18
 8001502:	3b01      	subs	r3, #1
 8001504:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001506:	4b21      	ldr	r3, [pc, #132]	@ (800158c <HAL_InitTick+0xec>)
 8001508:	4a21      	ldr	r2, [pc, #132]	@ (8001590 <HAL_InitTick+0xf0>)
 800150a:	601a      	str	r2, [r3, #0]
 800150c:	4b1f      	ldr	r3, [pc, #124]	@ (800158c <HAL_InitTick+0xec>)
 800150e:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8001512:	60da      	str	r2, [r3, #12]
 8001514:	4a1d      	ldr	r2, [pc, #116]	@ (800158c <HAL_InitTick+0xec>)
 8001516:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001518:	6053      	str	r3, [r2, #4]
 800151a:	4b1c      	ldr	r3, [pc, #112]	@ (800158c <HAL_InitTick+0xec>)
 800151c:	2200      	movs	r2, #0
 800151e:	611a      	str	r2, [r3, #16]
 8001520:	4b1a      	ldr	r3, [pc, #104]	@ (800158c <HAL_InitTick+0xec>)
 8001522:	2200      	movs	r2, #0
 8001524:	609a      	str	r2, [r3, #8]
 8001526:	4b19      	ldr	r3, [pc, #100]	@ (800158c <HAL_InitTick+0xec>)
 8001528:	2200      	movs	r2, #0
 800152a:	619a      	str	r2, [r3, #24]
 800152c:	4817      	ldr	r0, [pc, #92]	@ (800158c <HAL_InitTick+0xec>)
 800152e:	f002 fa73 	bl	8003a18 <HAL_TIM_Base_Init>
 8001532:	4603      	mov	r3, r0
 8001534:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 8001538:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 800153c:	2b00      	cmp	r3, #0
 800153e:	d11b      	bne.n	8001578 <HAL_InitTick+0xd8>
 8001540:	4812      	ldr	r0, [pc, #72]	@ (800158c <HAL_InitTick+0xec>)
 8001542:	f002 fac3 	bl	8003acc <HAL_TIM_Base_Start_IT>
 8001546:	4603      	mov	r3, r0
 8001548:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 800154c:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8001550:	2b00      	cmp	r3, #0
 8001552:	d111      	bne.n	8001578 <HAL_InitTick+0xd8>
 8001554:	201e      	movs	r0, #30
 8001556:	f000 fdf3 	bl	8002140 <HAL_NVIC_EnableIRQ>
 800155a:	687b      	ldr	r3, [r7, #4]
 800155c:	2b0f      	cmp	r3, #15
 800155e:	d808      	bhi.n	8001572 <HAL_InitTick+0xd2>
 8001560:	2200      	movs	r2, #0
 8001562:	6879      	ldr	r1, [r7, #4]
 8001564:	201e      	movs	r0, #30
 8001566:	f000 fdcf 	bl	8002108 <HAL_NVIC_SetPriority>
 800156a:	4a0a      	ldr	r2, [pc, #40]	@ (8001594 <HAL_InitTick+0xf4>)
 800156c:	687b      	ldr	r3, [r7, #4]
 800156e:	6013      	str	r3, [r2, #0]
 8001570:	e002      	b.n	8001578 <HAL_InitTick+0xd8>
 8001572:	2301      	movs	r3, #1
 8001574:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 8001578:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 800157c:	4618      	mov	r0, r3
 800157e:	3738      	adds	r7, #56	@ 0x38
 8001580:	46bd      	mov	sp, r7
 8001582:	bd80      	pop	{r7, pc}
 8001584:	40023800 	.word	0x40023800
 8001588:	431bde83 	.word	0x431bde83
 800158c:	200001b4 	.word	0x200001b4
 8001590:	40000800 	.word	0x40000800
 8001594:	20000024 	.word	0x20000024

08001598 <NMI_Handler>:
 8001598:	b480      	push	{r7}
 800159a:	af00      	add	r7, sp, #0
 800159c:	bf00      	nop
 800159e:	e7fd      	b.n	800159c <NMI_Handler+0x4>

080015a0 <HardFault_Handler>:
 80015a0:	b480      	push	{r7}
 80015a2:	af00      	add	r7, sp, #0
 80015a4:	bf00      	nop
 80015a6:	e7fd      	b.n	80015a4 <HardFault_Handler+0x4>

080015a8 <MemManage_Handler>:
 80015a8:	b480      	push	{r7}
 80015aa:	af00      	add	r7, sp, #0
 80015ac:	bf00      	nop
 80015ae:	e7fd      	b.n	80015ac <MemManage_Handler+0x4>

080015b0 <BusFault_Handler>:
 80015b0:	b480      	push	{r7}
 80015b2:	af00      	add	r7, sp, #0
 80015b4:	bf00      	nop
 80015b6:	e7fd      	b.n	80015b4 <BusFault_Handler+0x4>

080015b8 <UsageFault_Handler>:
 80015b8:	b480      	push	{r7}
 80015ba:	af00      	add	r7, sp, #0
 80015bc:	bf00      	nop
 80015be:	e7fd      	b.n	80015bc <UsageFault_Handler+0x4>

080015c0 <DebugMon_Handler>:
 80015c0:	b480      	push	{r7}
 80015c2:	af00      	add	r7, sp, #0
 80015c4:	bf00      	nop
 80015c6:	46bd      	mov	sp, r7
 80015c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015cc:	4770      	bx	lr
	...

080015d0 <TIM4_IRQHandler>:
 80015d0:	b580      	push	{r7, lr}
 80015d2:	af00      	add	r7, sp, #0
 80015d4:	4802      	ldr	r0, [pc, #8]	@ (80015e0 <TIM4_IRQHandler+0x10>)
 80015d6:	f002 fadb 	bl	8003b90 <HAL_TIM_IRQHandler>
 80015da:	bf00      	nop
 80015dc:	bd80      	pop	{r7, pc}
 80015de:	bf00      	nop
 80015e0:	200001b4 	.word	0x200001b4

080015e4 <DMA2_Stream0_IRQHandler>:
 80015e4:	b580      	push	{r7, lr}
 80015e6:	af00      	add	r7, sp, #0
 80015e8:	4802      	ldr	r0, [pc, #8]	@ (80015f4 <DMA2_Stream0_IRQHandler+0x10>)
 80015ea:	f000 febd 	bl	8002368 <HAL_DMA_IRQHandler>
 80015ee:	bf00      	nop
 80015f0:	bd80      	pop	{r7, pc}
 80015f2:	bf00      	nop
 80015f4:	200000e8 	.word	0x200000e8

080015f8 <_sbrk>:
 80015f8:	b580      	push	{r7, lr}
 80015fa:	b086      	sub	sp, #24
 80015fc:	af00      	add	r7, sp, #0
 80015fe:	6078      	str	r0, [r7, #4]
 8001600:	4a14      	ldr	r2, [pc, #80]	@ (8001654 <_sbrk+0x5c>)
 8001602:	4b15      	ldr	r3, [pc, #84]	@ (8001658 <_sbrk+0x60>)
 8001604:	1ad3      	subs	r3, r2, r3
 8001606:	617b      	str	r3, [r7, #20]
 8001608:	697b      	ldr	r3, [r7, #20]
 800160a:	613b      	str	r3, [r7, #16]
 800160c:	4b13      	ldr	r3, [pc, #76]	@ (800165c <_sbrk+0x64>)
 800160e:	681b      	ldr	r3, [r3, #0]
 8001610:	2b00      	cmp	r3, #0
 8001612:	d102      	bne.n	800161a <_sbrk+0x22>
 8001614:	4b11      	ldr	r3, [pc, #68]	@ (800165c <_sbrk+0x64>)
 8001616:	4a12      	ldr	r2, [pc, #72]	@ (8001660 <_sbrk+0x68>)
 8001618:	601a      	str	r2, [r3, #0]
 800161a:	4b10      	ldr	r3, [pc, #64]	@ (800165c <_sbrk+0x64>)
 800161c:	681a      	ldr	r2, [r3, #0]
 800161e:	687b      	ldr	r3, [r7, #4]
 8001620:	4413      	add	r3, r2
 8001622:	693a      	ldr	r2, [r7, #16]
 8001624:	429a      	cmp	r2, r3
 8001626:	d207      	bcs.n	8001638 <_sbrk+0x40>
 8001628:	f005 fba4 	bl	8006d74 <__errno>
 800162c:	4603      	mov	r3, r0
 800162e:	220c      	movs	r2, #12
 8001630:	601a      	str	r2, [r3, #0]
 8001632:	f04f 33ff 	mov.w	r3, #4294967295
 8001636:	e009      	b.n	800164c <_sbrk+0x54>
 8001638:	4b08      	ldr	r3, [pc, #32]	@ (800165c <_sbrk+0x64>)
 800163a:	681b      	ldr	r3, [r3, #0]
 800163c:	60fb      	str	r3, [r7, #12]
 800163e:	4b07      	ldr	r3, [pc, #28]	@ (800165c <_sbrk+0x64>)
 8001640:	681a      	ldr	r2, [r3, #0]
 8001642:	687b      	ldr	r3, [r7, #4]
 8001644:	4413      	add	r3, r2
 8001646:	4a05      	ldr	r2, [pc, #20]	@ (800165c <_sbrk+0x64>)
 8001648:	6013      	str	r3, [r2, #0]
 800164a:	68fb      	ldr	r3, [r7, #12]
 800164c:	4618      	mov	r0, r3
 800164e:	3718      	adds	r7, #24
 8001650:	46bd      	mov	sp, r7
 8001652:	bd80      	pop	{r7, pc}
 8001654:	20020000 	.word	0x20020000
 8001658:	00000400 	.word	0x00000400
 800165c:	200001fc 	.word	0x200001fc
 8001660:	20004d38 	.word	0x20004d38

08001664 <SystemInit>:
 8001664:	b480      	push	{r7}
 8001666:	af00      	add	r7, sp, #0
 8001668:	4b06      	ldr	r3, [pc, #24]	@ (8001684 <SystemInit+0x20>)
 800166a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800166e:	4a05      	ldr	r2, [pc, #20]	@ (8001684 <SystemInit+0x20>)
 8001670:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001674:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8001678:	bf00      	nop
 800167a:	46bd      	mov	sp, r7
 800167c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001680:	4770      	bx	lr
 8001682:	bf00      	nop
 8001684:	e000ed00 	.word	0xe000ed00

08001688 <Reset_Handler>:
 8001688:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80016c0 <LoopFillZerobss+0xe>
 800168c:	f7ff ffea 	bl	8001664 <SystemInit>
 8001690:	480c      	ldr	r0, [pc, #48]	@ (80016c4 <LoopFillZerobss+0x12>)
 8001692:	490d      	ldr	r1, [pc, #52]	@ (80016c8 <LoopFillZerobss+0x16>)
 8001694:	4a0d      	ldr	r2, [pc, #52]	@ (80016cc <LoopFillZerobss+0x1a>)
 8001696:	2300      	movs	r3, #0
 8001698:	e002      	b.n	80016a0 <LoopCopyDataInit>

0800169a <CopyDataInit>:
 800169a:	58d4      	ldr	r4, [r2, r3]
 800169c:	50c4      	str	r4, [r0, r3]
 800169e:	3304      	adds	r3, #4

080016a0 <LoopCopyDataInit>:
 80016a0:	18c4      	adds	r4, r0, r3
 80016a2:	428c      	cmp	r4, r1
 80016a4:	d3f9      	bcc.n	800169a <CopyDataInit>
 80016a6:	4a0a      	ldr	r2, [pc, #40]	@ (80016d0 <LoopFillZerobss+0x1e>)
 80016a8:	4c0a      	ldr	r4, [pc, #40]	@ (80016d4 <LoopFillZerobss+0x22>)
 80016aa:	2300      	movs	r3, #0
 80016ac:	e001      	b.n	80016b2 <LoopFillZerobss>

080016ae <FillZerobss>:
 80016ae:	6013      	str	r3, [r2, #0]
 80016b0:	3204      	adds	r2, #4

080016b2 <LoopFillZerobss>:
 80016b2:	42a2      	cmp	r2, r4
 80016b4:	d3fb      	bcc.n	80016ae <FillZerobss>
 80016b6:	f005 fb63 	bl	8006d80 <__libc_init_array>
 80016ba:	f7ff f8ad 	bl	8000818 <main>
 80016be:	4770      	bx	lr
 80016c0:	20020000 	.word	0x20020000
 80016c4:	20000000 	.word	0x20000000
 80016c8:	20000080 	.word	0x20000080
 80016cc:	0800832c 	.word	0x0800832c
 80016d0:	20000080 	.word	0x20000080
 80016d4:	20004d34 	.word	0x20004d34

080016d8 <ADC_IRQHandler>:
 80016d8:	e7fe      	b.n	80016d8 <ADC_IRQHandler>
	...

080016dc <HAL_Init>:
 80016dc:	b580      	push	{r7, lr}
 80016de:	af00      	add	r7, sp, #0
 80016e0:	4b0e      	ldr	r3, [pc, #56]	@ (800171c <HAL_Init+0x40>)
 80016e2:	681b      	ldr	r3, [r3, #0]
 80016e4:	4a0d      	ldr	r2, [pc, #52]	@ (800171c <HAL_Init+0x40>)
 80016e6:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80016ea:	6013      	str	r3, [r2, #0]
 80016ec:	4b0b      	ldr	r3, [pc, #44]	@ (800171c <HAL_Init+0x40>)
 80016ee:	681b      	ldr	r3, [r3, #0]
 80016f0:	4a0a      	ldr	r2, [pc, #40]	@ (800171c <HAL_Init+0x40>)
 80016f2:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80016f6:	6013      	str	r3, [r2, #0]
 80016f8:	4b08      	ldr	r3, [pc, #32]	@ (800171c <HAL_Init+0x40>)
 80016fa:	681b      	ldr	r3, [r3, #0]
 80016fc:	4a07      	ldr	r2, [pc, #28]	@ (800171c <HAL_Init+0x40>)
 80016fe:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001702:	6013      	str	r3, [r2, #0]
 8001704:	2003      	movs	r0, #3
 8001706:	f000 fcf4 	bl	80020f2 <HAL_NVIC_SetPriorityGrouping>
 800170a:	200f      	movs	r0, #15
 800170c:	f7ff fec8 	bl	80014a0 <HAL_InitTick>
 8001710:	f7ff fdda 	bl	80012c8 <HAL_MspInit>
 8001714:	2300      	movs	r3, #0
 8001716:	4618      	mov	r0, r3
 8001718:	bd80      	pop	{r7, pc}
 800171a:	bf00      	nop
 800171c:	40023c00 	.word	0x40023c00

08001720 <HAL_IncTick>:
 8001720:	b480      	push	{r7}
 8001722:	af00      	add	r7, sp, #0
 8001724:	4b06      	ldr	r3, [pc, #24]	@ (8001740 <HAL_IncTick+0x20>)
 8001726:	781b      	ldrb	r3, [r3, #0]
 8001728:	461a      	mov	r2, r3
 800172a:	4b06      	ldr	r3, [pc, #24]	@ (8001744 <HAL_IncTick+0x24>)
 800172c:	681b      	ldr	r3, [r3, #0]
 800172e:	4413      	add	r3, r2
 8001730:	4a04      	ldr	r2, [pc, #16]	@ (8001744 <HAL_IncTick+0x24>)
 8001732:	6013      	str	r3, [r2, #0]
 8001734:	bf00      	nop
 8001736:	46bd      	mov	sp, r7
 8001738:	f85d 7b04 	ldr.w	r7, [sp], #4
 800173c:	4770      	bx	lr
 800173e:	bf00      	nop
 8001740:	20000028 	.word	0x20000028
 8001744:	20000200 	.word	0x20000200

08001748 <HAL_GetTick>:
 8001748:	b480      	push	{r7}
 800174a:	af00      	add	r7, sp, #0
 800174c:	4b03      	ldr	r3, [pc, #12]	@ (800175c <HAL_GetTick+0x14>)
 800174e:	681b      	ldr	r3, [r3, #0]
 8001750:	4618      	mov	r0, r3
 8001752:	46bd      	mov	sp, r7
 8001754:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001758:	4770      	bx	lr
 800175a:	bf00      	nop
 800175c:	20000200 	.word	0x20000200

08001760 <HAL_Delay>:
 8001760:	b580      	push	{r7, lr}
 8001762:	b084      	sub	sp, #16
 8001764:	af00      	add	r7, sp, #0
 8001766:	6078      	str	r0, [r7, #4]
 8001768:	f7ff ffee 	bl	8001748 <HAL_GetTick>
 800176c:	60b8      	str	r0, [r7, #8]
 800176e:	687b      	ldr	r3, [r7, #4]
 8001770:	60fb      	str	r3, [r7, #12]
 8001772:	68fb      	ldr	r3, [r7, #12]
 8001774:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001778:	d005      	beq.n	8001786 <HAL_Delay+0x26>
 800177a:	4b0a      	ldr	r3, [pc, #40]	@ (80017a4 <HAL_Delay+0x44>)
 800177c:	781b      	ldrb	r3, [r3, #0]
 800177e:	461a      	mov	r2, r3
 8001780:	68fb      	ldr	r3, [r7, #12]
 8001782:	4413      	add	r3, r2
 8001784:	60fb      	str	r3, [r7, #12]
 8001786:	bf00      	nop
 8001788:	f7ff ffde 	bl	8001748 <HAL_GetTick>
 800178c:	4602      	mov	r2, r0
 800178e:	68bb      	ldr	r3, [r7, #8]
 8001790:	1ad3      	subs	r3, r2, r3
 8001792:	68fa      	ldr	r2, [r7, #12]
 8001794:	429a      	cmp	r2, r3
 8001796:	d8f7      	bhi.n	8001788 <HAL_Delay+0x28>
 8001798:	bf00      	nop
 800179a:	bf00      	nop
 800179c:	3710      	adds	r7, #16
 800179e:	46bd      	mov	sp, r7
 80017a0:	bd80      	pop	{r7, pc}
 80017a2:	bf00      	nop
 80017a4:	20000028 	.word	0x20000028

080017a8 <HAL_ADC_Init>:
 80017a8:	b580      	push	{r7, lr}
 80017aa:	b084      	sub	sp, #16
 80017ac:	af00      	add	r7, sp, #0
 80017ae:	6078      	str	r0, [r7, #4]
 80017b0:	2300      	movs	r3, #0
 80017b2:	73fb      	strb	r3, [r7, #15]
 80017b4:	687b      	ldr	r3, [r7, #4]
 80017b6:	2b00      	cmp	r3, #0
 80017b8:	d101      	bne.n	80017be <HAL_ADC_Init+0x16>
 80017ba:	2301      	movs	r3, #1
 80017bc:	e033      	b.n	8001826 <HAL_ADC_Init+0x7e>
 80017be:	687b      	ldr	r3, [r7, #4]
 80017c0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80017c2:	2b00      	cmp	r3, #0
 80017c4:	d109      	bne.n	80017da <HAL_ADC_Init+0x32>
 80017c6:	6878      	ldr	r0, [r7, #4]
 80017c8:	f7ff fdaa 	bl	8001320 <HAL_ADC_MspInit>
 80017cc:	687b      	ldr	r3, [r7, #4]
 80017ce:	2200      	movs	r2, #0
 80017d0:	645a      	str	r2, [r3, #68]	@ 0x44
 80017d2:	687b      	ldr	r3, [r7, #4]
 80017d4:	2200      	movs	r2, #0
 80017d6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80017da:	687b      	ldr	r3, [r7, #4]
 80017dc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80017de:	f003 0310 	and.w	r3, r3, #16
 80017e2:	2b00      	cmp	r3, #0
 80017e4:	d118      	bne.n	8001818 <HAL_ADC_Init+0x70>
 80017e6:	687b      	ldr	r3, [r7, #4]
 80017e8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80017ea:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 80017ee:	f023 0302 	bic.w	r3, r3, #2
 80017f2:	f043 0202 	orr.w	r2, r3, #2
 80017f6:	687b      	ldr	r3, [r7, #4]
 80017f8:	641a      	str	r2, [r3, #64]	@ 0x40
 80017fa:	6878      	ldr	r0, [r7, #4]
 80017fc:	f000 fa4e 	bl	8001c9c <ADC_Init>
 8001800:	687b      	ldr	r3, [r7, #4]
 8001802:	2200      	movs	r2, #0
 8001804:	645a      	str	r2, [r3, #68]	@ 0x44
 8001806:	687b      	ldr	r3, [r7, #4]
 8001808:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800180a:	f023 0303 	bic.w	r3, r3, #3
 800180e:	f043 0201 	orr.w	r2, r3, #1
 8001812:	687b      	ldr	r3, [r7, #4]
 8001814:	641a      	str	r2, [r3, #64]	@ 0x40
 8001816:	e001      	b.n	800181c <HAL_ADC_Init+0x74>
 8001818:	2301      	movs	r3, #1
 800181a:	73fb      	strb	r3, [r7, #15]
 800181c:	687b      	ldr	r3, [r7, #4]
 800181e:	2200      	movs	r2, #0
 8001820:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001824:	7bfb      	ldrb	r3, [r7, #15]
 8001826:	4618      	mov	r0, r3
 8001828:	3710      	adds	r7, #16
 800182a:	46bd      	mov	sp, r7
 800182c:	bd80      	pop	{r7, pc}
	...

08001830 <HAL_ADC_Start_DMA>:
 8001830:	b580      	push	{r7, lr}
 8001832:	b086      	sub	sp, #24
 8001834:	af00      	add	r7, sp, #0
 8001836:	60f8      	str	r0, [r7, #12]
 8001838:	60b9      	str	r1, [r7, #8]
 800183a:	607a      	str	r2, [r7, #4]
 800183c:	2300      	movs	r3, #0
 800183e:	613b      	str	r3, [r7, #16]
 8001840:	68fb      	ldr	r3, [r7, #12]
 8001842:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8001846:	2b01      	cmp	r3, #1
 8001848:	d101      	bne.n	800184e <HAL_ADC_Start_DMA+0x1e>
 800184a:	2302      	movs	r3, #2
 800184c:	e0ce      	b.n	80019ec <HAL_ADC_Start_DMA+0x1bc>
 800184e:	68fb      	ldr	r3, [r7, #12]
 8001850:	2201      	movs	r2, #1
 8001852:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001856:	68fb      	ldr	r3, [r7, #12]
 8001858:	681b      	ldr	r3, [r3, #0]
 800185a:	689b      	ldr	r3, [r3, #8]
 800185c:	f003 0301 	and.w	r3, r3, #1
 8001860:	2b01      	cmp	r3, #1
 8001862:	d018      	beq.n	8001896 <HAL_ADC_Start_DMA+0x66>
 8001864:	68fb      	ldr	r3, [r7, #12]
 8001866:	681b      	ldr	r3, [r3, #0]
 8001868:	689a      	ldr	r2, [r3, #8]
 800186a:	68fb      	ldr	r3, [r7, #12]
 800186c:	681b      	ldr	r3, [r3, #0]
 800186e:	f042 0201 	orr.w	r2, r2, #1
 8001872:	609a      	str	r2, [r3, #8]
 8001874:	4b5f      	ldr	r3, [pc, #380]	@ (80019f4 <HAL_ADC_Start_DMA+0x1c4>)
 8001876:	681b      	ldr	r3, [r3, #0]
 8001878:	4a5f      	ldr	r2, [pc, #380]	@ (80019f8 <HAL_ADC_Start_DMA+0x1c8>)
 800187a:	fba2 2303 	umull	r2, r3, r2, r3
 800187e:	0c9a      	lsrs	r2, r3, #18
 8001880:	4613      	mov	r3, r2
 8001882:	005b      	lsls	r3, r3, #1
 8001884:	4413      	add	r3, r2
 8001886:	613b      	str	r3, [r7, #16]
 8001888:	e002      	b.n	8001890 <HAL_ADC_Start_DMA+0x60>
 800188a:	693b      	ldr	r3, [r7, #16]
 800188c:	3b01      	subs	r3, #1
 800188e:	613b      	str	r3, [r7, #16]
 8001890:	693b      	ldr	r3, [r7, #16]
 8001892:	2b00      	cmp	r3, #0
 8001894:	d1f9      	bne.n	800188a <HAL_ADC_Start_DMA+0x5a>
 8001896:	68fb      	ldr	r3, [r7, #12]
 8001898:	681b      	ldr	r3, [r3, #0]
 800189a:	689b      	ldr	r3, [r3, #8]
 800189c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80018a0:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80018a4:	d107      	bne.n	80018b6 <HAL_ADC_Start_DMA+0x86>
 80018a6:	68fb      	ldr	r3, [r7, #12]
 80018a8:	681b      	ldr	r3, [r3, #0]
 80018aa:	689a      	ldr	r2, [r3, #8]
 80018ac:	68fb      	ldr	r3, [r7, #12]
 80018ae:	681b      	ldr	r3, [r3, #0]
 80018b0:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80018b4:	609a      	str	r2, [r3, #8]
 80018b6:	68fb      	ldr	r3, [r7, #12]
 80018b8:	681b      	ldr	r3, [r3, #0]
 80018ba:	689b      	ldr	r3, [r3, #8]
 80018bc:	f003 0301 	and.w	r3, r3, #1
 80018c0:	2b01      	cmp	r3, #1
 80018c2:	f040 8086 	bne.w	80019d2 <HAL_ADC_Start_DMA+0x1a2>
 80018c6:	68fb      	ldr	r3, [r7, #12]
 80018c8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80018ca:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 80018ce:	f023 0301 	bic.w	r3, r3, #1
 80018d2:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 80018d6:	68fb      	ldr	r3, [r7, #12]
 80018d8:	641a      	str	r2, [r3, #64]	@ 0x40
 80018da:	68fb      	ldr	r3, [r7, #12]
 80018dc:	681b      	ldr	r3, [r3, #0]
 80018de:	685b      	ldr	r3, [r3, #4]
 80018e0:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80018e4:	2b00      	cmp	r3, #0
 80018e6:	d007      	beq.n	80018f8 <HAL_ADC_Start_DMA+0xc8>
 80018e8:	68fb      	ldr	r3, [r7, #12]
 80018ea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80018ec:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 80018f0:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 80018f4:	68fb      	ldr	r3, [r7, #12]
 80018f6:	641a      	str	r2, [r3, #64]	@ 0x40
 80018f8:	68fb      	ldr	r3, [r7, #12]
 80018fa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80018fc:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001900:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8001904:	d106      	bne.n	8001914 <HAL_ADC_Start_DMA+0xe4>
 8001906:	68fb      	ldr	r3, [r7, #12]
 8001908:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800190a:	f023 0206 	bic.w	r2, r3, #6
 800190e:	68fb      	ldr	r3, [r7, #12]
 8001910:	645a      	str	r2, [r3, #68]	@ 0x44
 8001912:	e002      	b.n	800191a <HAL_ADC_Start_DMA+0xea>
 8001914:	68fb      	ldr	r3, [r7, #12]
 8001916:	2200      	movs	r2, #0
 8001918:	645a      	str	r2, [r3, #68]	@ 0x44
 800191a:	68fb      	ldr	r3, [r7, #12]
 800191c:	2200      	movs	r2, #0
 800191e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001922:	4b36      	ldr	r3, [pc, #216]	@ (80019fc <HAL_ADC_Start_DMA+0x1cc>)
 8001924:	617b      	str	r3, [r7, #20]
 8001926:	68fb      	ldr	r3, [r7, #12]
 8001928:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800192a:	4a35      	ldr	r2, [pc, #212]	@ (8001a00 <HAL_ADC_Start_DMA+0x1d0>)
 800192c:	63da      	str	r2, [r3, #60]	@ 0x3c
 800192e:	68fb      	ldr	r3, [r7, #12]
 8001930:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001932:	4a34      	ldr	r2, [pc, #208]	@ (8001a04 <HAL_ADC_Start_DMA+0x1d4>)
 8001934:	641a      	str	r2, [r3, #64]	@ 0x40
 8001936:	68fb      	ldr	r3, [r7, #12]
 8001938:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800193a:	4a33      	ldr	r2, [pc, #204]	@ (8001a08 <HAL_ADC_Start_DMA+0x1d8>)
 800193c:	64da      	str	r2, [r3, #76]	@ 0x4c
 800193e:	68fb      	ldr	r3, [r7, #12]
 8001940:	681b      	ldr	r3, [r3, #0]
 8001942:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 8001946:	601a      	str	r2, [r3, #0]
 8001948:	68fb      	ldr	r3, [r7, #12]
 800194a:	681b      	ldr	r3, [r3, #0]
 800194c:	685a      	ldr	r2, [r3, #4]
 800194e:	68fb      	ldr	r3, [r7, #12]
 8001950:	681b      	ldr	r3, [r3, #0]
 8001952:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8001956:	605a      	str	r2, [r3, #4]
 8001958:	68fb      	ldr	r3, [r7, #12]
 800195a:	681b      	ldr	r3, [r3, #0]
 800195c:	689a      	ldr	r2, [r3, #8]
 800195e:	68fb      	ldr	r3, [r7, #12]
 8001960:	681b      	ldr	r3, [r3, #0]
 8001962:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8001966:	609a      	str	r2, [r3, #8]
 8001968:	68fb      	ldr	r3, [r7, #12]
 800196a:	6b98      	ldr	r0, [r3, #56]	@ 0x38
 800196c:	68fb      	ldr	r3, [r7, #12]
 800196e:	681b      	ldr	r3, [r3, #0]
 8001970:	334c      	adds	r3, #76	@ 0x4c
 8001972:	4619      	mov	r1, r3
 8001974:	68ba      	ldr	r2, [r7, #8]
 8001976:	687b      	ldr	r3, [r7, #4]
 8001978:	f000 fc9e 	bl	80022b8 <HAL_DMA_Start_IT>
 800197c:	697b      	ldr	r3, [r7, #20]
 800197e:	685b      	ldr	r3, [r3, #4]
 8001980:	f003 031f 	and.w	r3, r3, #31
 8001984:	2b00      	cmp	r3, #0
 8001986:	d10f      	bne.n	80019a8 <HAL_ADC_Start_DMA+0x178>
 8001988:	68fb      	ldr	r3, [r7, #12]
 800198a:	681b      	ldr	r3, [r3, #0]
 800198c:	689b      	ldr	r3, [r3, #8]
 800198e:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8001992:	2b00      	cmp	r3, #0
 8001994:	d129      	bne.n	80019ea <HAL_ADC_Start_DMA+0x1ba>
 8001996:	68fb      	ldr	r3, [r7, #12]
 8001998:	681b      	ldr	r3, [r3, #0]
 800199a:	689a      	ldr	r2, [r3, #8]
 800199c:	68fb      	ldr	r3, [r7, #12]
 800199e:	681b      	ldr	r3, [r3, #0]
 80019a0:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 80019a4:	609a      	str	r2, [r3, #8]
 80019a6:	e020      	b.n	80019ea <HAL_ADC_Start_DMA+0x1ba>
 80019a8:	68fb      	ldr	r3, [r7, #12]
 80019aa:	681b      	ldr	r3, [r3, #0]
 80019ac:	4a17      	ldr	r2, [pc, #92]	@ (8001a0c <HAL_ADC_Start_DMA+0x1dc>)
 80019ae:	4293      	cmp	r3, r2
 80019b0:	d11b      	bne.n	80019ea <HAL_ADC_Start_DMA+0x1ba>
 80019b2:	68fb      	ldr	r3, [r7, #12]
 80019b4:	681b      	ldr	r3, [r3, #0]
 80019b6:	689b      	ldr	r3, [r3, #8]
 80019b8:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 80019bc:	2b00      	cmp	r3, #0
 80019be:	d114      	bne.n	80019ea <HAL_ADC_Start_DMA+0x1ba>
 80019c0:	68fb      	ldr	r3, [r7, #12]
 80019c2:	681b      	ldr	r3, [r3, #0]
 80019c4:	689a      	ldr	r2, [r3, #8]
 80019c6:	68fb      	ldr	r3, [r7, #12]
 80019c8:	681b      	ldr	r3, [r3, #0]
 80019ca:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 80019ce:	609a      	str	r2, [r3, #8]
 80019d0:	e00b      	b.n	80019ea <HAL_ADC_Start_DMA+0x1ba>
 80019d2:	68fb      	ldr	r3, [r7, #12]
 80019d4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80019d6:	f043 0210 	orr.w	r2, r3, #16
 80019da:	68fb      	ldr	r3, [r7, #12]
 80019dc:	641a      	str	r2, [r3, #64]	@ 0x40
 80019de:	68fb      	ldr	r3, [r7, #12]
 80019e0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80019e2:	f043 0201 	orr.w	r2, r3, #1
 80019e6:	68fb      	ldr	r3, [r7, #12]
 80019e8:	645a      	str	r2, [r3, #68]	@ 0x44
 80019ea:	2300      	movs	r3, #0
 80019ec:	4618      	mov	r0, r3
 80019ee:	3718      	adds	r7, #24
 80019f0:	46bd      	mov	sp, r7
 80019f2:	bd80      	pop	{r7, pc}
 80019f4:	20000020 	.word	0x20000020
 80019f8:	431bde83 	.word	0x431bde83
 80019fc:	40012300 	.word	0x40012300
 8001a00:	08001e95 	.word	0x08001e95
 8001a04:	08001f4f 	.word	0x08001f4f
 8001a08:	08001f6b 	.word	0x08001f6b
 8001a0c:	40012000 	.word	0x40012000

08001a10 <HAL_ADC_ConvHalfCpltCallback>:
 8001a10:	b480      	push	{r7}
 8001a12:	b083      	sub	sp, #12
 8001a14:	af00      	add	r7, sp, #0
 8001a16:	6078      	str	r0, [r7, #4]
 8001a18:	bf00      	nop
 8001a1a:	370c      	adds	r7, #12
 8001a1c:	46bd      	mov	sp, r7
 8001a1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a22:	4770      	bx	lr

08001a24 <HAL_ADC_ErrorCallback>:
 8001a24:	b480      	push	{r7}
 8001a26:	b083      	sub	sp, #12
 8001a28:	af00      	add	r7, sp, #0
 8001a2a:	6078      	str	r0, [r7, #4]
 8001a2c:	bf00      	nop
 8001a2e:	370c      	adds	r7, #12
 8001a30:	46bd      	mov	sp, r7
 8001a32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a36:	4770      	bx	lr

08001a38 <HAL_ADC_ConfigChannel>:
 8001a38:	b480      	push	{r7}
 8001a3a:	b085      	sub	sp, #20
 8001a3c:	af00      	add	r7, sp, #0
 8001a3e:	6078      	str	r0, [r7, #4]
 8001a40:	6039      	str	r1, [r7, #0]
 8001a42:	2300      	movs	r3, #0
 8001a44:	60bb      	str	r3, [r7, #8]
 8001a46:	687b      	ldr	r3, [r7, #4]
 8001a48:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8001a4c:	2b01      	cmp	r3, #1
 8001a4e:	d101      	bne.n	8001a54 <HAL_ADC_ConfigChannel+0x1c>
 8001a50:	2302      	movs	r3, #2
 8001a52:	e113      	b.n	8001c7c <HAL_ADC_ConfigChannel+0x244>
 8001a54:	687b      	ldr	r3, [r7, #4]
 8001a56:	2201      	movs	r2, #1
 8001a58:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001a5c:	683b      	ldr	r3, [r7, #0]
 8001a5e:	681b      	ldr	r3, [r3, #0]
 8001a60:	2b09      	cmp	r3, #9
 8001a62:	d925      	bls.n	8001ab0 <HAL_ADC_ConfigChannel+0x78>
 8001a64:	687b      	ldr	r3, [r7, #4]
 8001a66:	681b      	ldr	r3, [r3, #0]
 8001a68:	68d9      	ldr	r1, [r3, #12]
 8001a6a:	683b      	ldr	r3, [r7, #0]
 8001a6c:	681b      	ldr	r3, [r3, #0]
 8001a6e:	b29b      	uxth	r3, r3
 8001a70:	461a      	mov	r2, r3
 8001a72:	4613      	mov	r3, r2
 8001a74:	005b      	lsls	r3, r3, #1
 8001a76:	4413      	add	r3, r2
 8001a78:	3b1e      	subs	r3, #30
 8001a7a:	2207      	movs	r2, #7
 8001a7c:	fa02 f303 	lsl.w	r3, r2, r3
 8001a80:	43da      	mvns	r2, r3
 8001a82:	687b      	ldr	r3, [r7, #4]
 8001a84:	681b      	ldr	r3, [r3, #0]
 8001a86:	400a      	ands	r2, r1
 8001a88:	60da      	str	r2, [r3, #12]
 8001a8a:	687b      	ldr	r3, [r7, #4]
 8001a8c:	681b      	ldr	r3, [r3, #0]
 8001a8e:	68d9      	ldr	r1, [r3, #12]
 8001a90:	683b      	ldr	r3, [r7, #0]
 8001a92:	689a      	ldr	r2, [r3, #8]
 8001a94:	683b      	ldr	r3, [r7, #0]
 8001a96:	681b      	ldr	r3, [r3, #0]
 8001a98:	b29b      	uxth	r3, r3
 8001a9a:	4618      	mov	r0, r3
 8001a9c:	4603      	mov	r3, r0
 8001a9e:	005b      	lsls	r3, r3, #1
 8001aa0:	4403      	add	r3, r0
 8001aa2:	3b1e      	subs	r3, #30
 8001aa4:	409a      	lsls	r2, r3
 8001aa6:	687b      	ldr	r3, [r7, #4]
 8001aa8:	681b      	ldr	r3, [r3, #0]
 8001aaa:	430a      	orrs	r2, r1
 8001aac:	60da      	str	r2, [r3, #12]
 8001aae:	e022      	b.n	8001af6 <HAL_ADC_ConfigChannel+0xbe>
 8001ab0:	687b      	ldr	r3, [r7, #4]
 8001ab2:	681b      	ldr	r3, [r3, #0]
 8001ab4:	6919      	ldr	r1, [r3, #16]
 8001ab6:	683b      	ldr	r3, [r7, #0]
 8001ab8:	681b      	ldr	r3, [r3, #0]
 8001aba:	b29b      	uxth	r3, r3
 8001abc:	461a      	mov	r2, r3
 8001abe:	4613      	mov	r3, r2
 8001ac0:	005b      	lsls	r3, r3, #1
 8001ac2:	4413      	add	r3, r2
 8001ac4:	2207      	movs	r2, #7
 8001ac6:	fa02 f303 	lsl.w	r3, r2, r3
 8001aca:	43da      	mvns	r2, r3
 8001acc:	687b      	ldr	r3, [r7, #4]
 8001ace:	681b      	ldr	r3, [r3, #0]
 8001ad0:	400a      	ands	r2, r1
 8001ad2:	611a      	str	r2, [r3, #16]
 8001ad4:	687b      	ldr	r3, [r7, #4]
 8001ad6:	681b      	ldr	r3, [r3, #0]
 8001ad8:	6919      	ldr	r1, [r3, #16]
 8001ada:	683b      	ldr	r3, [r7, #0]
 8001adc:	689a      	ldr	r2, [r3, #8]
 8001ade:	683b      	ldr	r3, [r7, #0]
 8001ae0:	681b      	ldr	r3, [r3, #0]
 8001ae2:	b29b      	uxth	r3, r3
 8001ae4:	4618      	mov	r0, r3
 8001ae6:	4603      	mov	r3, r0
 8001ae8:	005b      	lsls	r3, r3, #1
 8001aea:	4403      	add	r3, r0
 8001aec:	409a      	lsls	r2, r3
 8001aee:	687b      	ldr	r3, [r7, #4]
 8001af0:	681b      	ldr	r3, [r3, #0]
 8001af2:	430a      	orrs	r2, r1
 8001af4:	611a      	str	r2, [r3, #16]
 8001af6:	683b      	ldr	r3, [r7, #0]
 8001af8:	685b      	ldr	r3, [r3, #4]
 8001afa:	2b06      	cmp	r3, #6
 8001afc:	d824      	bhi.n	8001b48 <HAL_ADC_ConfigChannel+0x110>
 8001afe:	687b      	ldr	r3, [r7, #4]
 8001b00:	681b      	ldr	r3, [r3, #0]
 8001b02:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8001b04:	683b      	ldr	r3, [r7, #0]
 8001b06:	685a      	ldr	r2, [r3, #4]
 8001b08:	4613      	mov	r3, r2
 8001b0a:	009b      	lsls	r3, r3, #2
 8001b0c:	4413      	add	r3, r2
 8001b0e:	3b05      	subs	r3, #5
 8001b10:	221f      	movs	r2, #31
 8001b12:	fa02 f303 	lsl.w	r3, r2, r3
 8001b16:	43da      	mvns	r2, r3
 8001b18:	687b      	ldr	r3, [r7, #4]
 8001b1a:	681b      	ldr	r3, [r3, #0]
 8001b1c:	400a      	ands	r2, r1
 8001b1e:	635a      	str	r2, [r3, #52]	@ 0x34
 8001b20:	687b      	ldr	r3, [r7, #4]
 8001b22:	681b      	ldr	r3, [r3, #0]
 8001b24:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8001b26:	683b      	ldr	r3, [r7, #0]
 8001b28:	681b      	ldr	r3, [r3, #0]
 8001b2a:	b29b      	uxth	r3, r3
 8001b2c:	4618      	mov	r0, r3
 8001b2e:	683b      	ldr	r3, [r7, #0]
 8001b30:	685a      	ldr	r2, [r3, #4]
 8001b32:	4613      	mov	r3, r2
 8001b34:	009b      	lsls	r3, r3, #2
 8001b36:	4413      	add	r3, r2
 8001b38:	3b05      	subs	r3, #5
 8001b3a:	fa00 f203 	lsl.w	r2, r0, r3
 8001b3e:	687b      	ldr	r3, [r7, #4]
 8001b40:	681b      	ldr	r3, [r3, #0]
 8001b42:	430a      	orrs	r2, r1
 8001b44:	635a      	str	r2, [r3, #52]	@ 0x34
 8001b46:	e04c      	b.n	8001be2 <HAL_ADC_ConfigChannel+0x1aa>
 8001b48:	683b      	ldr	r3, [r7, #0]
 8001b4a:	685b      	ldr	r3, [r3, #4]
 8001b4c:	2b0c      	cmp	r3, #12
 8001b4e:	d824      	bhi.n	8001b9a <HAL_ADC_ConfigChannel+0x162>
 8001b50:	687b      	ldr	r3, [r7, #4]
 8001b52:	681b      	ldr	r3, [r3, #0]
 8001b54:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8001b56:	683b      	ldr	r3, [r7, #0]
 8001b58:	685a      	ldr	r2, [r3, #4]
 8001b5a:	4613      	mov	r3, r2
 8001b5c:	009b      	lsls	r3, r3, #2
 8001b5e:	4413      	add	r3, r2
 8001b60:	3b23      	subs	r3, #35	@ 0x23
 8001b62:	221f      	movs	r2, #31
 8001b64:	fa02 f303 	lsl.w	r3, r2, r3
 8001b68:	43da      	mvns	r2, r3
 8001b6a:	687b      	ldr	r3, [r7, #4]
 8001b6c:	681b      	ldr	r3, [r3, #0]
 8001b6e:	400a      	ands	r2, r1
 8001b70:	631a      	str	r2, [r3, #48]	@ 0x30
 8001b72:	687b      	ldr	r3, [r7, #4]
 8001b74:	681b      	ldr	r3, [r3, #0]
 8001b76:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8001b78:	683b      	ldr	r3, [r7, #0]
 8001b7a:	681b      	ldr	r3, [r3, #0]
 8001b7c:	b29b      	uxth	r3, r3
 8001b7e:	4618      	mov	r0, r3
 8001b80:	683b      	ldr	r3, [r7, #0]
 8001b82:	685a      	ldr	r2, [r3, #4]
 8001b84:	4613      	mov	r3, r2
 8001b86:	009b      	lsls	r3, r3, #2
 8001b88:	4413      	add	r3, r2
 8001b8a:	3b23      	subs	r3, #35	@ 0x23
 8001b8c:	fa00 f203 	lsl.w	r2, r0, r3
 8001b90:	687b      	ldr	r3, [r7, #4]
 8001b92:	681b      	ldr	r3, [r3, #0]
 8001b94:	430a      	orrs	r2, r1
 8001b96:	631a      	str	r2, [r3, #48]	@ 0x30
 8001b98:	e023      	b.n	8001be2 <HAL_ADC_ConfigChannel+0x1aa>
 8001b9a:	687b      	ldr	r3, [r7, #4]
 8001b9c:	681b      	ldr	r3, [r3, #0]
 8001b9e:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8001ba0:	683b      	ldr	r3, [r7, #0]
 8001ba2:	685a      	ldr	r2, [r3, #4]
 8001ba4:	4613      	mov	r3, r2
 8001ba6:	009b      	lsls	r3, r3, #2
 8001ba8:	4413      	add	r3, r2
 8001baa:	3b41      	subs	r3, #65	@ 0x41
 8001bac:	221f      	movs	r2, #31
 8001bae:	fa02 f303 	lsl.w	r3, r2, r3
 8001bb2:	43da      	mvns	r2, r3
 8001bb4:	687b      	ldr	r3, [r7, #4]
 8001bb6:	681b      	ldr	r3, [r3, #0]
 8001bb8:	400a      	ands	r2, r1
 8001bba:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001bbc:	687b      	ldr	r3, [r7, #4]
 8001bbe:	681b      	ldr	r3, [r3, #0]
 8001bc0:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8001bc2:	683b      	ldr	r3, [r7, #0]
 8001bc4:	681b      	ldr	r3, [r3, #0]
 8001bc6:	b29b      	uxth	r3, r3
 8001bc8:	4618      	mov	r0, r3
 8001bca:	683b      	ldr	r3, [r7, #0]
 8001bcc:	685a      	ldr	r2, [r3, #4]
 8001bce:	4613      	mov	r3, r2
 8001bd0:	009b      	lsls	r3, r3, #2
 8001bd2:	4413      	add	r3, r2
 8001bd4:	3b41      	subs	r3, #65	@ 0x41
 8001bd6:	fa00 f203 	lsl.w	r2, r0, r3
 8001bda:	687b      	ldr	r3, [r7, #4]
 8001bdc:	681b      	ldr	r3, [r3, #0]
 8001bde:	430a      	orrs	r2, r1
 8001be0:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001be2:	4b29      	ldr	r3, [pc, #164]	@ (8001c88 <HAL_ADC_ConfigChannel+0x250>)
 8001be4:	60fb      	str	r3, [r7, #12]
 8001be6:	687b      	ldr	r3, [r7, #4]
 8001be8:	681b      	ldr	r3, [r3, #0]
 8001bea:	4a28      	ldr	r2, [pc, #160]	@ (8001c8c <HAL_ADC_ConfigChannel+0x254>)
 8001bec:	4293      	cmp	r3, r2
 8001bee:	d10f      	bne.n	8001c10 <HAL_ADC_ConfigChannel+0x1d8>
 8001bf0:	683b      	ldr	r3, [r7, #0]
 8001bf2:	681b      	ldr	r3, [r3, #0]
 8001bf4:	2b12      	cmp	r3, #18
 8001bf6:	d10b      	bne.n	8001c10 <HAL_ADC_ConfigChannel+0x1d8>
 8001bf8:	68fb      	ldr	r3, [r7, #12]
 8001bfa:	685b      	ldr	r3, [r3, #4]
 8001bfc:	f423 0200 	bic.w	r2, r3, #8388608	@ 0x800000
 8001c00:	68fb      	ldr	r3, [r7, #12]
 8001c02:	605a      	str	r2, [r3, #4]
 8001c04:	68fb      	ldr	r3, [r7, #12]
 8001c06:	685b      	ldr	r3, [r3, #4]
 8001c08:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 8001c0c:	68fb      	ldr	r3, [r7, #12]
 8001c0e:	605a      	str	r2, [r3, #4]
 8001c10:	687b      	ldr	r3, [r7, #4]
 8001c12:	681b      	ldr	r3, [r3, #0]
 8001c14:	4a1d      	ldr	r2, [pc, #116]	@ (8001c8c <HAL_ADC_ConfigChannel+0x254>)
 8001c16:	4293      	cmp	r3, r2
 8001c18:	d12b      	bne.n	8001c72 <HAL_ADC_ConfigChannel+0x23a>
 8001c1a:	683b      	ldr	r3, [r7, #0]
 8001c1c:	681b      	ldr	r3, [r3, #0]
 8001c1e:	4a1c      	ldr	r2, [pc, #112]	@ (8001c90 <HAL_ADC_ConfigChannel+0x258>)
 8001c20:	4293      	cmp	r3, r2
 8001c22:	d003      	beq.n	8001c2c <HAL_ADC_ConfigChannel+0x1f4>
 8001c24:	683b      	ldr	r3, [r7, #0]
 8001c26:	681b      	ldr	r3, [r3, #0]
 8001c28:	2b11      	cmp	r3, #17
 8001c2a:	d122      	bne.n	8001c72 <HAL_ADC_ConfigChannel+0x23a>
 8001c2c:	68fb      	ldr	r3, [r7, #12]
 8001c2e:	685b      	ldr	r3, [r3, #4]
 8001c30:	f423 0280 	bic.w	r2, r3, #4194304	@ 0x400000
 8001c34:	68fb      	ldr	r3, [r7, #12]
 8001c36:	605a      	str	r2, [r3, #4]
 8001c38:	68fb      	ldr	r3, [r7, #12]
 8001c3a:	685b      	ldr	r3, [r3, #4]
 8001c3c:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 8001c40:	68fb      	ldr	r3, [r7, #12]
 8001c42:	605a      	str	r2, [r3, #4]
 8001c44:	683b      	ldr	r3, [r7, #0]
 8001c46:	681b      	ldr	r3, [r3, #0]
 8001c48:	4a11      	ldr	r2, [pc, #68]	@ (8001c90 <HAL_ADC_ConfigChannel+0x258>)
 8001c4a:	4293      	cmp	r3, r2
 8001c4c:	d111      	bne.n	8001c72 <HAL_ADC_ConfigChannel+0x23a>
 8001c4e:	4b11      	ldr	r3, [pc, #68]	@ (8001c94 <HAL_ADC_ConfigChannel+0x25c>)
 8001c50:	681b      	ldr	r3, [r3, #0]
 8001c52:	4a11      	ldr	r2, [pc, #68]	@ (8001c98 <HAL_ADC_ConfigChannel+0x260>)
 8001c54:	fba2 2303 	umull	r2, r3, r2, r3
 8001c58:	0c9a      	lsrs	r2, r3, #18
 8001c5a:	4613      	mov	r3, r2
 8001c5c:	009b      	lsls	r3, r3, #2
 8001c5e:	4413      	add	r3, r2
 8001c60:	005b      	lsls	r3, r3, #1
 8001c62:	60bb      	str	r3, [r7, #8]
 8001c64:	e002      	b.n	8001c6c <HAL_ADC_ConfigChannel+0x234>
 8001c66:	68bb      	ldr	r3, [r7, #8]
 8001c68:	3b01      	subs	r3, #1
 8001c6a:	60bb      	str	r3, [r7, #8]
 8001c6c:	68bb      	ldr	r3, [r7, #8]
 8001c6e:	2b00      	cmp	r3, #0
 8001c70:	d1f9      	bne.n	8001c66 <HAL_ADC_ConfigChannel+0x22e>
 8001c72:	687b      	ldr	r3, [r7, #4]
 8001c74:	2200      	movs	r2, #0
 8001c76:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001c7a:	2300      	movs	r3, #0
 8001c7c:	4618      	mov	r0, r3
 8001c7e:	3714      	adds	r7, #20
 8001c80:	46bd      	mov	sp, r7
 8001c82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c86:	4770      	bx	lr
 8001c88:	40012300 	.word	0x40012300
 8001c8c:	40012000 	.word	0x40012000
 8001c90:	10000012 	.word	0x10000012
 8001c94:	20000020 	.word	0x20000020
 8001c98:	431bde83 	.word	0x431bde83

08001c9c <ADC_Init>:
 8001c9c:	b480      	push	{r7}
 8001c9e:	b085      	sub	sp, #20
 8001ca0:	af00      	add	r7, sp, #0
 8001ca2:	6078      	str	r0, [r7, #4]
 8001ca4:	4b79      	ldr	r3, [pc, #484]	@ (8001e8c <ADC_Init+0x1f0>)
 8001ca6:	60fb      	str	r3, [r7, #12]
 8001ca8:	68fb      	ldr	r3, [r7, #12]
 8001caa:	685b      	ldr	r3, [r3, #4]
 8001cac:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8001cb0:	68fb      	ldr	r3, [r7, #12]
 8001cb2:	605a      	str	r2, [r3, #4]
 8001cb4:	68fb      	ldr	r3, [r7, #12]
 8001cb6:	685a      	ldr	r2, [r3, #4]
 8001cb8:	687b      	ldr	r3, [r7, #4]
 8001cba:	685b      	ldr	r3, [r3, #4]
 8001cbc:	431a      	orrs	r2, r3
 8001cbe:	68fb      	ldr	r3, [r7, #12]
 8001cc0:	605a      	str	r2, [r3, #4]
 8001cc2:	687b      	ldr	r3, [r7, #4]
 8001cc4:	681b      	ldr	r3, [r3, #0]
 8001cc6:	685a      	ldr	r2, [r3, #4]
 8001cc8:	687b      	ldr	r3, [r7, #4]
 8001cca:	681b      	ldr	r3, [r3, #0]
 8001ccc:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8001cd0:	605a      	str	r2, [r3, #4]
 8001cd2:	687b      	ldr	r3, [r7, #4]
 8001cd4:	681b      	ldr	r3, [r3, #0]
 8001cd6:	6859      	ldr	r1, [r3, #4]
 8001cd8:	687b      	ldr	r3, [r7, #4]
 8001cda:	691b      	ldr	r3, [r3, #16]
 8001cdc:	021a      	lsls	r2, r3, #8
 8001cde:	687b      	ldr	r3, [r7, #4]
 8001ce0:	681b      	ldr	r3, [r3, #0]
 8001ce2:	430a      	orrs	r2, r1
 8001ce4:	605a      	str	r2, [r3, #4]
 8001ce6:	687b      	ldr	r3, [r7, #4]
 8001ce8:	681b      	ldr	r3, [r3, #0]
 8001cea:	685a      	ldr	r2, [r3, #4]
 8001cec:	687b      	ldr	r3, [r7, #4]
 8001cee:	681b      	ldr	r3, [r3, #0]
 8001cf0:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 8001cf4:	605a      	str	r2, [r3, #4]
 8001cf6:	687b      	ldr	r3, [r7, #4]
 8001cf8:	681b      	ldr	r3, [r3, #0]
 8001cfa:	6859      	ldr	r1, [r3, #4]
 8001cfc:	687b      	ldr	r3, [r7, #4]
 8001cfe:	689a      	ldr	r2, [r3, #8]
 8001d00:	687b      	ldr	r3, [r7, #4]
 8001d02:	681b      	ldr	r3, [r3, #0]
 8001d04:	430a      	orrs	r2, r1
 8001d06:	605a      	str	r2, [r3, #4]
 8001d08:	687b      	ldr	r3, [r7, #4]
 8001d0a:	681b      	ldr	r3, [r3, #0]
 8001d0c:	689a      	ldr	r2, [r3, #8]
 8001d0e:	687b      	ldr	r3, [r7, #4]
 8001d10:	681b      	ldr	r3, [r3, #0]
 8001d12:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8001d16:	609a      	str	r2, [r3, #8]
 8001d18:	687b      	ldr	r3, [r7, #4]
 8001d1a:	681b      	ldr	r3, [r3, #0]
 8001d1c:	6899      	ldr	r1, [r3, #8]
 8001d1e:	687b      	ldr	r3, [r7, #4]
 8001d20:	68da      	ldr	r2, [r3, #12]
 8001d22:	687b      	ldr	r3, [r7, #4]
 8001d24:	681b      	ldr	r3, [r3, #0]
 8001d26:	430a      	orrs	r2, r1
 8001d28:	609a      	str	r2, [r3, #8]
 8001d2a:	687b      	ldr	r3, [r7, #4]
 8001d2c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001d2e:	4a58      	ldr	r2, [pc, #352]	@ (8001e90 <ADC_Init+0x1f4>)
 8001d30:	4293      	cmp	r3, r2
 8001d32:	d022      	beq.n	8001d7a <ADC_Init+0xde>
 8001d34:	687b      	ldr	r3, [r7, #4]
 8001d36:	681b      	ldr	r3, [r3, #0]
 8001d38:	689a      	ldr	r2, [r3, #8]
 8001d3a:	687b      	ldr	r3, [r7, #4]
 8001d3c:	681b      	ldr	r3, [r3, #0]
 8001d3e:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8001d42:	609a      	str	r2, [r3, #8]
 8001d44:	687b      	ldr	r3, [r7, #4]
 8001d46:	681b      	ldr	r3, [r3, #0]
 8001d48:	6899      	ldr	r1, [r3, #8]
 8001d4a:	687b      	ldr	r3, [r7, #4]
 8001d4c:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8001d4e:	687b      	ldr	r3, [r7, #4]
 8001d50:	681b      	ldr	r3, [r3, #0]
 8001d52:	430a      	orrs	r2, r1
 8001d54:	609a      	str	r2, [r3, #8]
 8001d56:	687b      	ldr	r3, [r7, #4]
 8001d58:	681b      	ldr	r3, [r3, #0]
 8001d5a:	689a      	ldr	r2, [r3, #8]
 8001d5c:	687b      	ldr	r3, [r7, #4]
 8001d5e:	681b      	ldr	r3, [r3, #0]
 8001d60:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8001d64:	609a      	str	r2, [r3, #8]
 8001d66:	687b      	ldr	r3, [r7, #4]
 8001d68:	681b      	ldr	r3, [r3, #0]
 8001d6a:	6899      	ldr	r1, [r3, #8]
 8001d6c:	687b      	ldr	r3, [r7, #4]
 8001d6e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8001d70:	687b      	ldr	r3, [r7, #4]
 8001d72:	681b      	ldr	r3, [r3, #0]
 8001d74:	430a      	orrs	r2, r1
 8001d76:	609a      	str	r2, [r3, #8]
 8001d78:	e00f      	b.n	8001d9a <ADC_Init+0xfe>
 8001d7a:	687b      	ldr	r3, [r7, #4]
 8001d7c:	681b      	ldr	r3, [r3, #0]
 8001d7e:	689a      	ldr	r2, [r3, #8]
 8001d80:	687b      	ldr	r3, [r7, #4]
 8001d82:	681b      	ldr	r3, [r3, #0]
 8001d84:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8001d88:	609a      	str	r2, [r3, #8]
 8001d8a:	687b      	ldr	r3, [r7, #4]
 8001d8c:	681b      	ldr	r3, [r3, #0]
 8001d8e:	689a      	ldr	r2, [r3, #8]
 8001d90:	687b      	ldr	r3, [r7, #4]
 8001d92:	681b      	ldr	r3, [r3, #0]
 8001d94:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8001d98:	609a      	str	r2, [r3, #8]
 8001d9a:	687b      	ldr	r3, [r7, #4]
 8001d9c:	681b      	ldr	r3, [r3, #0]
 8001d9e:	689a      	ldr	r2, [r3, #8]
 8001da0:	687b      	ldr	r3, [r7, #4]
 8001da2:	681b      	ldr	r3, [r3, #0]
 8001da4:	f022 0202 	bic.w	r2, r2, #2
 8001da8:	609a      	str	r2, [r3, #8]
 8001daa:	687b      	ldr	r3, [r7, #4]
 8001dac:	681b      	ldr	r3, [r3, #0]
 8001dae:	6899      	ldr	r1, [r3, #8]
 8001db0:	687b      	ldr	r3, [r7, #4]
 8001db2:	7e1b      	ldrb	r3, [r3, #24]
 8001db4:	005a      	lsls	r2, r3, #1
 8001db6:	687b      	ldr	r3, [r7, #4]
 8001db8:	681b      	ldr	r3, [r3, #0]
 8001dba:	430a      	orrs	r2, r1
 8001dbc:	609a      	str	r2, [r3, #8]
 8001dbe:	687b      	ldr	r3, [r7, #4]
 8001dc0:	f893 3020 	ldrb.w	r3, [r3, #32]
 8001dc4:	2b00      	cmp	r3, #0
 8001dc6:	d01b      	beq.n	8001e00 <ADC_Init+0x164>
 8001dc8:	687b      	ldr	r3, [r7, #4]
 8001dca:	681b      	ldr	r3, [r3, #0]
 8001dcc:	685a      	ldr	r2, [r3, #4]
 8001dce:	687b      	ldr	r3, [r7, #4]
 8001dd0:	681b      	ldr	r3, [r3, #0]
 8001dd2:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8001dd6:	605a      	str	r2, [r3, #4]
 8001dd8:	687b      	ldr	r3, [r7, #4]
 8001dda:	681b      	ldr	r3, [r3, #0]
 8001ddc:	685a      	ldr	r2, [r3, #4]
 8001dde:	687b      	ldr	r3, [r7, #4]
 8001de0:	681b      	ldr	r3, [r3, #0]
 8001de2:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 8001de6:	605a      	str	r2, [r3, #4]
 8001de8:	687b      	ldr	r3, [r7, #4]
 8001dea:	681b      	ldr	r3, [r3, #0]
 8001dec:	6859      	ldr	r1, [r3, #4]
 8001dee:	687b      	ldr	r3, [r7, #4]
 8001df0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001df2:	3b01      	subs	r3, #1
 8001df4:	035a      	lsls	r2, r3, #13
 8001df6:	687b      	ldr	r3, [r7, #4]
 8001df8:	681b      	ldr	r3, [r3, #0]
 8001dfa:	430a      	orrs	r2, r1
 8001dfc:	605a      	str	r2, [r3, #4]
 8001dfe:	e007      	b.n	8001e10 <ADC_Init+0x174>
 8001e00:	687b      	ldr	r3, [r7, #4]
 8001e02:	681b      	ldr	r3, [r3, #0]
 8001e04:	685a      	ldr	r2, [r3, #4]
 8001e06:	687b      	ldr	r3, [r7, #4]
 8001e08:	681b      	ldr	r3, [r3, #0]
 8001e0a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8001e0e:	605a      	str	r2, [r3, #4]
 8001e10:	687b      	ldr	r3, [r7, #4]
 8001e12:	681b      	ldr	r3, [r3, #0]
 8001e14:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8001e16:	687b      	ldr	r3, [r7, #4]
 8001e18:	681b      	ldr	r3, [r3, #0]
 8001e1a:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8001e1e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001e20:	687b      	ldr	r3, [r7, #4]
 8001e22:	681b      	ldr	r3, [r3, #0]
 8001e24:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8001e26:	687b      	ldr	r3, [r7, #4]
 8001e28:	69db      	ldr	r3, [r3, #28]
 8001e2a:	3b01      	subs	r3, #1
 8001e2c:	051a      	lsls	r2, r3, #20
 8001e2e:	687b      	ldr	r3, [r7, #4]
 8001e30:	681b      	ldr	r3, [r3, #0]
 8001e32:	430a      	orrs	r2, r1
 8001e34:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001e36:	687b      	ldr	r3, [r7, #4]
 8001e38:	681b      	ldr	r3, [r3, #0]
 8001e3a:	689a      	ldr	r2, [r3, #8]
 8001e3c:	687b      	ldr	r3, [r7, #4]
 8001e3e:	681b      	ldr	r3, [r3, #0]
 8001e40:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8001e44:	609a      	str	r2, [r3, #8]
 8001e46:	687b      	ldr	r3, [r7, #4]
 8001e48:	681b      	ldr	r3, [r3, #0]
 8001e4a:	6899      	ldr	r1, [r3, #8]
 8001e4c:	687b      	ldr	r3, [r7, #4]
 8001e4e:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 8001e52:	025a      	lsls	r2, r3, #9
 8001e54:	687b      	ldr	r3, [r7, #4]
 8001e56:	681b      	ldr	r3, [r3, #0]
 8001e58:	430a      	orrs	r2, r1
 8001e5a:	609a      	str	r2, [r3, #8]
 8001e5c:	687b      	ldr	r3, [r7, #4]
 8001e5e:	681b      	ldr	r3, [r3, #0]
 8001e60:	689a      	ldr	r2, [r3, #8]
 8001e62:	687b      	ldr	r3, [r7, #4]
 8001e64:	681b      	ldr	r3, [r3, #0]
 8001e66:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8001e6a:	609a      	str	r2, [r3, #8]
 8001e6c:	687b      	ldr	r3, [r7, #4]
 8001e6e:	681b      	ldr	r3, [r3, #0]
 8001e70:	6899      	ldr	r1, [r3, #8]
 8001e72:	687b      	ldr	r3, [r7, #4]
 8001e74:	695b      	ldr	r3, [r3, #20]
 8001e76:	029a      	lsls	r2, r3, #10
 8001e78:	687b      	ldr	r3, [r7, #4]
 8001e7a:	681b      	ldr	r3, [r3, #0]
 8001e7c:	430a      	orrs	r2, r1
 8001e7e:	609a      	str	r2, [r3, #8]
 8001e80:	bf00      	nop
 8001e82:	3714      	adds	r7, #20
 8001e84:	46bd      	mov	sp, r7
 8001e86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e8a:	4770      	bx	lr
 8001e8c:	40012300 	.word	0x40012300
 8001e90:	0f000001 	.word	0x0f000001

08001e94 <ADC_DMAConvCplt>:
 8001e94:	b580      	push	{r7, lr}
 8001e96:	b084      	sub	sp, #16
 8001e98:	af00      	add	r7, sp, #0
 8001e9a:	6078      	str	r0, [r7, #4]
 8001e9c:	687b      	ldr	r3, [r7, #4]
 8001e9e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001ea0:	60fb      	str	r3, [r7, #12]
 8001ea2:	68fb      	ldr	r3, [r7, #12]
 8001ea4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ea6:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8001eaa:	2b00      	cmp	r3, #0
 8001eac:	d13c      	bne.n	8001f28 <ADC_DMAConvCplt+0x94>
 8001eae:	68fb      	ldr	r3, [r7, #12]
 8001eb0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001eb2:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8001eb6:	68fb      	ldr	r3, [r7, #12]
 8001eb8:	641a      	str	r2, [r3, #64]	@ 0x40
 8001eba:	68fb      	ldr	r3, [r7, #12]
 8001ebc:	681b      	ldr	r3, [r3, #0]
 8001ebe:	689b      	ldr	r3, [r3, #8]
 8001ec0:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8001ec4:	2b00      	cmp	r3, #0
 8001ec6:	d12b      	bne.n	8001f20 <ADC_DMAConvCplt+0x8c>
 8001ec8:	68fb      	ldr	r3, [r7, #12]
 8001eca:	7e1b      	ldrb	r3, [r3, #24]
 8001ecc:	2b00      	cmp	r3, #0
 8001ece:	d127      	bne.n	8001f20 <ADC_DMAConvCplt+0x8c>
 8001ed0:	68fb      	ldr	r3, [r7, #12]
 8001ed2:	681b      	ldr	r3, [r3, #0]
 8001ed4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001ed6:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
 8001eda:	2b00      	cmp	r3, #0
 8001edc:	d006      	beq.n	8001eec <ADC_DMAConvCplt+0x58>
 8001ede:	68fb      	ldr	r3, [r7, #12]
 8001ee0:	681b      	ldr	r3, [r3, #0]
 8001ee2:	689b      	ldr	r3, [r3, #8]
 8001ee4:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001ee8:	2b00      	cmp	r3, #0
 8001eea:	d119      	bne.n	8001f20 <ADC_DMAConvCplt+0x8c>
 8001eec:	68fb      	ldr	r3, [r7, #12]
 8001eee:	681b      	ldr	r3, [r3, #0]
 8001ef0:	685a      	ldr	r2, [r3, #4]
 8001ef2:	68fb      	ldr	r3, [r7, #12]
 8001ef4:	681b      	ldr	r3, [r3, #0]
 8001ef6:	f022 0220 	bic.w	r2, r2, #32
 8001efa:	605a      	str	r2, [r3, #4]
 8001efc:	68fb      	ldr	r3, [r7, #12]
 8001efe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f00:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8001f04:	68fb      	ldr	r3, [r7, #12]
 8001f06:	641a      	str	r2, [r3, #64]	@ 0x40
 8001f08:	68fb      	ldr	r3, [r7, #12]
 8001f0a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f0c:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001f10:	2b00      	cmp	r3, #0
 8001f12:	d105      	bne.n	8001f20 <ADC_DMAConvCplt+0x8c>
 8001f14:	68fb      	ldr	r3, [r7, #12]
 8001f16:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f18:	f043 0201 	orr.w	r2, r3, #1
 8001f1c:	68fb      	ldr	r3, [r7, #12]
 8001f1e:	641a      	str	r2, [r3, #64]	@ 0x40
 8001f20:	68f8      	ldr	r0, [r7, #12]
 8001f22:	f7fe fb53 	bl	80005cc <HAL_ADC_ConvCpltCallback>
 8001f26:	e00e      	b.n	8001f46 <ADC_DMAConvCplt+0xb2>
 8001f28:	68fb      	ldr	r3, [r7, #12]
 8001f2a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f2c:	f003 0310 	and.w	r3, r3, #16
 8001f30:	2b00      	cmp	r3, #0
 8001f32:	d003      	beq.n	8001f3c <ADC_DMAConvCplt+0xa8>
 8001f34:	68f8      	ldr	r0, [r7, #12]
 8001f36:	f7ff fd75 	bl	8001a24 <HAL_ADC_ErrorCallback>
 8001f3a:	e004      	b.n	8001f46 <ADC_DMAConvCplt+0xb2>
 8001f3c:	68fb      	ldr	r3, [r7, #12]
 8001f3e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001f40:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001f42:	6878      	ldr	r0, [r7, #4]
 8001f44:	4798      	blx	r3
 8001f46:	bf00      	nop
 8001f48:	3710      	adds	r7, #16
 8001f4a:	46bd      	mov	sp, r7
 8001f4c:	bd80      	pop	{r7, pc}

08001f4e <ADC_DMAHalfConvCplt>:
 8001f4e:	b580      	push	{r7, lr}
 8001f50:	b084      	sub	sp, #16
 8001f52:	af00      	add	r7, sp, #0
 8001f54:	6078      	str	r0, [r7, #4]
 8001f56:	687b      	ldr	r3, [r7, #4]
 8001f58:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001f5a:	60fb      	str	r3, [r7, #12]
 8001f5c:	68f8      	ldr	r0, [r7, #12]
 8001f5e:	f7ff fd57 	bl	8001a10 <HAL_ADC_ConvHalfCpltCallback>
 8001f62:	bf00      	nop
 8001f64:	3710      	adds	r7, #16
 8001f66:	46bd      	mov	sp, r7
 8001f68:	bd80      	pop	{r7, pc}

08001f6a <ADC_DMAError>:
 8001f6a:	b580      	push	{r7, lr}
 8001f6c:	b084      	sub	sp, #16
 8001f6e:	af00      	add	r7, sp, #0
 8001f70:	6078      	str	r0, [r7, #4]
 8001f72:	687b      	ldr	r3, [r7, #4]
 8001f74:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001f76:	60fb      	str	r3, [r7, #12]
 8001f78:	68fb      	ldr	r3, [r7, #12]
 8001f7a:	2240      	movs	r2, #64	@ 0x40
 8001f7c:	641a      	str	r2, [r3, #64]	@ 0x40
 8001f7e:	68fb      	ldr	r3, [r7, #12]
 8001f80:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001f82:	f043 0204 	orr.w	r2, r3, #4
 8001f86:	68fb      	ldr	r3, [r7, #12]
 8001f88:	645a      	str	r2, [r3, #68]	@ 0x44
 8001f8a:	68f8      	ldr	r0, [r7, #12]
 8001f8c:	f7ff fd4a 	bl	8001a24 <HAL_ADC_ErrorCallback>
 8001f90:	bf00      	nop
 8001f92:	3710      	adds	r7, #16
 8001f94:	46bd      	mov	sp, r7
 8001f96:	bd80      	pop	{r7, pc}

08001f98 <__NVIC_SetPriorityGrouping>:
 8001f98:	b480      	push	{r7}
 8001f9a:	b085      	sub	sp, #20
 8001f9c:	af00      	add	r7, sp, #0
 8001f9e:	6078      	str	r0, [r7, #4]
 8001fa0:	687b      	ldr	r3, [r7, #4]
 8001fa2:	f003 0307 	and.w	r3, r3, #7
 8001fa6:	60fb      	str	r3, [r7, #12]
 8001fa8:	4b0c      	ldr	r3, [pc, #48]	@ (8001fdc <__NVIC_SetPriorityGrouping+0x44>)
 8001faa:	68db      	ldr	r3, [r3, #12]
 8001fac:	60bb      	str	r3, [r7, #8]
 8001fae:	68ba      	ldr	r2, [r7, #8]
 8001fb0:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8001fb4:	4013      	ands	r3, r2
 8001fb6:	60bb      	str	r3, [r7, #8]
 8001fb8:	68fb      	ldr	r3, [r7, #12]
 8001fba:	021a      	lsls	r2, r3, #8
 8001fbc:	68bb      	ldr	r3, [r7, #8]
 8001fbe:	4313      	orrs	r3, r2
 8001fc0:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8001fc4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001fc8:	60bb      	str	r3, [r7, #8]
 8001fca:	4a04      	ldr	r2, [pc, #16]	@ (8001fdc <__NVIC_SetPriorityGrouping+0x44>)
 8001fcc:	68bb      	ldr	r3, [r7, #8]
 8001fce:	60d3      	str	r3, [r2, #12]
 8001fd0:	bf00      	nop
 8001fd2:	3714      	adds	r7, #20
 8001fd4:	46bd      	mov	sp, r7
 8001fd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fda:	4770      	bx	lr
 8001fdc:	e000ed00 	.word	0xe000ed00

08001fe0 <__NVIC_GetPriorityGrouping>:
 8001fe0:	b480      	push	{r7}
 8001fe2:	af00      	add	r7, sp, #0
 8001fe4:	4b04      	ldr	r3, [pc, #16]	@ (8001ff8 <__NVIC_GetPriorityGrouping+0x18>)
 8001fe6:	68db      	ldr	r3, [r3, #12]
 8001fe8:	0a1b      	lsrs	r3, r3, #8
 8001fea:	f003 0307 	and.w	r3, r3, #7
 8001fee:	4618      	mov	r0, r3
 8001ff0:	46bd      	mov	sp, r7
 8001ff2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ff6:	4770      	bx	lr
 8001ff8:	e000ed00 	.word	0xe000ed00

08001ffc <__NVIC_EnableIRQ>:
 8001ffc:	b480      	push	{r7}
 8001ffe:	b083      	sub	sp, #12
 8002000:	af00      	add	r7, sp, #0
 8002002:	4603      	mov	r3, r0
 8002004:	71fb      	strb	r3, [r7, #7]
 8002006:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800200a:	2b00      	cmp	r3, #0
 800200c:	db0b      	blt.n	8002026 <__NVIC_EnableIRQ+0x2a>
 800200e:	79fb      	ldrb	r3, [r7, #7]
 8002010:	f003 021f 	and.w	r2, r3, #31
 8002014:	4907      	ldr	r1, [pc, #28]	@ (8002034 <__NVIC_EnableIRQ+0x38>)
 8002016:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800201a:	095b      	lsrs	r3, r3, #5
 800201c:	2001      	movs	r0, #1
 800201e:	fa00 f202 	lsl.w	r2, r0, r2
 8002022:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002026:	bf00      	nop
 8002028:	370c      	adds	r7, #12
 800202a:	46bd      	mov	sp, r7
 800202c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002030:	4770      	bx	lr
 8002032:	bf00      	nop
 8002034:	e000e100 	.word	0xe000e100

08002038 <__NVIC_SetPriority>:
 8002038:	b480      	push	{r7}
 800203a:	b083      	sub	sp, #12
 800203c:	af00      	add	r7, sp, #0
 800203e:	4603      	mov	r3, r0
 8002040:	6039      	str	r1, [r7, #0]
 8002042:	71fb      	strb	r3, [r7, #7]
 8002044:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002048:	2b00      	cmp	r3, #0
 800204a:	db0a      	blt.n	8002062 <__NVIC_SetPriority+0x2a>
 800204c:	683b      	ldr	r3, [r7, #0]
 800204e:	b2da      	uxtb	r2, r3
 8002050:	490c      	ldr	r1, [pc, #48]	@ (8002084 <__NVIC_SetPriority+0x4c>)
 8002052:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002056:	0112      	lsls	r2, r2, #4
 8002058:	b2d2      	uxtb	r2, r2
 800205a:	440b      	add	r3, r1
 800205c:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8002060:	e00a      	b.n	8002078 <__NVIC_SetPriority+0x40>
 8002062:	683b      	ldr	r3, [r7, #0]
 8002064:	b2da      	uxtb	r2, r3
 8002066:	4908      	ldr	r1, [pc, #32]	@ (8002088 <__NVIC_SetPriority+0x50>)
 8002068:	79fb      	ldrb	r3, [r7, #7]
 800206a:	f003 030f 	and.w	r3, r3, #15
 800206e:	3b04      	subs	r3, #4
 8002070:	0112      	lsls	r2, r2, #4
 8002072:	b2d2      	uxtb	r2, r2
 8002074:	440b      	add	r3, r1
 8002076:	761a      	strb	r2, [r3, #24]
 8002078:	bf00      	nop
 800207a:	370c      	adds	r7, #12
 800207c:	46bd      	mov	sp, r7
 800207e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002082:	4770      	bx	lr
 8002084:	e000e100 	.word	0xe000e100
 8002088:	e000ed00 	.word	0xe000ed00

0800208c <NVIC_EncodePriority>:
 800208c:	b480      	push	{r7}
 800208e:	b089      	sub	sp, #36	@ 0x24
 8002090:	af00      	add	r7, sp, #0
 8002092:	60f8      	str	r0, [r7, #12]
 8002094:	60b9      	str	r1, [r7, #8]
 8002096:	607a      	str	r2, [r7, #4]
 8002098:	68fb      	ldr	r3, [r7, #12]
 800209a:	f003 0307 	and.w	r3, r3, #7
 800209e:	61fb      	str	r3, [r7, #28]
 80020a0:	69fb      	ldr	r3, [r7, #28]
 80020a2:	f1c3 0307 	rsb	r3, r3, #7
 80020a6:	2b04      	cmp	r3, #4
 80020a8:	bf28      	it	cs
 80020aa:	2304      	movcs	r3, #4
 80020ac:	61bb      	str	r3, [r7, #24]
 80020ae:	69fb      	ldr	r3, [r7, #28]
 80020b0:	3304      	adds	r3, #4
 80020b2:	2b06      	cmp	r3, #6
 80020b4:	d902      	bls.n	80020bc <NVIC_EncodePriority+0x30>
 80020b6:	69fb      	ldr	r3, [r7, #28]
 80020b8:	3b03      	subs	r3, #3
 80020ba:	e000      	b.n	80020be <NVIC_EncodePriority+0x32>
 80020bc:	2300      	movs	r3, #0
 80020be:	617b      	str	r3, [r7, #20]
 80020c0:	f04f 32ff 	mov.w	r2, #4294967295
 80020c4:	69bb      	ldr	r3, [r7, #24]
 80020c6:	fa02 f303 	lsl.w	r3, r2, r3
 80020ca:	43da      	mvns	r2, r3
 80020cc:	68bb      	ldr	r3, [r7, #8]
 80020ce:	401a      	ands	r2, r3
 80020d0:	697b      	ldr	r3, [r7, #20]
 80020d2:	409a      	lsls	r2, r3
 80020d4:	f04f 31ff 	mov.w	r1, #4294967295
 80020d8:	697b      	ldr	r3, [r7, #20]
 80020da:	fa01 f303 	lsl.w	r3, r1, r3
 80020de:	43d9      	mvns	r1, r3
 80020e0:	687b      	ldr	r3, [r7, #4]
 80020e2:	400b      	ands	r3, r1
 80020e4:	4313      	orrs	r3, r2
 80020e6:	4618      	mov	r0, r3
 80020e8:	3724      	adds	r7, #36	@ 0x24
 80020ea:	46bd      	mov	sp, r7
 80020ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020f0:	4770      	bx	lr

080020f2 <HAL_NVIC_SetPriorityGrouping>:
 80020f2:	b580      	push	{r7, lr}
 80020f4:	b082      	sub	sp, #8
 80020f6:	af00      	add	r7, sp, #0
 80020f8:	6078      	str	r0, [r7, #4]
 80020fa:	6878      	ldr	r0, [r7, #4]
 80020fc:	f7ff ff4c 	bl	8001f98 <__NVIC_SetPriorityGrouping>
 8002100:	bf00      	nop
 8002102:	3708      	adds	r7, #8
 8002104:	46bd      	mov	sp, r7
 8002106:	bd80      	pop	{r7, pc}

08002108 <HAL_NVIC_SetPriority>:
 8002108:	b580      	push	{r7, lr}
 800210a:	b086      	sub	sp, #24
 800210c:	af00      	add	r7, sp, #0
 800210e:	4603      	mov	r3, r0
 8002110:	60b9      	str	r1, [r7, #8]
 8002112:	607a      	str	r2, [r7, #4]
 8002114:	73fb      	strb	r3, [r7, #15]
 8002116:	2300      	movs	r3, #0
 8002118:	617b      	str	r3, [r7, #20]
 800211a:	f7ff ff61 	bl	8001fe0 <__NVIC_GetPriorityGrouping>
 800211e:	6178      	str	r0, [r7, #20]
 8002120:	687a      	ldr	r2, [r7, #4]
 8002122:	68b9      	ldr	r1, [r7, #8]
 8002124:	6978      	ldr	r0, [r7, #20]
 8002126:	f7ff ffb1 	bl	800208c <NVIC_EncodePriority>
 800212a:	4602      	mov	r2, r0
 800212c:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002130:	4611      	mov	r1, r2
 8002132:	4618      	mov	r0, r3
 8002134:	f7ff ff80 	bl	8002038 <__NVIC_SetPriority>
 8002138:	bf00      	nop
 800213a:	3718      	adds	r7, #24
 800213c:	46bd      	mov	sp, r7
 800213e:	bd80      	pop	{r7, pc}

08002140 <HAL_NVIC_EnableIRQ>:
 8002140:	b580      	push	{r7, lr}
 8002142:	b082      	sub	sp, #8
 8002144:	af00      	add	r7, sp, #0
 8002146:	4603      	mov	r3, r0
 8002148:	71fb      	strb	r3, [r7, #7]
 800214a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800214e:	4618      	mov	r0, r3
 8002150:	f7ff ff54 	bl	8001ffc <__NVIC_EnableIRQ>
 8002154:	bf00      	nop
 8002156:	3708      	adds	r7, #8
 8002158:	46bd      	mov	sp, r7
 800215a:	bd80      	pop	{r7, pc}

0800215c <HAL_DMA_Init>:
 800215c:	b580      	push	{r7, lr}
 800215e:	b086      	sub	sp, #24
 8002160:	af00      	add	r7, sp, #0
 8002162:	6078      	str	r0, [r7, #4]
 8002164:	2300      	movs	r3, #0
 8002166:	617b      	str	r3, [r7, #20]
 8002168:	f7ff faee 	bl	8001748 <HAL_GetTick>
 800216c:	6138      	str	r0, [r7, #16]
 800216e:	687b      	ldr	r3, [r7, #4]
 8002170:	2b00      	cmp	r3, #0
 8002172:	d101      	bne.n	8002178 <HAL_DMA_Init+0x1c>
 8002174:	2301      	movs	r3, #1
 8002176:	e099      	b.n	80022ac <HAL_DMA_Init+0x150>
 8002178:	687b      	ldr	r3, [r7, #4]
 800217a:	2202      	movs	r2, #2
 800217c:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002180:	687b      	ldr	r3, [r7, #4]
 8002182:	2200      	movs	r2, #0
 8002184:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002188:	687b      	ldr	r3, [r7, #4]
 800218a:	681b      	ldr	r3, [r3, #0]
 800218c:	681a      	ldr	r2, [r3, #0]
 800218e:	687b      	ldr	r3, [r7, #4]
 8002190:	681b      	ldr	r3, [r3, #0]
 8002192:	f022 0201 	bic.w	r2, r2, #1
 8002196:	601a      	str	r2, [r3, #0]
 8002198:	e00f      	b.n	80021ba <HAL_DMA_Init+0x5e>
 800219a:	f7ff fad5 	bl	8001748 <HAL_GetTick>
 800219e:	4602      	mov	r2, r0
 80021a0:	693b      	ldr	r3, [r7, #16]
 80021a2:	1ad3      	subs	r3, r2, r3
 80021a4:	2b05      	cmp	r3, #5
 80021a6:	d908      	bls.n	80021ba <HAL_DMA_Init+0x5e>
 80021a8:	687b      	ldr	r3, [r7, #4]
 80021aa:	2220      	movs	r2, #32
 80021ac:	655a      	str	r2, [r3, #84]	@ 0x54
 80021ae:	687b      	ldr	r3, [r7, #4]
 80021b0:	2203      	movs	r2, #3
 80021b2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80021b6:	2303      	movs	r3, #3
 80021b8:	e078      	b.n	80022ac <HAL_DMA_Init+0x150>
 80021ba:	687b      	ldr	r3, [r7, #4]
 80021bc:	681b      	ldr	r3, [r3, #0]
 80021be:	681b      	ldr	r3, [r3, #0]
 80021c0:	f003 0301 	and.w	r3, r3, #1
 80021c4:	2b00      	cmp	r3, #0
 80021c6:	d1e8      	bne.n	800219a <HAL_DMA_Init+0x3e>
 80021c8:	687b      	ldr	r3, [r7, #4]
 80021ca:	681b      	ldr	r3, [r3, #0]
 80021cc:	681b      	ldr	r3, [r3, #0]
 80021ce:	617b      	str	r3, [r7, #20]
 80021d0:	697a      	ldr	r2, [r7, #20]
 80021d2:	4b38      	ldr	r3, [pc, #224]	@ (80022b4 <HAL_DMA_Init+0x158>)
 80021d4:	4013      	ands	r3, r2
 80021d6:	617b      	str	r3, [r7, #20]
 80021d8:	687b      	ldr	r3, [r7, #4]
 80021da:	685a      	ldr	r2, [r3, #4]
 80021dc:	687b      	ldr	r3, [r7, #4]
 80021de:	689b      	ldr	r3, [r3, #8]
 80021e0:	431a      	orrs	r2, r3
 80021e2:	687b      	ldr	r3, [r7, #4]
 80021e4:	68db      	ldr	r3, [r3, #12]
 80021e6:	431a      	orrs	r2, r3
 80021e8:	687b      	ldr	r3, [r7, #4]
 80021ea:	691b      	ldr	r3, [r3, #16]
 80021ec:	431a      	orrs	r2, r3
 80021ee:	687b      	ldr	r3, [r7, #4]
 80021f0:	695b      	ldr	r3, [r3, #20]
 80021f2:	431a      	orrs	r2, r3
 80021f4:	687b      	ldr	r3, [r7, #4]
 80021f6:	699b      	ldr	r3, [r3, #24]
 80021f8:	431a      	orrs	r2, r3
 80021fa:	687b      	ldr	r3, [r7, #4]
 80021fc:	69db      	ldr	r3, [r3, #28]
 80021fe:	431a      	orrs	r2, r3
 8002200:	687b      	ldr	r3, [r7, #4]
 8002202:	6a1b      	ldr	r3, [r3, #32]
 8002204:	4313      	orrs	r3, r2
 8002206:	697a      	ldr	r2, [r7, #20]
 8002208:	4313      	orrs	r3, r2
 800220a:	617b      	str	r3, [r7, #20]
 800220c:	687b      	ldr	r3, [r7, #4]
 800220e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002210:	2b04      	cmp	r3, #4
 8002212:	d107      	bne.n	8002224 <HAL_DMA_Init+0xc8>
 8002214:	687b      	ldr	r3, [r7, #4]
 8002216:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8002218:	687b      	ldr	r3, [r7, #4]
 800221a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800221c:	4313      	orrs	r3, r2
 800221e:	697a      	ldr	r2, [r7, #20]
 8002220:	4313      	orrs	r3, r2
 8002222:	617b      	str	r3, [r7, #20]
 8002224:	687b      	ldr	r3, [r7, #4]
 8002226:	681b      	ldr	r3, [r3, #0]
 8002228:	697a      	ldr	r2, [r7, #20]
 800222a:	601a      	str	r2, [r3, #0]
 800222c:	687b      	ldr	r3, [r7, #4]
 800222e:	681b      	ldr	r3, [r3, #0]
 8002230:	695b      	ldr	r3, [r3, #20]
 8002232:	617b      	str	r3, [r7, #20]
 8002234:	697b      	ldr	r3, [r7, #20]
 8002236:	f023 0307 	bic.w	r3, r3, #7
 800223a:	617b      	str	r3, [r7, #20]
 800223c:	687b      	ldr	r3, [r7, #4]
 800223e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002240:	697a      	ldr	r2, [r7, #20]
 8002242:	4313      	orrs	r3, r2
 8002244:	617b      	str	r3, [r7, #20]
 8002246:	687b      	ldr	r3, [r7, #4]
 8002248:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800224a:	2b04      	cmp	r3, #4
 800224c:	d117      	bne.n	800227e <HAL_DMA_Init+0x122>
 800224e:	687b      	ldr	r3, [r7, #4]
 8002250:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002252:	697a      	ldr	r2, [r7, #20]
 8002254:	4313      	orrs	r3, r2
 8002256:	617b      	str	r3, [r7, #20]
 8002258:	687b      	ldr	r3, [r7, #4]
 800225a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800225c:	2b00      	cmp	r3, #0
 800225e:	d00e      	beq.n	800227e <HAL_DMA_Init+0x122>
 8002260:	6878      	ldr	r0, [r7, #4]
 8002262:	f000 fa6f 	bl	8002744 <DMA_CheckFifoParam>
 8002266:	4603      	mov	r3, r0
 8002268:	2b00      	cmp	r3, #0
 800226a:	d008      	beq.n	800227e <HAL_DMA_Init+0x122>
 800226c:	687b      	ldr	r3, [r7, #4]
 800226e:	2240      	movs	r2, #64	@ 0x40
 8002270:	655a      	str	r2, [r3, #84]	@ 0x54
 8002272:	687b      	ldr	r3, [r7, #4]
 8002274:	2201      	movs	r2, #1
 8002276:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800227a:	2301      	movs	r3, #1
 800227c:	e016      	b.n	80022ac <HAL_DMA_Init+0x150>
 800227e:	687b      	ldr	r3, [r7, #4]
 8002280:	681b      	ldr	r3, [r3, #0]
 8002282:	697a      	ldr	r2, [r7, #20]
 8002284:	615a      	str	r2, [r3, #20]
 8002286:	6878      	ldr	r0, [r7, #4]
 8002288:	f000 fa26 	bl	80026d8 <DMA_CalcBaseAndBitshift>
 800228c:	4603      	mov	r3, r0
 800228e:	60fb      	str	r3, [r7, #12]
 8002290:	687b      	ldr	r3, [r7, #4]
 8002292:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002294:	223f      	movs	r2, #63	@ 0x3f
 8002296:	409a      	lsls	r2, r3
 8002298:	68fb      	ldr	r3, [r7, #12]
 800229a:	609a      	str	r2, [r3, #8]
 800229c:	687b      	ldr	r3, [r7, #4]
 800229e:	2200      	movs	r2, #0
 80022a0:	655a      	str	r2, [r3, #84]	@ 0x54
 80022a2:	687b      	ldr	r3, [r7, #4]
 80022a4:	2201      	movs	r2, #1
 80022a6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80022aa:	2300      	movs	r3, #0
 80022ac:	4618      	mov	r0, r3
 80022ae:	3718      	adds	r7, #24
 80022b0:	46bd      	mov	sp, r7
 80022b2:	bd80      	pop	{r7, pc}
 80022b4:	f010803f 	.word	0xf010803f

080022b8 <HAL_DMA_Start_IT>:
 80022b8:	b580      	push	{r7, lr}
 80022ba:	b086      	sub	sp, #24
 80022bc:	af00      	add	r7, sp, #0
 80022be:	60f8      	str	r0, [r7, #12]
 80022c0:	60b9      	str	r1, [r7, #8]
 80022c2:	607a      	str	r2, [r7, #4]
 80022c4:	603b      	str	r3, [r7, #0]
 80022c6:	2300      	movs	r3, #0
 80022c8:	75fb      	strb	r3, [r7, #23]
 80022ca:	68fb      	ldr	r3, [r7, #12]
 80022cc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80022ce:	613b      	str	r3, [r7, #16]
 80022d0:	68fb      	ldr	r3, [r7, #12]
 80022d2:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 80022d6:	2b01      	cmp	r3, #1
 80022d8:	d101      	bne.n	80022de <HAL_DMA_Start_IT+0x26>
 80022da:	2302      	movs	r3, #2
 80022dc:	e040      	b.n	8002360 <HAL_DMA_Start_IT+0xa8>
 80022de:	68fb      	ldr	r3, [r7, #12]
 80022e0:	2201      	movs	r2, #1
 80022e2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80022e6:	68fb      	ldr	r3, [r7, #12]
 80022e8:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80022ec:	b2db      	uxtb	r3, r3
 80022ee:	2b01      	cmp	r3, #1
 80022f0:	d12f      	bne.n	8002352 <HAL_DMA_Start_IT+0x9a>
 80022f2:	68fb      	ldr	r3, [r7, #12]
 80022f4:	2202      	movs	r2, #2
 80022f6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80022fa:	68fb      	ldr	r3, [r7, #12]
 80022fc:	2200      	movs	r2, #0
 80022fe:	655a      	str	r2, [r3, #84]	@ 0x54
 8002300:	683b      	ldr	r3, [r7, #0]
 8002302:	687a      	ldr	r2, [r7, #4]
 8002304:	68b9      	ldr	r1, [r7, #8]
 8002306:	68f8      	ldr	r0, [r7, #12]
 8002308:	f000 f9b8 	bl	800267c <DMA_SetConfig>
 800230c:	68fb      	ldr	r3, [r7, #12]
 800230e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002310:	223f      	movs	r2, #63	@ 0x3f
 8002312:	409a      	lsls	r2, r3
 8002314:	693b      	ldr	r3, [r7, #16]
 8002316:	609a      	str	r2, [r3, #8]
 8002318:	68fb      	ldr	r3, [r7, #12]
 800231a:	681b      	ldr	r3, [r3, #0]
 800231c:	681a      	ldr	r2, [r3, #0]
 800231e:	68fb      	ldr	r3, [r7, #12]
 8002320:	681b      	ldr	r3, [r3, #0]
 8002322:	f042 0216 	orr.w	r2, r2, #22
 8002326:	601a      	str	r2, [r3, #0]
 8002328:	68fb      	ldr	r3, [r7, #12]
 800232a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800232c:	2b00      	cmp	r3, #0
 800232e:	d007      	beq.n	8002340 <HAL_DMA_Start_IT+0x88>
 8002330:	68fb      	ldr	r3, [r7, #12]
 8002332:	681b      	ldr	r3, [r3, #0]
 8002334:	681a      	ldr	r2, [r3, #0]
 8002336:	68fb      	ldr	r3, [r7, #12]
 8002338:	681b      	ldr	r3, [r3, #0]
 800233a:	f042 0208 	orr.w	r2, r2, #8
 800233e:	601a      	str	r2, [r3, #0]
 8002340:	68fb      	ldr	r3, [r7, #12]
 8002342:	681b      	ldr	r3, [r3, #0]
 8002344:	681a      	ldr	r2, [r3, #0]
 8002346:	68fb      	ldr	r3, [r7, #12]
 8002348:	681b      	ldr	r3, [r3, #0]
 800234a:	f042 0201 	orr.w	r2, r2, #1
 800234e:	601a      	str	r2, [r3, #0]
 8002350:	e005      	b.n	800235e <HAL_DMA_Start_IT+0xa6>
 8002352:	68fb      	ldr	r3, [r7, #12]
 8002354:	2200      	movs	r2, #0
 8002356:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800235a:	2302      	movs	r3, #2
 800235c:	75fb      	strb	r3, [r7, #23]
 800235e:	7dfb      	ldrb	r3, [r7, #23]
 8002360:	4618      	mov	r0, r3
 8002362:	3718      	adds	r7, #24
 8002364:	46bd      	mov	sp, r7
 8002366:	bd80      	pop	{r7, pc}

08002368 <HAL_DMA_IRQHandler>:
 8002368:	b580      	push	{r7, lr}
 800236a:	b086      	sub	sp, #24
 800236c:	af00      	add	r7, sp, #0
 800236e:	6078      	str	r0, [r7, #4]
 8002370:	2300      	movs	r3, #0
 8002372:	60bb      	str	r3, [r7, #8]
 8002374:	4b8e      	ldr	r3, [pc, #568]	@ (80025b0 <HAL_DMA_IRQHandler+0x248>)
 8002376:	681b      	ldr	r3, [r3, #0]
 8002378:	4a8e      	ldr	r2, [pc, #568]	@ (80025b4 <HAL_DMA_IRQHandler+0x24c>)
 800237a:	fba2 2303 	umull	r2, r3, r2, r3
 800237e:	0a9b      	lsrs	r3, r3, #10
 8002380:	617b      	str	r3, [r7, #20]
 8002382:	687b      	ldr	r3, [r7, #4]
 8002384:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002386:	613b      	str	r3, [r7, #16]
 8002388:	693b      	ldr	r3, [r7, #16]
 800238a:	681b      	ldr	r3, [r3, #0]
 800238c:	60fb      	str	r3, [r7, #12]
 800238e:	687b      	ldr	r3, [r7, #4]
 8002390:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002392:	2208      	movs	r2, #8
 8002394:	409a      	lsls	r2, r3
 8002396:	68fb      	ldr	r3, [r7, #12]
 8002398:	4013      	ands	r3, r2
 800239a:	2b00      	cmp	r3, #0
 800239c:	d01a      	beq.n	80023d4 <HAL_DMA_IRQHandler+0x6c>
 800239e:	687b      	ldr	r3, [r7, #4]
 80023a0:	681b      	ldr	r3, [r3, #0]
 80023a2:	681b      	ldr	r3, [r3, #0]
 80023a4:	f003 0304 	and.w	r3, r3, #4
 80023a8:	2b00      	cmp	r3, #0
 80023aa:	d013      	beq.n	80023d4 <HAL_DMA_IRQHandler+0x6c>
 80023ac:	687b      	ldr	r3, [r7, #4]
 80023ae:	681b      	ldr	r3, [r3, #0]
 80023b0:	681a      	ldr	r2, [r3, #0]
 80023b2:	687b      	ldr	r3, [r7, #4]
 80023b4:	681b      	ldr	r3, [r3, #0]
 80023b6:	f022 0204 	bic.w	r2, r2, #4
 80023ba:	601a      	str	r2, [r3, #0]
 80023bc:	687b      	ldr	r3, [r7, #4]
 80023be:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80023c0:	2208      	movs	r2, #8
 80023c2:	409a      	lsls	r2, r3
 80023c4:	693b      	ldr	r3, [r7, #16]
 80023c6:	609a      	str	r2, [r3, #8]
 80023c8:	687b      	ldr	r3, [r7, #4]
 80023ca:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80023cc:	f043 0201 	orr.w	r2, r3, #1
 80023d0:	687b      	ldr	r3, [r7, #4]
 80023d2:	655a      	str	r2, [r3, #84]	@ 0x54
 80023d4:	687b      	ldr	r3, [r7, #4]
 80023d6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80023d8:	2201      	movs	r2, #1
 80023da:	409a      	lsls	r2, r3
 80023dc:	68fb      	ldr	r3, [r7, #12]
 80023de:	4013      	ands	r3, r2
 80023e0:	2b00      	cmp	r3, #0
 80023e2:	d012      	beq.n	800240a <HAL_DMA_IRQHandler+0xa2>
 80023e4:	687b      	ldr	r3, [r7, #4]
 80023e6:	681b      	ldr	r3, [r3, #0]
 80023e8:	695b      	ldr	r3, [r3, #20]
 80023ea:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80023ee:	2b00      	cmp	r3, #0
 80023f0:	d00b      	beq.n	800240a <HAL_DMA_IRQHandler+0xa2>
 80023f2:	687b      	ldr	r3, [r7, #4]
 80023f4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80023f6:	2201      	movs	r2, #1
 80023f8:	409a      	lsls	r2, r3
 80023fa:	693b      	ldr	r3, [r7, #16]
 80023fc:	609a      	str	r2, [r3, #8]
 80023fe:	687b      	ldr	r3, [r7, #4]
 8002400:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002402:	f043 0202 	orr.w	r2, r3, #2
 8002406:	687b      	ldr	r3, [r7, #4]
 8002408:	655a      	str	r2, [r3, #84]	@ 0x54
 800240a:	687b      	ldr	r3, [r7, #4]
 800240c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800240e:	2204      	movs	r2, #4
 8002410:	409a      	lsls	r2, r3
 8002412:	68fb      	ldr	r3, [r7, #12]
 8002414:	4013      	ands	r3, r2
 8002416:	2b00      	cmp	r3, #0
 8002418:	d012      	beq.n	8002440 <HAL_DMA_IRQHandler+0xd8>
 800241a:	687b      	ldr	r3, [r7, #4]
 800241c:	681b      	ldr	r3, [r3, #0]
 800241e:	681b      	ldr	r3, [r3, #0]
 8002420:	f003 0302 	and.w	r3, r3, #2
 8002424:	2b00      	cmp	r3, #0
 8002426:	d00b      	beq.n	8002440 <HAL_DMA_IRQHandler+0xd8>
 8002428:	687b      	ldr	r3, [r7, #4]
 800242a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800242c:	2204      	movs	r2, #4
 800242e:	409a      	lsls	r2, r3
 8002430:	693b      	ldr	r3, [r7, #16]
 8002432:	609a      	str	r2, [r3, #8]
 8002434:	687b      	ldr	r3, [r7, #4]
 8002436:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002438:	f043 0204 	orr.w	r2, r3, #4
 800243c:	687b      	ldr	r3, [r7, #4]
 800243e:	655a      	str	r2, [r3, #84]	@ 0x54
 8002440:	687b      	ldr	r3, [r7, #4]
 8002442:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002444:	2210      	movs	r2, #16
 8002446:	409a      	lsls	r2, r3
 8002448:	68fb      	ldr	r3, [r7, #12]
 800244a:	4013      	ands	r3, r2
 800244c:	2b00      	cmp	r3, #0
 800244e:	d043      	beq.n	80024d8 <HAL_DMA_IRQHandler+0x170>
 8002450:	687b      	ldr	r3, [r7, #4]
 8002452:	681b      	ldr	r3, [r3, #0]
 8002454:	681b      	ldr	r3, [r3, #0]
 8002456:	f003 0308 	and.w	r3, r3, #8
 800245a:	2b00      	cmp	r3, #0
 800245c:	d03c      	beq.n	80024d8 <HAL_DMA_IRQHandler+0x170>
 800245e:	687b      	ldr	r3, [r7, #4]
 8002460:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002462:	2210      	movs	r2, #16
 8002464:	409a      	lsls	r2, r3
 8002466:	693b      	ldr	r3, [r7, #16]
 8002468:	609a      	str	r2, [r3, #8]
 800246a:	687b      	ldr	r3, [r7, #4]
 800246c:	681b      	ldr	r3, [r3, #0]
 800246e:	681b      	ldr	r3, [r3, #0]
 8002470:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8002474:	2b00      	cmp	r3, #0
 8002476:	d018      	beq.n	80024aa <HAL_DMA_IRQHandler+0x142>
 8002478:	687b      	ldr	r3, [r7, #4]
 800247a:	681b      	ldr	r3, [r3, #0]
 800247c:	681b      	ldr	r3, [r3, #0]
 800247e:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8002482:	2b00      	cmp	r3, #0
 8002484:	d108      	bne.n	8002498 <HAL_DMA_IRQHandler+0x130>
 8002486:	687b      	ldr	r3, [r7, #4]
 8002488:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800248a:	2b00      	cmp	r3, #0
 800248c:	d024      	beq.n	80024d8 <HAL_DMA_IRQHandler+0x170>
 800248e:	687b      	ldr	r3, [r7, #4]
 8002490:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002492:	6878      	ldr	r0, [r7, #4]
 8002494:	4798      	blx	r3
 8002496:	e01f      	b.n	80024d8 <HAL_DMA_IRQHandler+0x170>
 8002498:	687b      	ldr	r3, [r7, #4]
 800249a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800249c:	2b00      	cmp	r3, #0
 800249e:	d01b      	beq.n	80024d8 <HAL_DMA_IRQHandler+0x170>
 80024a0:	687b      	ldr	r3, [r7, #4]
 80024a2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80024a4:	6878      	ldr	r0, [r7, #4]
 80024a6:	4798      	blx	r3
 80024a8:	e016      	b.n	80024d8 <HAL_DMA_IRQHandler+0x170>
 80024aa:	687b      	ldr	r3, [r7, #4]
 80024ac:	681b      	ldr	r3, [r3, #0]
 80024ae:	681b      	ldr	r3, [r3, #0]
 80024b0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80024b4:	2b00      	cmp	r3, #0
 80024b6:	d107      	bne.n	80024c8 <HAL_DMA_IRQHandler+0x160>
 80024b8:	687b      	ldr	r3, [r7, #4]
 80024ba:	681b      	ldr	r3, [r3, #0]
 80024bc:	681a      	ldr	r2, [r3, #0]
 80024be:	687b      	ldr	r3, [r7, #4]
 80024c0:	681b      	ldr	r3, [r3, #0]
 80024c2:	f022 0208 	bic.w	r2, r2, #8
 80024c6:	601a      	str	r2, [r3, #0]
 80024c8:	687b      	ldr	r3, [r7, #4]
 80024ca:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80024cc:	2b00      	cmp	r3, #0
 80024ce:	d003      	beq.n	80024d8 <HAL_DMA_IRQHandler+0x170>
 80024d0:	687b      	ldr	r3, [r7, #4]
 80024d2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80024d4:	6878      	ldr	r0, [r7, #4]
 80024d6:	4798      	blx	r3
 80024d8:	687b      	ldr	r3, [r7, #4]
 80024da:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80024dc:	2220      	movs	r2, #32
 80024de:	409a      	lsls	r2, r3
 80024e0:	68fb      	ldr	r3, [r7, #12]
 80024e2:	4013      	ands	r3, r2
 80024e4:	2b00      	cmp	r3, #0
 80024e6:	f000 808f 	beq.w	8002608 <HAL_DMA_IRQHandler+0x2a0>
 80024ea:	687b      	ldr	r3, [r7, #4]
 80024ec:	681b      	ldr	r3, [r3, #0]
 80024ee:	681b      	ldr	r3, [r3, #0]
 80024f0:	f003 0310 	and.w	r3, r3, #16
 80024f4:	2b00      	cmp	r3, #0
 80024f6:	f000 8087 	beq.w	8002608 <HAL_DMA_IRQHandler+0x2a0>
 80024fa:	687b      	ldr	r3, [r7, #4]
 80024fc:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80024fe:	2220      	movs	r2, #32
 8002500:	409a      	lsls	r2, r3
 8002502:	693b      	ldr	r3, [r7, #16]
 8002504:	609a      	str	r2, [r3, #8]
 8002506:	687b      	ldr	r3, [r7, #4]
 8002508:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800250c:	b2db      	uxtb	r3, r3
 800250e:	2b05      	cmp	r3, #5
 8002510:	d136      	bne.n	8002580 <HAL_DMA_IRQHandler+0x218>
 8002512:	687b      	ldr	r3, [r7, #4]
 8002514:	681b      	ldr	r3, [r3, #0]
 8002516:	681a      	ldr	r2, [r3, #0]
 8002518:	687b      	ldr	r3, [r7, #4]
 800251a:	681b      	ldr	r3, [r3, #0]
 800251c:	f022 0216 	bic.w	r2, r2, #22
 8002520:	601a      	str	r2, [r3, #0]
 8002522:	687b      	ldr	r3, [r7, #4]
 8002524:	681b      	ldr	r3, [r3, #0]
 8002526:	695a      	ldr	r2, [r3, #20]
 8002528:	687b      	ldr	r3, [r7, #4]
 800252a:	681b      	ldr	r3, [r3, #0]
 800252c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8002530:	615a      	str	r2, [r3, #20]
 8002532:	687b      	ldr	r3, [r7, #4]
 8002534:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002536:	2b00      	cmp	r3, #0
 8002538:	d103      	bne.n	8002542 <HAL_DMA_IRQHandler+0x1da>
 800253a:	687b      	ldr	r3, [r7, #4]
 800253c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800253e:	2b00      	cmp	r3, #0
 8002540:	d007      	beq.n	8002552 <HAL_DMA_IRQHandler+0x1ea>
 8002542:	687b      	ldr	r3, [r7, #4]
 8002544:	681b      	ldr	r3, [r3, #0]
 8002546:	681a      	ldr	r2, [r3, #0]
 8002548:	687b      	ldr	r3, [r7, #4]
 800254a:	681b      	ldr	r3, [r3, #0]
 800254c:	f022 0208 	bic.w	r2, r2, #8
 8002550:	601a      	str	r2, [r3, #0]
 8002552:	687b      	ldr	r3, [r7, #4]
 8002554:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002556:	223f      	movs	r2, #63	@ 0x3f
 8002558:	409a      	lsls	r2, r3
 800255a:	693b      	ldr	r3, [r7, #16]
 800255c:	609a      	str	r2, [r3, #8]
 800255e:	687b      	ldr	r3, [r7, #4]
 8002560:	2201      	movs	r2, #1
 8002562:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002566:	687b      	ldr	r3, [r7, #4]
 8002568:	2200      	movs	r2, #0
 800256a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800256e:	687b      	ldr	r3, [r7, #4]
 8002570:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8002572:	2b00      	cmp	r3, #0
 8002574:	d07e      	beq.n	8002674 <HAL_DMA_IRQHandler+0x30c>
 8002576:	687b      	ldr	r3, [r7, #4]
 8002578:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800257a:	6878      	ldr	r0, [r7, #4]
 800257c:	4798      	blx	r3
 800257e:	e079      	b.n	8002674 <HAL_DMA_IRQHandler+0x30c>
 8002580:	687b      	ldr	r3, [r7, #4]
 8002582:	681b      	ldr	r3, [r3, #0]
 8002584:	681b      	ldr	r3, [r3, #0]
 8002586:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800258a:	2b00      	cmp	r3, #0
 800258c:	d01d      	beq.n	80025ca <HAL_DMA_IRQHandler+0x262>
 800258e:	687b      	ldr	r3, [r7, #4]
 8002590:	681b      	ldr	r3, [r3, #0]
 8002592:	681b      	ldr	r3, [r3, #0]
 8002594:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8002598:	2b00      	cmp	r3, #0
 800259a:	d10d      	bne.n	80025b8 <HAL_DMA_IRQHandler+0x250>
 800259c:	687b      	ldr	r3, [r7, #4]
 800259e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80025a0:	2b00      	cmp	r3, #0
 80025a2:	d031      	beq.n	8002608 <HAL_DMA_IRQHandler+0x2a0>
 80025a4:	687b      	ldr	r3, [r7, #4]
 80025a6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80025a8:	6878      	ldr	r0, [r7, #4]
 80025aa:	4798      	blx	r3
 80025ac:	e02c      	b.n	8002608 <HAL_DMA_IRQHandler+0x2a0>
 80025ae:	bf00      	nop
 80025b0:	20000020 	.word	0x20000020
 80025b4:	1b4e81b5 	.word	0x1b4e81b5
 80025b8:	687b      	ldr	r3, [r7, #4]
 80025ba:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80025bc:	2b00      	cmp	r3, #0
 80025be:	d023      	beq.n	8002608 <HAL_DMA_IRQHandler+0x2a0>
 80025c0:	687b      	ldr	r3, [r7, #4]
 80025c2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80025c4:	6878      	ldr	r0, [r7, #4]
 80025c6:	4798      	blx	r3
 80025c8:	e01e      	b.n	8002608 <HAL_DMA_IRQHandler+0x2a0>
 80025ca:	687b      	ldr	r3, [r7, #4]
 80025cc:	681b      	ldr	r3, [r3, #0]
 80025ce:	681b      	ldr	r3, [r3, #0]
 80025d0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80025d4:	2b00      	cmp	r3, #0
 80025d6:	d10f      	bne.n	80025f8 <HAL_DMA_IRQHandler+0x290>
 80025d8:	687b      	ldr	r3, [r7, #4]
 80025da:	681b      	ldr	r3, [r3, #0]
 80025dc:	681a      	ldr	r2, [r3, #0]
 80025de:	687b      	ldr	r3, [r7, #4]
 80025e0:	681b      	ldr	r3, [r3, #0]
 80025e2:	f022 0210 	bic.w	r2, r2, #16
 80025e6:	601a      	str	r2, [r3, #0]
 80025e8:	687b      	ldr	r3, [r7, #4]
 80025ea:	2201      	movs	r2, #1
 80025ec:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80025f0:	687b      	ldr	r3, [r7, #4]
 80025f2:	2200      	movs	r2, #0
 80025f4:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80025f8:	687b      	ldr	r3, [r7, #4]
 80025fa:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80025fc:	2b00      	cmp	r3, #0
 80025fe:	d003      	beq.n	8002608 <HAL_DMA_IRQHandler+0x2a0>
 8002600:	687b      	ldr	r3, [r7, #4]
 8002602:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002604:	6878      	ldr	r0, [r7, #4]
 8002606:	4798      	blx	r3
 8002608:	687b      	ldr	r3, [r7, #4]
 800260a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800260c:	2b00      	cmp	r3, #0
 800260e:	d032      	beq.n	8002676 <HAL_DMA_IRQHandler+0x30e>
 8002610:	687b      	ldr	r3, [r7, #4]
 8002612:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002614:	f003 0301 	and.w	r3, r3, #1
 8002618:	2b00      	cmp	r3, #0
 800261a:	d022      	beq.n	8002662 <HAL_DMA_IRQHandler+0x2fa>
 800261c:	687b      	ldr	r3, [r7, #4]
 800261e:	2205      	movs	r2, #5
 8002620:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002624:	687b      	ldr	r3, [r7, #4]
 8002626:	681b      	ldr	r3, [r3, #0]
 8002628:	681a      	ldr	r2, [r3, #0]
 800262a:	687b      	ldr	r3, [r7, #4]
 800262c:	681b      	ldr	r3, [r3, #0]
 800262e:	f022 0201 	bic.w	r2, r2, #1
 8002632:	601a      	str	r2, [r3, #0]
 8002634:	68bb      	ldr	r3, [r7, #8]
 8002636:	3301      	adds	r3, #1
 8002638:	60bb      	str	r3, [r7, #8]
 800263a:	697a      	ldr	r2, [r7, #20]
 800263c:	429a      	cmp	r2, r3
 800263e:	d307      	bcc.n	8002650 <HAL_DMA_IRQHandler+0x2e8>
 8002640:	687b      	ldr	r3, [r7, #4]
 8002642:	681b      	ldr	r3, [r3, #0]
 8002644:	681b      	ldr	r3, [r3, #0]
 8002646:	f003 0301 	and.w	r3, r3, #1
 800264a:	2b00      	cmp	r3, #0
 800264c:	d1f2      	bne.n	8002634 <HAL_DMA_IRQHandler+0x2cc>
 800264e:	e000      	b.n	8002652 <HAL_DMA_IRQHandler+0x2ea>
 8002650:	bf00      	nop
 8002652:	687b      	ldr	r3, [r7, #4]
 8002654:	2201      	movs	r2, #1
 8002656:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800265a:	687b      	ldr	r3, [r7, #4]
 800265c:	2200      	movs	r2, #0
 800265e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002662:	687b      	ldr	r3, [r7, #4]
 8002664:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002666:	2b00      	cmp	r3, #0
 8002668:	d005      	beq.n	8002676 <HAL_DMA_IRQHandler+0x30e>
 800266a:	687b      	ldr	r3, [r7, #4]
 800266c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800266e:	6878      	ldr	r0, [r7, #4]
 8002670:	4798      	blx	r3
 8002672:	e000      	b.n	8002676 <HAL_DMA_IRQHandler+0x30e>
 8002674:	bf00      	nop
 8002676:	3718      	adds	r7, #24
 8002678:	46bd      	mov	sp, r7
 800267a:	bd80      	pop	{r7, pc}

0800267c <DMA_SetConfig>:
 800267c:	b480      	push	{r7}
 800267e:	b085      	sub	sp, #20
 8002680:	af00      	add	r7, sp, #0
 8002682:	60f8      	str	r0, [r7, #12]
 8002684:	60b9      	str	r1, [r7, #8]
 8002686:	607a      	str	r2, [r7, #4]
 8002688:	603b      	str	r3, [r7, #0]
 800268a:	68fb      	ldr	r3, [r7, #12]
 800268c:	681b      	ldr	r3, [r3, #0]
 800268e:	681a      	ldr	r2, [r3, #0]
 8002690:	68fb      	ldr	r3, [r7, #12]
 8002692:	681b      	ldr	r3, [r3, #0]
 8002694:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8002698:	601a      	str	r2, [r3, #0]
 800269a:	68fb      	ldr	r3, [r7, #12]
 800269c:	681b      	ldr	r3, [r3, #0]
 800269e:	683a      	ldr	r2, [r7, #0]
 80026a0:	605a      	str	r2, [r3, #4]
 80026a2:	68fb      	ldr	r3, [r7, #12]
 80026a4:	689b      	ldr	r3, [r3, #8]
 80026a6:	2b40      	cmp	r3, #64	@ 0x40
 80026a8:	d108      	bne.n	80026bc <DMA_SetConfig+0x40>
 80026aa:	68fb      	ldr	r3, [r7, #12]
 80026ac:	681b      	ldr	r3, [r3, #0]
 80026ae:	687a      	ldr	r2, [r7, #4]
 80026b0:	609a      	str	r2, [r3, #8]
 80026b2:	68fb      	ldr	r3, [r7, #12]
 80026b4:	681b      	ldr	r3, [r3, #0]
 80026b6:	68ba      	ldr	r2, [r7, #8]
 80026b8:	60da      	str	r2, [r3, #12]
 80026ba:	e007      	b.n	80026cc <DMA_SetConfig+0x50>
 80026bc:	68fb      	ldr	r3, [r7, #12]
 80026be:	681b      	ldr	r3, [r3, #0]
 80026c0:	68ba      	ldr	r2, [r7, #8]
 80026c2:	609a      	str	r2, [r3, #8]
 80026c4:	68fb      	ldr	r3, [r7, #12]
 80026c6:	681b      	ldr	r3, [r3, #0]
 80026c8:	687a      	ldr	r2, [r7, #4]
 80026ca:	60da      	str	r2, [r3, #12]
 80026cc:	bf00      	nop
 80026ce:	3714      	adds	r7, #20
 80026d0:	46bd      	mov	sp, r7
 80026d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026d6:	4770      	bx	lr

080026d8 <DMA_CalcBaseAndBitshift>:
 80026d8:	b480      	push	{r7}
 80026da:	b085      	sub	sp, #20
 80026dc:	af00      	add	r7, sp, #0
 80026de:	6078      	str	r0, [r7, #4]
 80026e0:	687b      	ldr	r3, [r7, #4]
 80026e2:	681b      	ldr	r3, [r3, #0]
 80026e4:	b2db      	uxtb	r3, r3
 80026e6:	3b10      	subs	r3, #16
 80026e8:	4a14      	ldr	r2, [pc, #80]	@ (800273c <DMA_CalcBaseAndBitshift+0x64>)
 80026ea:	fba2 2303 	umull	r2, r3, r2, r3
 80026ee:	091b      	lsrs	r3, r3, #4
 80026f0:	60fb      	str	r3, [r7, #12]
 80026f2:	4a13      	ldr	r2, [pc, #76]	@ (8002740 <DMA_CalcBaseAndBitshift+0x68>)
 80026f4:	68fb      	ldr	r3, [r7, #12]
 80026f6:	4413      	add	r3, r2
 80026f8:	781b      	ldrb	r3, [r3, #0]
 80026fa:	461a      	mov	r2, r3
 80026fc:	687b      	ldr	r3, [r7, #4]
 80026fe:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002700:	68fb      	ldr	r3, [r7, #12]
 8002702:	2b03      	cmp	r3, #3
 8002704:	d909      	bls.n	800271a <DMA_CalcBaseAndBitshift+0x42>
 8002706:	687b      	ldr	r3, [r7, #4]
 8002708:	681b      	ldr	r3, [r3, #0]
 800270a:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 800270e:	f023 0303 	bic.w	r3, r3, #3
 8002712:	1d1a      	adds	r2, r3, #4
 8002714:	687b      	ldr	r3, [r7, #4]
 8002716:	659a      	str	r2, [r3, #88]	@ 0x58
 8002718:	e007      	b.n	800272a <DMA_CalcBaseAndBitshift+0x52>
 800271a:	687b      	ldr	r3, [r7, #4]
 800271c:	681b      	ldr	r3, [r3, #0]
 800271e:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8002722:	f023 0303 	bic.w	r3, r3, #3
 8002726:	687a      	ldr	r2, [r7, #4]
 8002728:	6593      	str	r3, [r2, #88]	@ 0x58
 800272a:	687b      	ldr	r3, [r7, #4]
 800272c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800272e:	4618      	mov	r0, r3
 8002730:	3714      	adds	r7, #20
 8002732:	46bd      	mov	sp, r7
 8002734:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002738:	4770      	bx	lr
 800273a:	bf00      	nop
 800273c:	aaaaaaab 	.word	0xaaaaaaab
 8002740:	080082e0 	.word	0x080082e0

08002744 <DMA_CheckFifoParam>:
 8002744:	b480      	push	{r7}
 8002746:	b085      	sub	sp, #20
 8002748:	af00      	add	r7, sp, #0
 800274a:	6078      	str	r0, [r7, #4]
 800274c:	2300      	movs	r3, #0
 800274e:	73fb      	strb	r3, [r7, #15]
 8002750:	687b      	ldr	r3, [r7, #4]
 8002752:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002754:	60bb      	str	r3, [r7, #8]
 8002756:	687b      	ldr	r3, [r7, #4]
 8002758:	699b      	ldr	r3, [r3, #24]
 800275a:	2b00      	cmp	r3, #0
 800275c:	d11f      	bne.n	800279e <DMA_CheckFifoParam+0x5a>
 800275e:	68bb      	ldr	r3, [r7, #8]
 8002760:	2b03      	cmp	r3, #3
 8002762:	d856      	bhi.n	8002812 <DMA_CheckFifoParam+0xce>
 8002764:	a201      	add	r2, pc, #4	@ (adr r2, 800276c <DMA_CheckFifoParam+0x28>)
 8002766:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800276a:	bf00      	nop
 800276c:	0800277d 	.word	0x0800277d
 8002770:	0800278f 	.word	0x0800278f
 8002774:	0800277d 	.word	0x0800277d
 8002778:	08002813 	.word	0x08002813
 800277c:	687b      	ldr	r3, [r7, #4]
 800277e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002780:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8002784:	2b00      	cmp	r3, #0
 8002786:	d046      	beq.n	8002816 <DMA_CheckFifoParam+0xd2>
 8002788:	2301      	movs	r3, #1
 800278a:	73fb      	strb	r3, [r7, #15]
 800278c:	e043      	b.n	8002816 <DMA_CheckFifoParam+0xd2>
 800278e:	687b      	ldr	r3, [r7, #4]
 8002790:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002792:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8002796:	d140      	bne.n	800281a <DMA_CheckFifoParam+0xd6>
 8002798:	2301      	movs	r3, #1
 800279a:	73fb      	strb	r3, [r7, #15]
 800279c:	e03d      	b.n	800281a <DMA_CheckFifoParam+0xd6>
 800279e:	687b      	ldr	r3, [r7, #4]
 80027a0:	699b      	ldr	r3, [r3, #24]
 80027a2:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80027a6:	d121      	bne.n	80027ec <DMA_CheckFifoParam+0xa8>
 80027a8:	68bb      	ldr	r3, [r7, #8]
 80027aa:	2b03      	cmp	r3, #3
 80027ac:	d837      	bhi.n	800281e <DMA_CheckFifoParam+0xda>
 80027ae:	a201      	add	r2, pc, #4	@ (adr r2, 80027b4 <DMA_CheckFifoParam+0x70>)
 80027b0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80027b4:	080027c5 	.word	0x080027c5
 80027b8:	080027cb 	.word	0x080027cb
 80027bc:	080027c5 	.word	0x080027c5
 80027c0:	080027dd 	.word	0x080027dd
 80027c4:	2301      	movs	r3, #1
 80027c6:	73fb      	strb	r3, [r7, #15]
 80027c8:	e030      	b.n	800282c <DMA_CheckFifoParam+0xe8>
 80027ca:	687b      	ldr	r3, [r7, #4]
 80027cc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80027ce:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 80027d2:	2b00      	cmp	r3, #0
 80027d4:	d025      	beq.n	8002822 <DMA_CheckFifoParam+0xde>
 80027d6:	2301      	movs	r3, #1
 80027d8:	73fb      	strb	r3, [r7, #15]
 80027da:	e022      	b.n	8002822 <DMA_CheckFifoParam+0xde>
 80027dc:	687b      	ldr	r3, [r7, #4]
 80027de:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80027e0:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 80027e4:	d11f      	bne.n	8002826 <DMA_CheckFifoParam+0xe2>
 80027e6:	2301      	movs	r3, #1
 80027e8:	73fb      	strb	r3, [r7, #15]
 80027ea:	e01c      	b.n	8002826 <DMA_CheckFifoParam+0xe2>
 80027ec:	68bb      	ldr	r3, [r7, #8]
 80027ee:	2b02      	cmp	r3, #2
 80027f0:	d903      	bls.n	80027fa <DMA_CheckFifoParam+0xb6>
 80027f2:	68bb      	ldr	r3, [r7, #8]
 80027f4:	2b03      	cmp	r3, #3
 80027f6:	d003      	beq.n	8002800 <DMA_CheckFifoParam+0xbc>
 80027f8:	e018      	b.n	800282c <DMA_CheckFifoParam+0xe8>
 80027fa:	2301      	movs	r3, #1
 80027fc:	73fb      	strb	r3, [r7, #15]
 80027fe:	e015      	b.n	800282c <DMA_CheckFifoParam+0xe8>
 8002800:	687b      	ldr	r3, [r7, #4]
 8002802:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002804:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8002808:	2b00      	cmp	r3, #0
 800280a:	d00e      	beq.n	800282a <DMA_CheckFifoParam+0xe6>
 800280c:	2301      	movs	r3, #1
 800280e:	73fb      	strb	r3, [r7, #15]
 8002810:	e00b      	b.n	800282a <DMA_CheckFifoParam+0xe6>
 8002812:	bf00      	nop
 8002814:	e00a      	b.n	800282c <DMA_CheckFifoParam+0xe8>
 8002816:	bf00      	nop
 8002818:	e008      	b.n	800282c <DMA_CheckFifoParam+0xe8>
 800281a:	bf00      	nop
 800281c:	e006      	b.n	800282c <DMA_CheckFifoParam+0xe8>
 800281e:	bf00      	nop
 8002820:	e004      	b.n	800282c <DMA_CheckFifoParam+0xe8>
 8002822:	bf00      	nop
 8002824:	e002      	b.n	800282c <DMA_CheckFifoParam+0xe8>
 8002826:	bf00      	nop
 8002828:	e000      	b.n	800282c <DMA_CheckFifoParam+0xe8>
 800282a:	bf00      	nop
 800282c:	7bfb      	ldrb	r3, [r7, #15]
 800282e:	4618      	mov	r0, r3
 8002830:	3714      	adds	r7, #20
 8002832:	46bd      	mov	sp, r7
 8002834:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002838:	4770      	bx	lr
 800283a:	bf00      	nop

0800283c <HAL_GPIO_Init>:
 800283c:	b480      	push	{r7}
 800283e:	b089      	sub	sp, #36	@ 0x24
 8002840:	af00      	add	r7, sp, #0
 8002842:	6078      	str	r0, [r7, #4]
 8002844:	6039      	str	r1, [r7, #0]
 8002846:	2300      	movs	r3, #0
 8002848:	617b      	str	r3, [r7, #20]
 800284a:	2300      	movs	r3, #0
 800284c:	613b      	str	r3, [r7, #16]
 800284e:	2300      	movs	r3, #0
 8002850:	61bb      	str	r3, [r7, #24]
 8002852:	2300      	movs	r3, #0
 8002854:	61fb      	str	r3, [r7, #28]
 8002856:	e159      	b.n	8002b0c <HAL_GPIO_Init+0x2d0>
 8002858:	2201      	movs	r2, #1
 800285a:	69fb      	ldr	r3, [r7, #28]
 800285c:	fa02 f303 	lsl.w	r3, r2, r3
 8002860:	617b      	str	r3, [r7, #20]
 8002862:	683b      	ldr	r3, [r7, #0]
 8002864:	681b      	ldr	r3, [r3, #0]
 8002866:	697a      	ldr	r2, [r7, #20]
 8002868:	4013      	ands	r3, r2
 800286a:	613b      	str	r3, [r7, #16]
 800286c:	693a      	ldr	r2, [r7, #16]
 800286e:	697b      	ldr	r3, [r7, #20]
 8002870:	429a      	cmp	r2, r3
 8002872:	f040 8148 	bne.w	8002b06 <HAL_GPIO_Init+0x2ca>
 8002876:	683b      	ldr	r3, [r7, #0]
 8002878:	685b      	ldr	r3, [r3, #4]
 800287a:	f003 0303 	and.w	r3, r3, #3
 800287e:	2b01      	cmp	r3, #1
 8002880:	d005      	beq.n	800288e <HAL_GPIO_Init+0x52>
 8002882:	683b      	ldr	r3, [r7, #0]
 8002884:	685b      	ldr	r3, [r3, #4]
 8002886:	f003 0303 	and.w	r3, r3, #3
 800288a:	2b02      	cmp	r3, #2
 800288c:	d130      	bne.n	80028f0 <HAL_GPIO_Init+0xb4>
 800288e:	687b      	ldr	r3, [r7, #4]
 8002890:	689b      	ldr	r3, [r3, #8]
 8002892:	61bb      	str	r3, [r7, #24]
 8002894:	69fb      	ldr	r3, [r7, #28]
 8002896:	005b      	lsls	r3, r3, #1
 8002898:	2203      	movs	r2, #3
 800289a:	fa02 f303 	lsl.w	r3, r2, r3
 800289e:	43db      	mvns	r3, r3
 80028a0:	69ba      	ldr	r2, [r7, #24]
 80028a2:	4013      	ands	r3, r2
 80028a4:	61bb      	str	r3, [r7, #24]
 80028a6:	683b      	ldr	r3, [r7, #0]
 80028a8:	68da      	ldr	r2, [r3, #12]
 80028aa:	69fb      	ldr	r3, [r7, #28]
 80028ac:	005b      	lsls	r3, r3, #1
 80028ae:	fa02 f303 	lsl.w	r3, r2, r3
 80028b2:	69ba      	ldr	r2, [r7, #24]
 80028b4:	4313      	orrs	r3, r2
 80028b6:	61bb      	str	r3, [r7, #24]
 80028b8:	687b      	ldr	r3, [r7, #4]
 80028ba:	69ba      	ldr	r2, [r7, #24]
 80028bc:	609a      	str	r2, [r3, #8]
 80028be:	687b      	ldr	r3, [r7, #4]
 80028c0:	685b      	ldr	r3, [r3, #4]
 80028c2:	61bb      	str	r3, [r7, #24]
 80028c4:	2201      	movs	r2, #1
 80028c6:	69fb      	ldr	r3, [r7, #28]
 80028c8:	fa02 f303 	lsl.w	r3, r2, r3
 80028cc:	43db      	mvns	r3, r3
 80028ce:	69ba      	ldr	r2, [r7, #24]
 80028d0:	4013      	ands	r3, r2
 80028d2:	61bb      	str	r3, [r7, #24]
 80028d4:	683b      	ldr	r3, [r7, #0]
 80028d6:	685b      	ldr	r3, [r3, #4]
 80028d8:	091b      	lsrs	r3, r3, #4
 80028da:	f003 0201 	and.w	r2, r3, #1
 80028de:	69fb      	ldr	r3, [r7, #28]
 80028e0:	fa02 f303 	lsl.w	r3, r2, r3
 80028e4:	69ba      	ldr	r2, [r7, #24]
 80028e6:	4313      	orrs	r3, r2
 80028e8:	61bb      	str	r3, [r7, #24]
 80028ea:	687b      	ldr	r3, [r7, #4]
 80028ec:	69ba      	ldr	r2, [r7, #24]
 80028ee:	605a      	str	r2, [r3, #4]
 80028f0:	683b      	ldr	r3, [r7, #0]
 80028f2:	685b      	ldr	r3, [r3, #4]
 80028f4:	f003 0303 	and.w	r3, r3, #3
 80028f8:	2b03      	cmp	r3, #3
 80028fa:	d017      	beq.n	800292c <HAL_GPIO_Init+0xf0>
 80028fc:	687b      	ldr	r3, [r7, #4]
 80028fe:	68db      	ldr	r3, [r3, #12]
 8002900:	61bb      	str	r3, [r7, #24]
 8002902:	69fb      	ldr	r3, [r7, #28]
 8002904:	005b      	lsls	r3, r3, #1
 8002906:	2203      	movs	r2, #3
 8002908:	fa02 f303 	lsl.w	r3, r2, r3
 800290c:	43db      	mvns	r3, r3
 800290e:	69ba      	ldr	r2, [r7, #24]
 8002910:	4013      	ands	r3, r2
 8002912:	61bb      	str	r3, [r7, #24]
 8002914:	683b      	ldr	r3, [r7, #0]
 8002916:	689a      	ldr	r2, [r3, #8]
 8002918:	69fb      	ldr	r3, [r7, #28]
 800291a:	005b      	lsls	r3, r3, #1
 800291c:	fa02 f303 	lsl.w	r3, r2, r3
 8002920:	69ba      	ldr	r2, [r7, #24]
 8002922:	4313      	orrs	r3, r2
 8002924:	61bb      	str	r3, [r7, #24]
 8002926:	687b      	ldr	r3, [r7, #4]
 8002928:	69ba      	ldr	r2, [r7, #24]
 800292a:	60da      	str	r2, [r3, #12]
 800292c:	683b      	ldr	r3, [r7, #0]
 800292e:	685b      	ldr	r3, [r3, #4]
 8002930:	f003 0303 	and.w	r3, r3, #3
 8002934:	2b02      	cmp	r3, #2
 8002936:	d123      	bne.n	8002980 <HAL_GPIO_Init+0x144>
 8002938:	69fb      	ldr	r3, [r7, #28]
 800293a:	08da      	lsrs	r2, r3, #3
 800293c:	687b      	ldr	r3, [r7, #4]
 800293e:	3208      	adds	r2, #8
 8002940:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002944:	61bb      	str	r3, [r7, #24]
 8002946:	69fb      	ldr	r3, [r7, #28]
 8002948:	f003 0307 	and.w	r3, r3, #7
 800294c:	009b      	lsls	r3, r3, #2
 800294e:	220f      	movs	r2, #15
 8002950:	fa02 f303 	lsl.w	r3, r2, r3
 8002954:	43db      	mvns	r3, r3
 8002956:	69ba      	ldr	r2, [r7, #24]
 8002958:	4013      	ands	r3, r2
 800295a:	61bb      	str	r3, [r7, #24]
 800295c:	683b      	ldr	r3, [r7, #0]
 800295e:	691a      	ldr	r2, [r3, #16]
 8002960:	69fb      	ldr	r3, [r7, #28]
 8002962:	f003 0307 	and.w	r3, r3, #7
 8002966:	009b      	lsls	r3, r3, #2
 8002968:	fa02 f303 	lsl.w	r3, r2, r3
 800296c:	69ba      	ldr	r2, [r7, #24]
 800296e:	4313      	orrs	r3, r2
 8002970:	61bb      	str	r3, [r7, #24]
 8002972:	69fb      	ldr	r3, [r7, #28]
 8002974:	08da      	lsrs	r2, r3, #3
 8002976:	687b      	ldr	r3, [r7, #4]
 8002978:	3208      	adds	r2, #8
 800297a:	69b9      	ldr	r1, [r7, #24]
 800297c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002980:	687b      	ldr	r3, [r7, #4]
 8002982:	681b      	ldr	r3, [r3, #0]
 8002984:	61bb      	str	r3, [r7, #24]
 8002986:	69fb      	ldr	r3, [r7, #28]
 8002988:	005b      	lsls	r3, r3, #1
 800298a:	2203      	movs	r2, #3
 800298c:	fa02 f303 	lsl.w	r3, r2, r3
 8002990:	43db      	mvns	r3, r3
 8002992:	69ba      	ldr	r2, [r7, #24]
 8002994:	4013      	ands	r3, r2
 8002996:	61bb      	str	r3, [r7, #24]
 8002998:	683b      	ldr	r3, [r7, #0]
 800299a:	685b      	ldr	r3, [r3, #4]
 800299c:	f003 0203 	and.w	r2, r3, #3
 80029a0:	69fb      	ldr	r3, [r7, #28]
 80029a2:	005b      	lsls	r3, r3, #1
 80029a4:	fa02 f303 	lsl.w	r3, r2, r3
 80029a8:	69ba      	ldr	r2, [r7, #24]
 80029aa:	4313      	orrs	r3, r2
 80029ac:	61bb      	str	r3, [r7, #24]
 80029ae:	687b      	ldr	r3, [r7, #4]
 80029b0:	69ba      	ldr	r2, [r7, #24]
 80029b2:	601a      	str	r2, [r3, #0]
 80029b4:	683b      	ldr	r3, [r7, #0]
 80029b6:	685b      	ldr	r3, [r3, #4]
 80029b8:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80029bc:	2b00      	cmp	r3, #0
 80029be:	f000 80a2 	beq.w	8002b06 <HAL_GPIO_Init+0x2ca>
 80029c2:	2300      	movs	r3, #0
 80029c4:	60fb      	str	r3, [r7, #12]
 80029c6:	4b57      	ldr	r3, [pc, #348]	@ (8002b24 <HAL_GPIO_Init+0x2e8>)
 80029c8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80029ca:	4a56      	ldr	r2, [pc, #344]	@ (8002b24 <HAL_GPIO_Init+0x2e8>)
 80029cc:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80029d0:	6453      	str	r3, [r2, #68]	@ 0x44
 80029d2:	4b54      	ldr	r3, [pc, #336]	@ (8002b24 <HAL_GPIO_Init+0x2e8>)
 80029d4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80029d6:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80029da:	60fb      	str	r3, [r7, #12]
 80029dc:	68fb      	ldr	r3, [r7, #12]
 80029de:	4a52      	ldr	r2, [pc, #328]	@ (8002b28 <HAL_GPIO_Init+0x2ec>)
 80029e0:	69fb      	ldr	r3, [r7, #28]
 80029e2:	089b      	lsrs	r3, r3, #2
 80029e4:	3302      	adds	r3, #2
 80029e6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80029ea:	61bb      	str	r3, [r7, #24]
 80029ec:	69fb      	ldr	r3, [r7, #28]
 80029ee:	f003 0303 	and.w	r3, r3, #3
 80029f2:	009b      	lsls	r3, r3, #2
 80029f4:	220f      	movs	r2, #15
 80029f6:	fa02 f303 	lsl.w	r3, r2, r3
 80029fa:	43db      	mvns	r3, r3
 80029fc:	69ba      	ldr	r2, [r7, #24]
 80029fe:	4013      	ands	r3, r2
 8002a00:	61bb      	str	r3, [r7, #24]
 8002a02:	687b      	ldr	r3, [r7, #4]
 8002a04:	4a49      	ldr	r2, [pc, #292]	@ (8002b2c <HAL_GPIO_Init+0x2f0>)
 8002a06:	4293      	cmp	r3, r2
 8002a08:	d019      	beq.n	8002a3e <HAL_GPIO_Init+0x202>
 8002a0a:	687b      	ldr	r3, [r7, #4]
 8002a0c:	4a48      	ldr	r2, [pc, #288]	@ (8002b30 <HAL_GPIO_Init+0x2f4>)
 8002a0e:	4293      	cmp	r3, r2
 8002a10:	d013      	beq.n	8002a3a <HAL_GPIO_Init+0x1fe>
 8002a12:	687b      	ldr	r3, [r7, #4]
 8002a14:	4a47      	ldr	r2, [pc, #284]	@ (8002b34 <HAL_GPIO_Init+0x2f8>)
 8002a16:	4293      	cmp	r3, r2
 8002a18:	d00d      	beq.n	8002a36 <HAL_GPIO_Init+0x1fa>
 8002a1a:	687b      	ldr	r3, [r7, #4]
 8002a1c:	4a46      	ldr	r2, [pc, #280]	@ (8002b38 <HAL_GPIO_Init+0x2fc>)
 8002a1e:	4293      	cmp	r3, r2
 8002a20:	d007      	beq.n	8002a32 <HAL_GPIO_Init+0x1f6>
 8002a22:	687b      	ldr	r3, [r7, #4]
 8002a24:	4a45      	ldr	r2, [pc, #276]	@ (8002b3c <HAL_GPIO_Init+0x300>)
 8002a26:	4293      	cmp	r3, r2
 8002a28:	d101      	bne.n	8002a2e <HAL_GPIO_Init+0x1f2>
 8002a2a:	2304      	movs	r3, #4
 8002a2c:	e008      	b.n	8002a40 <HAL_GPIO_Init+0x204>
 8002a2e:	2307      	movs	r3, #7
 8002a30:	e006      	b.n	8002a40 <HAL_GPIO_Init+0x204>
 8002a32:	2303      	movs	r3, #3
 8002a34:	e004      	b.n	8002a40 <HAL_GPIO_Init+0x204>
 8002a36:	2302      	movs	r3, #2
 8002a38:	e002      	b.n	8002a40 <HAL_GPIO_Init+0x204>
 8002a3a:	2301      	movs	r3, #1
 8002a3c:	e000      	b.n	8002a40 <HAL_GPIO_Init+0x204>
 8002a3e:	2300      	movs	r3, #0
 8002a40:	69fa      	ldr	r2, [r7, #28]
 8002a42:	f002 0203 	and.w	r2, r2, #3
 8002a46:	0092      	lsls	r2, r2, #2
 8002a48:	4093      	lsls	r3, r2
 8002a4a:	69ba      	ldr	r2, [r7, #24]
 8002a4c:	4313      	orrs	r3, r2
 8002a4e:	61bb      	str	r3, [r7, #24]
 8002a50:	4935      	ldr	r1, [pc, #212]	@ (8002b28 <HAL_GPIO_Init+0x2ec>)
 8002a52:	69fb      	ldr	r3, [r7, #28]
 8002a54:	089b      	lsrs	r3, r3, #2
 8002a56:	3302      	adds	r3, #2
 8002a58:	69ba      	ldr	r2, [r7, #24]
 8002a5a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002a5e:	4b38      	ldr	r3, [pc, #224]	@ (8002b40 <HAL_GPIO_Init+0x304>)
 8002a60:	689b      	ldr	r3, [r3, #8]
 8002a62:	61bb      	str	r3, [r7, #24]
 8002a64:	693b      	ldr	r3, [r7, #16]
 8002a66:	43db      	mvns	r3, r3
 8002a68:	69ba      	ldr	r2, [r7, #24]
 8002a6a:	4013      	ands	r3, r2
 8002a6c:	61bb      	str	r3, [r7, #24]
 8002a6e:	683b      	ldr	r3, [r7, #0]
 8002a70:	685b      	ldr	r3, [r3, #4]
 8002a72:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8002a76:	2b00      	cmp	r3, #0
 8002a78:	d003      	beq.n	8002a82 <HAL_GPIO_Init+0x246>
 8002a7a:	69ba      	ldr	r2, [r7, #24]
 8002a7c:	693b      	ldr	r3, [r7, #16]
 8002a7e:	4313      	orrs	r3, r2
 8002a80:	61bb      	str	r3, [r7, #24]
 8002a82:	4a2f      	ldr	r2, [pc, #188]	@ (8002b40 <HAL_GPIO_Init+0x304>)
 8002a84:	69bb      	ldr	r3, [r7, #24]
 8002a86:	6093      	str	r3, [r2, #8]
 8002a88:	4b2d      	ldr	r3, [pc, #180]	@ (8002b40 <HAL_GPIO_Init+0x304>)
 8002a8a:	68db      	ldr	r3, [r3, #12]
 8002a8c:	61bb      	str	r3, [r7, #24]
 8002a8e:	693b      	ldr	r3, [r7, #16]
 8002a90:	43db      	mvns	r3, r3
 8002a92:	69ba      	ldr	r2, [r7, #24]
 8002a94:	4013      	ands	r3, r2
 8002a96:	61bb      	str	r3, [r7, #24]
 8002a98:	683b      	ldr	r3, [r7, #0]
 8002a9a:	685b      	ldr	r3, [r3, #4]
 8002a9c:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002aa0:	2b00      	cmp	r3, #0
 8002aa2:	d003      	beq.n	8002aac <HAL_GPIO_Init+0x270>
 8002aa4:	69ba      	ldr	r2, [r7, #24]
 8002aa6:	693b      	ldr	r3, [r7, #16]
 8002aa8:	4313      	orrs	r3, r2
 8002aaa:	61bb      	str	r3, [r7, #24]
 8002aac:	4a24      	ldr	r2, [pc, #144]	@ (8002b40 <HAL_GPIO_Init+0x304>)
 8002aae:	69bb      	ldr	r3, [r7, #24]
 8002ab0:	60d3      	str	r3, [r2, #12]
 8002ab2:	4b23      	ldr	r3, [pc, #140]	@ (8002b40 <HAL_GPIO_Init+0x304>)
 8002ab4:	685b      	ldr	r3, [r3, #4]
 8002ab6:	61bb      	str	r3, [r7, #24]
 8002ab8:	693b      	ldr	r3, [r7, #16]
 8002aba:	43db      	mvns	r3, r3
 8002abc:	69ba      	ldr	r2, [r7, #24]
 8002abe:	4013      	ands	r3, r2
 8002ac0:	61bb      	str	r3, [r7, #24]
 8002ac2:	683b      	ldr	r3, [r7, #0]
 8002ac4:	685b      	ldr	r3, [r3, #4]
 8002ac6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002aca:	2b00      	cmp	r3, #0
 8002acc:	d003      	beq.n	8002ad6 <HAL_GPIO_Init+0x29a>
 8002ace:	69ba      	ldr	r2, [r7, #24]
 8002ad0:	693b      	ldr	r3, [r7, #16]
 8002ad2:	4313      	orrs	r3, r2
 8002ad4:	61bb      	str	r3, [r7, #24]
 8002ad6:	4a1a      	ldr	r2, [pc, #104]	@ (8002b40 <HAL_GPIO_Init+0x304>)
 8002ad8:	69bb      	ldr	r3, [r7, #24]
 8002ada:	6053      	str	r3, [r2, #4]
 8002adc:	4b18      	ldr	r3, [pc, #96]	@ (8002b40 <HAL_GPIO_Init+0x304>)
 8002ade:	681b      	ldr	r3, [r3, #0]
 8002ae0:	61bb      	str	r3, [r7, #24]
 8002ae2:	693b      	ldr	r3, [r7, #16]
 8002ae4:	43db      	mvns	r3, r3
 8002ae6:	69ba      	ldr	r2, [r7, #24]
 8002ae8:	4013      	ands	r3, r2
 8002aea:	61bb      	str	r3, [r7, #24]
 8002aec:	683b      	ldr	r3, [r7, #0]
 8002aee:	685b      	ldr	r3, [r3, #4]
 8002af0:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002af4:	2b00      	cmp	r3, #0
 8002af6:	d003      	beq.n	8002b00 <HAL_GPIO_Init+0x2c4>
 8002af8:	69ba      	ldr	r2, [r7, #24]
 8002afa:	693b      	ldr	r3, [r7, #16]
 8002afc:	4313      	orrs	r3, r2
 8002afe:	61bb      	str	r3, [r7, #24]
 8002b00:	4a0f      	ldr	r2, [pc, #60]	@ (8002b40 <HAL_GPIO_Init+0x304>)
 8002b02:	69bb      	ldr	r3, [r7, #24]
 8002b04:	6013      	str	r3, [r2, #0]
 8002b06:	69fb      	ldr	r3, [r7, #28]
 8002b08:	3301      	adds	r3, #1
 8002b0a:	61fb      	str	r3, [r7, #28]
 8002b0c:	69fb      	ldr	r3, [r7, #28]
 8002b0e:	2b0f      	cmp	r3, #15
 8002b10:	f67f aea2 	bls.w	8002858 <HAL_GPIO_Init+0x1c>
 8002b14:	bf00      	nop
 8002b16:	bf00      	nop
 8002b18:	3724      	adds	r7, #36	@ 0x24
 8002b1a:	46bd      	mov	sp, r7
 8002b1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b20:	4770      	bx	lr
 8002b22:	bf00      	nop
 8002b24:	40023800 	.word	0x40023800
 8002b28:	40013800 	.word	0x40013800
 8002b2c:	40020000 	.word	0x40020000
 8002b30:	40020400 	.word	0x40020400
 8002b34:	40020800 	.word	0x40020800
 8002b38:	40020c00 	.word	0x40020c00
 8002b3c:	40021000 	.word	0x40021000
 8002b40:	40013c00 	.word	0x40013c00

08002b44 <HAL_GPIO_ReadPin>:
 8002b44:	b480      	push	{r7}
 8002b46:	b085      	sub	sp, #20
 8002b48:	af00      	add	r7, sp, #0
 8002b4a:	6078      	str	r0, [r7, #4]
 8002b4c:	460b      	mov	r3, r1
 8002b4e:	807b      	strh	r3, [r7, #2]
 8002b50:	687b      	ldr	r3, [r7, #4]
 8002b52:	691a      	ldr	r2, [r3, #16]
 8002b54:	887b      	ldrh	r3, [r7, #2]
 8002b56:	4013      	ands	r3, r2
 8002b58:	2b00      	cmp	r3, #0
 8002b5a:	d002      	beq.n	8002b62 <HAL_GPIO_ReadPin+0x1e>
 8002b5c:	2301      	movs	r3, #1
 8002b5e:	73fb      	strb	r3, [r7, #15]
 8002b60:	e001      	b.n	8002b66 <HAL_GPIO_ReadPin+0x22>
 8002b62:	2300      	movs	r3, #0
 8002b64:	73fb      	strb	r3, [r7, #15]
 8002b66:	7bfb      	ldrb	r3, [r7, #15]
 8002b68:	4618      	mov	r0, r3
 8002b6a:	3714      	adds	r7, #20
 8002b6c:	46bd      	mov	sp, r7
 8002b6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b72:	4770      	bx	lr

08002b74 <HAL_GPIO_WritePin>:
 8002b74:	b480      	push	{r7}
 8002b76:	b083      	sub	sp, #12
 8002b78:	af00      	add	r7, sp, #0
 8002b7a:	6078      	str	r0, [r7, #4]
 8002b7c:	460b      	mov	r3, r1
 8002b7e:	807b      	strh	r3, [r7, #2]
 8002b80:	4613      	mov	r3, r2
 8002b82:	707b      	strb	r3, [r7, #1]
 8002b84:	787b      	ldrb	r3, [r7, #1]
 8002b86:	2b00      	cmp	r3, #0
 8002b88:	d003      	beq.n	8002b92 <HAL_GPIO_WritePin+0x1e>
 8002b8a:	887a      	ldrh	r2, [r7, #2]
 8002b8c:	687b      	ldr	r3, [r7, #4]
 8002b8e:	619a      	str	r2, [r3, #24]
 8002b90:	e003      	b.n	8002b9a <HAL_GPIO_WritePin+0x26>
 8002b92:	887b      	ldrh	r3, [r7, #2]
 8002b94:	041a      	lsls	r2, r3, #16
 8002b96:	687b      	ldr	r3, [r7, #4]
 8002b98:	619a      	str	r2, [r3, #24]
 8002b9a:	bf00      	nop
 8002b9c:	370c      	adds	r7, #12
 8002b9e:	46bd      	mov	sp, r7
 8002ba0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ba4:	4770      	bx	lr

08002ba6 <HAL_GPIO_TogglePin>:
 8002ba6:	b480      	push	{r7}
 8002ba8:	b085      	sub	sp, #20
 8002baa:	af00      	add	r7, sp, #0
 8002bac:	6078      	str	r0, [r7, #4]
 8002bae:	460b      	mov	r3, r1
 8002bb0:	807b      	strh	r3, [r7, #2]
 8002bb2:	687b      	ldr	r3, [r7, #4]
 8002bb4:	695b      	ldr	r3, [r3, #20]
 8002bb6:	60fb      	str	r3, [r7, #12]
 8002bb8:	887a      	ldrh	r2, [r7, #2]
 8002bba:	68fb      	ldr	r3, [r7, #12]
 8002bbc:	4013      	ands	r3, r2
 8002bbe:	041a      	lsls	r2, r3, #16
 8002bc0:	68fb      	ldr	r3, [r7, #12]
 8002bc2:	43d9      	mvns	r1, r3
 8002bc4:	887b      	ldrh	r3, [r7, #2]
 8002bc6:	400b      	ands	r3, r1
 8002bc8:	431a      	orrs	r2, r3
 8002bca:	687b      	ldr	r3, [r7, #4]
 8002bcc:	619a      	str	r2, [r3, #24]
 8002bce:	bf00      	nop
 8002bd0:	3714      	adds	r7, #20
 8002bd2:	46bd      	mov	sp, r7
 8002bd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bd8:	4770      	bx	lr
	...

08002bdc <HAL_RCC_OscConfig>:
 8002bdc:	b580      	push	{r7, lr}
 8002bde:	b086      	sub	sp, #24
 8002be0:	af00      	add	r7, sp, #0
 8002be2:	6078      	str	r0, [r7, #4]
 8002be4:	687b      	ldr	r3, [r7, #4]
 8002be6:	2b00      	cmp	r3, #0
 8002be8:	d101      	bne.n	8002bee <HAL_RCC_OscConfig+0x12>
 8002bea:	2301      	movs	r3, #1
 8002bec:	e267      	b.n	80030be <HAL_RCC_OscConfig+0x4e2>
 8002bee:	687b      	ldr	r3, [r7, #4]
 8002bf0:	681b      	ldr	r3, [r3, #0]
 8002bf2:	f003 0301 	and.w	r3, r3, #1
 8002bf6:	2b00      	cmp	r3, #0
 8002bf8:	d075      	beq.n	8002ce6 <HAL_RCC_OscConfig+0x10a>
 8002bfa:	4b88      	ldr	r3, [pc, #544]	@ (8002e1c <HAL_RCC_OscConfig+0x240>)
 8002bfc:	689b      	ldr	r3, [r3, #8]
 8002bfe:	f003 030c 	and.w	r3, r3, #12
 8002c02:	2b04      	cmp	r3, #4
 8002c04:	d00c      	beq.n	8002c20 <HAL_RCC_OscConfig+0x44>
 8002c06:	4b85      	ldr	r3, [pc, #532]	@ (8002e1c <HAL_RCC_OscConfig+0x240>)
 8002c08:	689b      	ldr	r3, [r3, #8]
 8002c0a:	f003 030c 	and.w	r3, r3, #12
 8002c0e:	2b08      	cmp	r3, #8
 8002c10:	d112      	bne.n	8002c38 <HAL_RCC_OscConfig+0x5c>
 8002c12:	4b82      	ldr	r3, [pc, #520]	@ (8002e1c <HAL_RCC_OscConfig+0x240>)
 8002c14:	685b      	ldr	r3, [r3, #4]
 8002c16:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002c1a:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8002c1e:	d10b      	bne.n	8002c38 <HAL_RCC_OscConfig+0x5c>
 8002c20:	4b7e      	ldr	r3, [pc, #504]	@ (8002e1c <HAL_RCC_OscConfig+0x240>)
 8002c22:	681b      	ldr	r3, [r3, #0]
 8002c24:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002c28:	2b00      	cmp	r3, #0
 8002c2a:	d05b      	beq.n	8002ce4 <HAL_RCC_OscConfig+0x108>
 8002c2c:	687b      	ldr	r3, [r7, #4]
 8002c2e:	685b      	ldr	r3, [r3, #4]
 8002c30:	2b00      	cmp	r3, #0
 8002c32:	d157      	bne.n	8002ce4 <HAL_RCC_OscConfig+0x108>
 8002c34:	2301      	movs	r3, #1
 8002c36:	e242      	b.n	80030be <HAL_RCC_OscConfig+0x4e2>
 8002c38:	687b      	ldr	r3, [r7, #4]
 8002c3a:	685b      	ldr	r3, [r3, #4]
 8002c3c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8002c40:	d106      	bne.n	8002c50 <HAL_RCC_OscConfig+0x74>
 8002c42:	4b76      	ldr	r3, [pc, #472]	@ (8002e1c <HAL_RCC_OscConfig+0x240>)
 8002c44:	681b      	ldr	r3, [r3, #0]
 8002c46:	4a75      	ldr	r2, [pc, #468]	@ (8002e1c <HAL_RCC_OscConfig+0x240>)
 8002c48:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002c4c:	6013      	str	r3, [r2, #0]
 8002c4e:	e01d      	b.n	8002c8c <HAL_RCC_OscConfig+0xb0>
 8002c50:	687b      	ldr	r3, [r7, #4]
 8002c52:	685b      	ldr	r3, [r3, #4]
 8002c54:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8002c58:	d10c      	bne.n	8002c74 <HAL_RCC_OscConfig+0x98>
 8002c5a:	4b70      	ldr	r3, [pc, #448]	@ (8002e1c <HAL_RCC_OscConfig+0x240>)
 8002c5c:	681b      	ldr	r3, [r3, #0]
 8002c5e:	4a6f      	ldr	r2, [pc, #444]	@ (8002e1c <HAL_RCC_OscConfig+0x240>)
 8002c60:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002c64:	6013      	str	r3, [r2, #0]
 8002c66:	4b6d      	ldr	r3, [pc, #436]	@ (8002e1c <HAL_RCC_OscConfig+0x240>)
 8002c68:	681b      	ldr	r3, [r3, #0]
 8002c6a:	4a6c      	ldr	r2, [pc, #432]	@ (8002e1c <HAL_RCC_OscConfig+0x240>)
 8002c6c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002c70:	6013      	str	r3, [r2, #0]
 8002c72:	e00b      	b.n	8002c8c <HAL_RCC_OscConfig+0xb0>
 8002c74:	4b69      	ldr	r3, [pc, #420]	@ (8002e1c <HAL_RCC_OscConfig+0x240>)
 8002c76:	681b      	ldr	r3, [r3, #0]
 8002c78:	4a68      	ldr	r2, [pc, #416]	@ (8002e1c <HAL_RCC_OscConfig+0x240>)
 8002c7a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8002c7e:	6013      	str	r3, [r2, #0]
 8002c80:	4b66      	ldr	r3, [pc, #408]	@ (8002e1c <HAL_RCC_OscConfig+0x240>)
 8002c82:	681b      	ldr	r3, [r3, #0]
 8002c84:	4a65      	ldr	r2, [pc, #404]	@ (8002e1c <HAL_RCC_OscConfig+0x240>)
 8002c86:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8002c8a:	6013      	str	r3, [r2, #0]
 8002c8c:	687b      	ldr	r3, [r7, #4]
 8002c8e:	685b      	ldr	r3, [r3, #4]
 8002c90:	2b00      	cmp	r3, #0
 8002c92:	d013      	beq.n	8002cbc <HAL_RCC_OscConfig+0xe0>
 8002c94:	f7fe fd58 	bl	8001748 <HAL_GetTick>
 8002c98:	6138      	str	r0, [r7, #16]
 8002c9a:	e008      	b.n	8002cae <HAL_RCC_OscConfig+0xd2>
 8002c9c:	f7fe fd54 	bl	8001748 <HAL_GetTick>
 8002ca0:	4602      	mov	r2, r0
 8002ca2:	693b      	ldr	r3, [r7, #16]
 8002ca4:	1ad3      	subs	r3, r2, r3
 8002ca6:	2b64      	cmp	r3, #100	@ 0x64
 8002ca8:	d901      	bls.n	8002cae <HAL_RCC_OscConfig+0xd2>
 8002caa:	2303      	movs	r3, #3
 8002cac:	e207      	b.n	80030be <HAL_RCC_OscConfig+0x4e2>
 8002cae:	4b5b      	ldr	r3, [pc, #364]	@ (8002e1c <HAL_RCC_OscConfig+0x240>)
 8002cb0:	681b      	ldr	r3, [r3, #0]
 8002cb2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002cb6:	2b00      	cmp	r3, #0
 8002cb8:	d0f0      	beq.n	8002c9c <HAL_RCC_OscConfig+0xc0>
 8002cba:	e014      	b.n	8002ce6 <HAL_RCC_OscConfig+0x10a>
 8002cbc:	f7fe fd44 	bl	8001748 <HAL_GetTick>
 8002cc0:	6138      	str	r0, [r7, #16]
 8002cc2:	e008      	b.n	8002cd6 <HAL_RCC_OscConfig+0xfa>
 8002cc4:	f7fe fd40 	bl	8001748 <HAL_GetTick>
 8002cc8:	4602      	mov	r2, r0
 8002cca:	693b      	ldr	r3, [r7, #16]
 8002ccc:	1ad3      	subs	r3, r2, r3
 8002cce:	2b64      	cmp	r3, #100	@ 0x64
 8002cd0:	d901      	bls.n	8002cd6 <HAL_RCC_OscConfig+0xfa>
 8002cd2:	2303      	movs	r3, #3
 8002cd4:	e1f3      	b.n	80030be <HAL_RCC_OscConfig+0x4e2>
 8002cd6:	4b51      	ldr	r3, [pc, #324]	@ (8002e1c <HAL_RCC_OscConfig+0x240>)
 8002cd8:	681b      	ldr	r3, [r3, #0]
 8002cda:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002cde:	2b00      	cmp	r3, #0
 8002ce0:	d1f0      	bne.n	8002cc4 <HAL_RCC_OscConfig+0xe8>
 8002ce2:	e000      	b.n	8002ce6 <HAL_RCC_OscConfig+0x10a>
 8002ce4:	bf00      	nop
 8002ce6:	687b      	ldr	r3, [r7, #4]
 8002ce8:	681b      	ldr	r3, [r3, #0]
 8002cea:	f003 0302 	and.w	r3, r3, #2
 8002cee:	2b00      	cmp	r3, #0
 8002cf0:	d063      	beq.n	8002dba <HAL_RCC_OscConfig+0x1de>
 8002cf2:	4b4a      	ldr	r3, [pc, #296]	@ (8002e1c <HAL_RCC_OscConfig+0x240>)
 8002cf4:	689b      	ldr	r3, [r3, #8]
 8002cf6:	f003 030c 	and.w	r3, r3, #12
 8002cfa:	2b00      	cmp	r3, #0
 8002cfc:	d00b      	beq.n	8002d16 <HAL_RCC_OscConfig+0x13a>
 8002cfe:	4b47      	ldr	r3, [pc, #284]	@ (8002e1c <HAL_RCC_OscConfig+0x240>)
 8002d00:	689b      	ldr	r3, [r3, #8]
 8002d02:	f003 030c 	and.w	r3, r3, #12
 8002d06:	2b08      	cmp	r3, #8
 8002d08:	d11c      	bne.n	8002d44 <HAL_RCC_OscConfig+0x168>
 8002d0a:	4b44      	ldr	r3, [pc, #272]	@ (8002e1c <HAL_RCC_OscConfig+0x240>)
 8002d0c:	685b      	ldr	r3, [r3, #4]
 8002d0e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002d12:	2b00      	cmp	r3, #0
 8002d14:	d116      	bne.n	8002d44 <HAL_RCC_OscConfig+0x168>
 8002d16:	4b41      	ldr	r3, [pc, #260]	@ (8002e1c <HAL_RCC_OscConfig+0x240>)
 8002d18:	681b      	ldr	r3, [r3, #0]
 8002d1a:	f003 0302 	and.w	r3, r3, #2
 8002d1e:	2b00      	cmp	r3, #0
 8002d20:	d005      	beq.n	8002d2e <HAL_RCC_OscConfig+0x152>
 8002d22:	687b      	ldr	r3, [r7, #4]
 8002d24:	68db      	ldr	r3, [r3, #12]
 8002d26:	2b01      	cmp	r3, #1
 8002d28:	d001      	beq.n	8002d2e <HAL_RCC_OscConfig+0x152>
 8002d2a:	2301      	movs	r3, #1
 8002d2c:	e1c7      	b.n	80030be <HAL_RCC_OscConfig+0x4e2>
 8002d2e:	4b3b      	ldr	r3, [pc, #236]	@ (8002e1c <HAL_RCC_OscConfig+0x240>)
 8002d30:	681b      	ldr	r3, [r3, #0]
 8002d32:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002d36:	687b      	ldr	r3, [r7, #4]
 8002d38:	691b      	ldr	r3, [r3, #16]
 8002d3a:	00db      	lsls	r3, r3, #3
 8002d3c:	4937      	ldr	r1, [pc, #220]	@ (8002e1c <HAL_RCC_OscConfig+0x240>)
 8002d3e:	4313      	orrs	r3, r2
 8002d40:	600b      	str	r3, [r1, #0]
 8002d42:	e03a      	b.n	8002dba <HAL_RCC_OscConfig+0x1de>
 8002d44:	687b      	ldr	r3, [r7, #4]
 8002d46:	68db      	ldr	r3, [r3, #12]
 8002d48:	2b00      	cmp	r3, #0
 8002d4a:	d020      	beq.n	8002d8e <HAL_RCC_OscConfig+0x1b2>
 8002d4c:	4b34      	ldr	r3, [pc, #208]	@ (8002e20 <HAL_RCC_OscConfig+0x244>)
 8002d4e:	2201      	movs	r2, #1
 8002d50:	601a      	str	r2, [r3, #0]
 8002d52:	f7fe fcf9 	bl	8001748 <HAL_GetTick>
 8002d56:	6138      	str	r0, [r7, #16]
 8002d58:	e008      	b.n	8002d6c <HAL_RCC_OscConfig+0x190>
 8002d5a:	f7fe fcf5 	bl	8001748 <HAL_GetTick>
 8002d5e:	4602      	mov	r2, r0
 8002d60:	693b      	ldr	r3, [r7, #16]
 8002d62:	1ad3      	subs	r3, r2, r3
 8002d64:	2b02      	cmp	r3, #2
 8002d66:	d901      	bls.n	8002d6c <HAL_RCC_OscConfig+0x190>
 8002d68:	2303      	movs	r3, #3
 8002d6a:	e1a8      	b.n	80030be <HAL_RCC_OscConfig+0x4e2>
 8002d6c:	4b2b      	ldr	r3, [pc, #172]	@ (8002e1c <HAL_RCC_OscConfig+0x240>)
 8002d6e:	681b      	ldr	r3, [r3, #0]
 8002d70:	f003 0302 	and.w	r3, r3, #2
 8002d74:	2b00      	cmp	r3, #0
 8002d76:	d0f0      	beq.n	8002d5a <HAL_RCC_OscConfig+0x17e>
 8002d78:	4b28      	ldr	r3, [pc, #160]	@ (8002e1c <HAL_RCC_OscConfig+0x240>)
 8002d7a:	681b      	ldr	r3, [r3, #0]
 8002d7c:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002d80:	687b      	ldr	r3, [r7, #4]
 8002d82:	691b      	ldr	r3, [r3, #16]
 8002d84:	00db      	lsls	r3, r3, #3
 8002d86:	4925      	ldr	r1, [pc, #148]	@ (8002e1c <HAL_RCC_OscConfig+0x240>)
 8002d88:	4313      	orrs	r3, r2
 8002d8a:	600b      	str	r3, [r1, #0]
 8002d8c:	e015      	b.n	8002dba <HAL_RCC_OscConfig+0x1de>
 8002d8e:	4b24      	ldr	r3, [pc, #144]	@ (8002e20 <HAL_RCC_OscConfig+0x244>)
 8002d90:	2200      	movs	r2, #0
 8002d92:	601a      	str	r2, [r3, #0]
 8002d94:	f7fe fcd8 	bl	8001748 <HAL_GetTick>
 8002d98:	6138      	str	r0, [r7, #16]
 8002d9a:	e008      	b.n	8002dae <HAL_RCC_OscConfig+0x1d2>
 8002d9c:	f7fe fcd4 	bl	8001748 <HAL_GetTick>
 8002da0:	4602      	mov	r2, r0
 8002da2:	693b      	ldr	r3, [r7, #16]
 8002da4:	1ad3      	subs	r3, r2, r3
 8002da6:	2b02      	cmp	r3, #2
 8002da8:	d901      	bls.n	8002dae <HAL_RCC_OscConfig+0x1d2>
 8002daa:	2303      	movs	r3, #3
 8002dac:	e187      	b.n	80030be <HAL_RCC_OscConfig+0x4e2>
 8002dae:	4b1b      	ldr	r3, [pc, #108]	@ (8002e1c <HAL_RCC_OscConfig+0x240>)
 8002db0:	681b      	ldr	r3, [r3, #0]
 8002db2:	f003 0302 	and.w	r3, r3, #2
 8002db6:	2b00      	cmp	r3, #0
 8002db8:	d1f0      	bne.n	8002d9c <HAL_RCC_OscConfig+0x1c0>
 8002dba:	687b      	ldr	r3, [r7, #4]
 8002dbc:	681b      	ldr	r3, [r3, #0]
 8002dbe:	f003 0308 	and.w	r3, r3, #8
 8002dc2:	2b00      	cmp	r3, #0
 8002dc4:	d036      	beq.n	8002e34 <HAL_RCC_OscConfig+0x258>
 8002dc6:	687b      	ldr	r3, [r7, #4]
 8002dc8:	695b      	ldr	r3, [r3, #20]
 8002dca:	2b00      	cmp	r3, #0
 8002dcc:	d016      	beq.n	8002dfc <HAL_RCC_OscConfig+0x220>
 8002dce:	4b15      	ldr	r3, [pc, #84]	@ (8002e24 <HAL_RCC_OscConfig+0x248>)
 8002dd0:	2201      	movs	r2, #1
 8002dd2:	601a      	str	r2, [r3, #0]
 8002dd4:	f7fe fcb8 	bl	8001748 <HAL_GetTick>
 8002dd8:	6138      	str	r0, [r7, #16]
 8002dda:	e008      	b.n	8002dee <HAL_RCC_OscConfig+0x212>
 8002ddc:	f7fe fcb4 	bl	8001748 <HAL_GetTick>
 8002de0:	4602      	mov	r2, r0
 8002de2:	693b      	ldr	r3, [r7, #16]
 8002de4:	1ad3      	subs	r3, r2, r3
 8002de6:	2b02      	cmp	r3, #2
 8002de8:	d901      	bls.n	8002dee <HAL_RCC_OscConfig+0x212>
 8002dea:	2303      	movs	r3, #3
 8002dec:	e167      	b.n	80030be <HAL_RCC_OscConfig+0x4e2>
 8002dee:	4b0b      	ldr	r3, [pc, #44]	@ (8002e1c <HAL_RCC_OscConfig+0x240>)
 8002df0:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002df2:	f003 0302 	and.w	r3, r3, #2
 8002df6:	2b00      	cmp	r3, #0
 8002df8:	d0f0      	beq.n	8002ddc <HAL_RCC_OscConfig+0x200>
 8002dfa:	e01b      	b.n	8002e34 <HAL_RCC_OscConfig+0x258>
 8002dfc:	4b09      	ldr	r3, [pc, #36]	@ (8002e24 <HAL_RCC_OscConfig+0x248>)
 8002dfe:	2200      	movs	r2, #0
 8002e00:	601a      	str	r2, [r3, #0]
 8002e02:	f7fe fca1 	bl	8001748 <HAL_GetTick>
 8002e06:	6138      	str	r0, [r7, #16]
 8002e08:	e00e      	b.n	8002e28 <HAL_RCC_OscConfig+0x24c>
 8002e0a:	f7fe fc9d 	bl	8001748 <HAL_GetTick>
 8002e0e:	4602      	mov	r2, r0
 8002e10:	693b      	ldr	r3, [r7, #16]
 8002e12:	1ad3      	subs	r3, r2, r3
 8002e14:	2b02      	cmp	r3, #2
 8002e16:	d907      	bls.n	8002e28 <HAL_RCC_OscConfig+0x24c>
 8002e18:	2303      	movs	r3, #3
 8002e1a:	e150      	b.n	80030be <HAL_RCC_OscConfig+0x4e2>
 8002e1c:	40023800 	.word	0x40023800
 8002e20:	42470000 	.word	0x42470000
 8002e24:	42470e80 	.word	0x42470e80
 8002e28:	4b88      	ldr	r3, [pc, #544]	@ (800304c <HAL_RCC_OscConfig+0x470>)
 8002e2a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002e2c:	f003 0302 	and.w	r3, r3, #2
 8002e30:	2b00      	cmp	r3, #0
 8002e32:	d1ea      	bne.n	8002e0a <HAL_RCC_OscConfig+0x22e>
 8002e34:	687b      	ldr	r3, [r7, #4]
 8002e36:	681b      	ldr	r3, [r3, #0]
 8002e38:	f003 0304 	and.w	r3, r3, #4
 8002e3c:	2b00      	cmp	r3, #0
 8002e3e:	f000 8097 	beq.w	8002f70 <HAL_RCC_OscConfig+0x394>
 8002e42:	2300      	movs	r3, #0
 8002e44:	75fb      	strb	r3, [r7, #23]
 8002e46:	4b81      	ldr	r3, [pc, #516]	@ (800304c <HAL_RCC_OscConfig+0x470>)
 8002e48:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e4a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002e4e:	2b00      	cmp	r3, #0
 8002e50:	d10f      	bne.n	8002e72 <HAL_RCC_OscConfig+0x296>
 8002e52:	2300      	movs	r3, #0
 8002e54:	60bb      	str	r3, [r7, #8]
 8002e56:	4b7d      	ldr	r3, [pc, #500]	@ (800304c <HAL_RCC_OscConfig+0x470>)
 8002e58:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e5a:	4a7c      	ldr	r2, [pc, #496]	@ (800304c <HAL_RCC_OscConfig+0x470>)
 8002e5c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002e60:	6413      	str	r3, [r2, #64]	@ 0x40
 8002e62:	4b7a      	ldr	r3, [pc, #488]	@ (800304c <HAL_RCC_OscConfig+0x470>)
 8002e64:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e66:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002e6a:	60bb      	str	r3, [r7, #8]
 8002e6c:	68bb      	ldr	r3, [r7, #8]
 8002e6e:	2301      	movs	r3, #1
 8002e70:	75fb      	strb	r3, [r7, #23]
 8002e72:	4b77      	ldr	r3, [pc, #476]	@ (8003050 <HAL_RCC_OscConfig+0x474>)
 8002e74:	681b      	ldr	r3, [r3, #0]
 8002e76:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002e7a:	2b00      	cmp	r3, #0
 8002e7c:	d118      	bne.n	8002eb0 <HAL_RCC_OscConfig+0x2d4>
 8002e7e:	4b74      	ldr	r3, [pc, #464]	@ (8003050 <HAL_RCC_OscConfig+0x474>)
 8002e80:	681b      	ldr	r3, [r3, #0]
 8002e82:	4a73      	ldr	r2, [pc, #460]	@ (8003050 <HAL_RCC_OscConfig+0x474>)
 8002e84:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002e88:	6013      	str	r3, [r2, #0]
 8002e8a:	f7fe fc5d 	bl	8001748 <HAL_GetTick>
 8002e8e:	6138      	str	r0, [r7, #16]
 8002e90:	e008      	b.n	8002ea4 <HAL_RCC_OscConfig+0x2c8>
 8002e92:	f7fe fc59 	bl	8001748 <HAL_GetTick>
 8002e96:	4602      	mov	r2, r0
 8002e98:	693b      	ldr	r3, [r7, #16]
 8002e9a:	1ad3      	subs	r3, r2, r3
 8002e9c:	2b02      	cmp	r3, #2
 8002e9e:	d901      	bls.n	8002ea4 <HAL_RCC_OscConfig+0x2c8>
 8002ea0:	2303      	movs	r3, #3
 8002ea2:	e10c      	b.n	80030be <HAL_RCC_OscConfig+0x4e2>
 8002ea4:	4b6a      	ldr	r3, [pc, #424]	@ (8003050 <HAL_RCC_OscConfig+0x474>)
 8002ea6:	681b      	ldr	r3, [r3, #0]
 8002ea8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002eac:	2b00      	cmp	r3, #0
 8002eae:	d0f0      	beq.n	8002e92 <HAL_RCC_OscConfig+0x2b6>
 8002eb0:	687b      	ldr	r3, [r7, #4]
 8002eb2:	689b      	ldr	r3, [r3, #8]
 8002eb4:	2b01      	cmp	r3, #1
 8002eb6:	d106      	bne.n	8002ec6 <HAL_RCC_OscConfig+0x2ea>
 8002eb8:	4b64      	ldr	r3, [pc, #400]	@ (800304c <HAL_RCC_OscConfig+0x470>)
 8002eba:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002ebc:	4a63      	ldr	r2, [pc, #396]	@ (800304c <HAL_RCC_OscConfig+0x470>)
 8002ebe:	f043 0301 	orr.w	r3, r3, #1
 8002ec2:	6713      	str	r3, [r2, #112]	@ 0x70
 8002ec4:	e01c      	b.n	8002f00 <HAL_RCC_OscConfig+0x324>
 8002ec6:	687b      	ldr	r3, [r7, #4]
 8002ec8:	689b      	ldr	r3, [r3, #8]
 8002eca:	2b05      	cmp	r3, #5
 8002ecc:	d10c      	bne.n	8002ee8 <HAL_RCC_OscConfig+0x30c>
 8002ece:	4b5f      	ldr	r3, [pc, #380]	@ (800304c <HAL_RCC_OscConfig+0x470>)
 8002ed0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002ed2:	4a5e      	ldr	r2, [pc, #376]	@ (800304c <HAL_RCC_OscConfig+0x470>)
 8002ed4:	f043 0304 	orr.w	r3, r3, #4
 8002ed8:	6713      	str	r3, [r2, #112]	@ 0x70
 8002eda:	4b5c      	ldr	r3, [pc, #368]	@ (800304c <HAL_RCC_OscConfig+0x470>)
 8002edc:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002ede:	4a5b      	ldr	r2, [pc, #364]	@ (800304c <HAL_RCC_OscConfig+0x470>)
 8002ee0:	f043 0301 	orr.w	r3, r3, #1
 8002ee4:	6713      	str	r3, [r2, #112]	@ 0x70
 8002ee6:	e00b      	b.n	8002f00 <HAL_RCC_OscConfig+0x324>
 8002ee8:	4b58      	ldr	r3, [pc, #352]	@ (800304c <HAL_RCC_OscConfig+0x470>)
 8002eea:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002eec:	4a57      	ldr	r2, [pc, #348]	@ (800304c <HAL_RCC_OscConfig+0x470>)
 8002eee:	f023 0301 	bic.w	r3, r3, #1
 8002ef2:	6713      	str	r3, [r2, #112]	@ 0x70
 8002ef4:	4b55      	ldr	r3, [pc, #340]	@ (800304c <HAL_RCC_OscConfig+0x470>)
 8002ef6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002ef8:	4a54      	ldr	r2, [pc, #336]	@ (800304c <HAL_RCC_OscConfig+0x470>)
 8002efa:	f023 0304 	bic.w	r3, r3, #4
 8002efe:	6713      	str	r3, [r2, #112]	@ 0x70
 8002f00:	687b      	ldr	r3, [r7, #4]
 8002f02:	689b      	ldr	r3, [r3, #8]
 8002f04:	2b00      	cmp	r3, #0
 8002f06:	d015      	beq.n	8002f34 <HAL_RCC_OscConfig+0x358>
 8002f08:	f7fe fc1e 	bl	8001748 <HAL_GetTick>
 8002f0c:	6138      	str	r0, [r7, #16]
 8002f0e:	e00a      	b.n	8002f26 <HAL_RCC_OscConfig+0x34a>
 8002f10:	f7fe fc1a 	bl	8001748 <HAL_GetTick>
 8002f14:	4602      	mov	r2, r0
 8002f16:	693b      	ldr	r3, [r7, #16]
 8002f18:	1ad3      	subs	r3, r2, r3
 8002f1a:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002f1e:	4293      	cmp	r3, r2
 8002f20:	d901      	bls.n	8002f26 <HAL_RCC_OscConfig+0x34a>
 8002f22:	2303      	movs	r3, #3
 8002f24:	e0cb      	b.n	80030be <HAL_RCC_OscConfig+0x4e2>
 8002f26:	4b49      	ldr	r3, [pc, #292]	@ (800304c <HAL_RCC_OscConfig+0x470>)
 8002f28:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002f2a:	f003 0302 	and.w	r3, r3, #2
 8002f2e:	2b00      	cmp	r3, #0
 8002f30:	d0ee      	beq.n	8002f10 <HAL_RCC_OscConfig+0x334>
 8002f32:	e014      	b.n	8002f5e <HAL_RCC_OscConfig+0x382>
 8002f34:	f7fe fc08 	bl	8001748 <HAL_GetTick>
 8002f38:	6138      	str	r0, [r7, #16]
 8002f3a:	e00a      	b.n	8002f52 <HAL_RCC_OscConfig+0x376>
 8002f3c:	f7fe fc04 	bl	8001748 <HAL_GetTick>
 8002f40:	4602      	mov	r2, r0
 8002f42:	693b      	ldr	r3, [r7, #16]
 8002f44:	1ad3      	subs	r3, r2, r3
 8002f46:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002f4a:	4293      	cmp	r3, r2
 8002f4c:	d901      	bls.n	8002f52 <HAL_RCC_OscConfig+0x376>
 8002f4e:	2303      	movs	r3, #3
 8002f50:	e0b5      	b.n	80030be <HAL_RCC_OscConfig+0x4e2>
 8002f52:	4b3e      	ldr	r3, [pc, #248]	@ (800304c <HAL_RCC_OscConfig+0x470>)
 8002f54:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002f56:	f003 0302 	and.w	r3, r3, #2
 8002f5a:	2b00      	cmp	r3, #0
 8002f5c:	d1ee      	bne.n	8002f3c <HAL_RCC_OscConfig+0x360>
 8002f5e:	7dfb      	ldrb	r3, [r7, #23]
 8002f60:	2b01      	cmp	r3, #1
 8002f62:	d105      	bne.n	8002f70 <HAL_RCC_OscConfig+0x394>
 8002f64:	4b39      	ldr	r3, [pc, #228]	@ (800304c <HAL_RCC_OscConfig+0x470>)
 8002f66:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f68:	4a38      	ldr	r2, [pc, #224]	@ (800304c <HAL_RCC_OscConfig+0x470>)
 8002f6a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8002f6e:	6413      	str	r3, [r2, #64]	@ 0x40
 8002f70:	687b      	ldr	r3, [r7, #4]
 8002f72:	699b      	ldr	r3, [r3, #24]
 8002f74:	2b00      	cmp	r3, #0
 8002f76:	f000 80a1 	beq.w	80030bc <HAL_RCC_OscConfig+0x4e0>
 8002f7a:	4b34      	ldr	r3, [pc, #208]	@ (800304c <HAL_RCC_OscConfig+0x470>)
 8002f7c:	689b      	ldr	r3, [r3, #8]
 8002f7e:	f003 030c 	and.w	r3, r3, #12
 8002f82:	2b08      	cmp	r3, #8
 8002f84:	d05c      	beq.n	8003040 <HAL_RCC_OscConfig+0x464>
 8002f86:	687b      	ldr	r3, [r7, #4]
 8002f88:	699b      	ldr	r3, [r3, #24]
 8002f8a:	2b02      	cmp	r3, #2
 8002f8c:	d141      	bne.n	8003012 <HAL_RCC_OscConfig+0x436>
 8002f8e:	4b31      	ldr	r3, [pc, #196]	@ (8003054 <HAL_RCC_OscConfig+0x478>)
 8002f90:	2200      	movs	r2, #0
 8002f92:	601a      	str	r2, [r3, #0]
 8002f94:	f7fe fbd8 	bl	8001748 <HAL_GetTick>
 8002f98:	6138      	str	r0, [r7, #16]
 8002f9a:	e008      	b.n	8002fae <HAL_RCC_OscConfig+0x3d2>
 8002f9c:	f7fe fbd4 	bl	8001748 <HAL_GetTick>
 8002fa0:	4602      	mov	r2, r0
 8002fa2:	693b      	ldr	r3, [r7, #16]
 8002fa4:	1ad3      	subs	r3, r2, r3
 8002fa6:	2b02      	cmp	r3, #2
 8002fa8:	d901      	bls.n	8002fae <HAL_RCC_OscConfig+0x3d2>
 8002faa:	2303      	movs	r3, #3
 8002fac:	e087      	b.n	80030be <HAL_RCC_OscConfig+0x4e2>
 8002fae:	4b27      	ldr	r3, [pc, #156]	@ (800304c <HAL_RCC_OscConfig+0x470>)
 8002fb0:	681b      	ldr	r3, [r3, #0]
 8002fb2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002fb6:	2b00      	cmp	r3, #0
 8002fb8:	d1f0      	bne.n	8002f9c <HAL_RCC_OscConfig+0x3c0>
 8002fba:	687b      	ldr	r3, [r7, #4]
 8002fbc:	69da      	ldr	r2, [r3, #28]
 8002fbe:	687b      	ldr	r3, [r7, #4]
 8002fc0:	6a1b      	ldr	r3, [r3, #32]
 8002fc2:	431a      	orrs	r2, r3
 8002fc4:	687b      	ldr	r3, [r7, #4]
 8002fc6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002fc8:	019b      	lsls	r3, r3, #6
 8002fca:	431a      	orrs	r2, r3
 8002fcc:	687b      	ldr	r3, [r7, #4]
 8002fce:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002fd0:	085b      	lsrs	r3, r3, #1
 8002fd2:	3b01      	subs	r3, #1
 8002fd4:	041b      	lsls	r3, r3, #16
 8002fd6:	431a      	orrs	r2, r3
 8002fd8:	687b      	ldr	r3, [r7, #4]
 8002fda:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002fdc:	061b      	lsls	r3, r3, #24
 8002fde:	491b      	ldr	r1, [pc, #108]	@ (800304c <HAL_RCC_OscConfig+0x470>)
 8002fe0:	4313      	orrs	r3, r2
 8002fe2:	604b      	str	r3, [r1, #4]
 8002fe4:	4b1b      	ldr	r3, [pc, #108]	@ (8003054 <HAL_RCC_OscConfig+0x478>)
 8002fe6:	2201      	movs	r2, #1
 8002fe8:	601a      	str	r2, [r3, #0]
 8002fea:	f7fe fbad 	bl	8001748 <HAL_GetTick>
 8002fee:	6138      	str	r0, [r7, #16]
 8002ff0:	e008      	b.n	8003004 <HAL_RCC_OscConfig+0x428>
 8002ff2:	f7fe fba9 	bl	8001748 <HAL_GetTick>
 8002ff6:	4602      	mov	r2, r0
 8002ff8:	693b      	ldr	r3, [r7, #16]
 8002ffa:	1ad3      	subs	r3, r2, r3
 8002ffc:	2b02      	cmp	r3, #2
 8002ffe:	d901      	bls.n	8003004 <HAL_RCC_OscConfig+0x428>
 8003000:	2303      	movs	r3, #3
 8003002:	e05c      	b.n	80030be <HAL_RCC_OscConfig+0x4e2>
 8003004:	4b11      	ldr	r3, [pc, #68]	@ (800304c <HAL_RCC_OscConfig+0x470>)
 8003006:	681b      	ldr	r3, [r3, #0]
 8003008:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800300c:	2b00      	cmp	r3, #0
 800300e:	d0f0      	beq.n	8002ff2 <HAL_RCC_OscConfig+0x416>
 8003010:	e054      	b.n	80030bc <HAL_RCC_OscConfig+0x4e0>
 8003012:	4b10      	ldr	r3, [pc, #64]	@ (8003054 <HAL_RCC_OscConfig+0x478>)
 8003014:	2200      	movs	r2, #0
 8003016:	601a      	str	r2, [r3, #0]
 8003018:	f7fe fb96 	bl	8001748 <HAL_GetTick>
 800301c:	6138      	str	r0, [r7, #16]
 800301e:	e008      	b.n	8003032 <HAL_RCC_OscConfig+0x456>
 8003020:	f7fe fb92 	bl	8001748 <HAL_GetTick>
 8003024:	4602      	mov	r2, r0
 8003026:	693b      	ldr	r3, [r7, #16]
 8003028:	1ad3      	subs	r3, r2, r3
 800302a:	2b02      	cmp	r3, #2
 800302c:	d901      	bls.n	8003032 <HAL_RCC_OscConfig+0x456>
 800302e:	2303      	movs	r3, #3
 8003030:	e045      	b.n	80030be <HAL_RCC_OscConfig+0x4e2>
 8003032:	4b06      	ldr	r3, [pc, #24]	@ (800304c <HAL_RCC_OscConfig+0x470>)
 8003034:	681b      	ldr	r3, [r3, #0]
 8003036:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800303a:	2b00      	cmp	r3, #0
 800303c:	d1f0      	bne.n	8003020 <HAL_RCC_OscConfig+0x444>
 800303e:	e03d      	b.n	80030bc <HAL_RCC_OscConfig+0x4e0>
 8003040:	687b      	ldr	r3, [r7, #4]
 8003042:	699b      	ldr	r3, [r3, #24]
 8003044:	2b01      	cmp	r3, #1
 8003046:	d107      	bne.n	8003058 <HAL_RCC_OscConfig+0x47c>
 8003048:	2301      	movs	r3, #1
 800304a:	e038      	b.n	80030be <HAL_RCC_OscConfig+0x4e2>
 800304c:	40023800 	.word	0x40023800
 8003050:	40007000 	.word	0x40007000
 8003054:	42470060 	.word	0x42470060
 8003058:	4b1b      	ldr	r3, [pc, #108]	@ (80030c8 <HAL_RCC_OscConfig+0x4ec>)
 800305a:	685b      	ldr	r3, [r3, #4]
 800305c:	60fb      	str	r3, [r7, #12]
 800305e:	687b      	ldr	r3, [r7, #4]
 8003060:	699b      	ldr	r3, [r3, #24]
 8003062:	2b01      	cmp	r3, #1
 8003064:	d028      	beq.n	80030b8 <HAL_RCC_OscConfig+0x4dc>
 8003066:	68fb      	ldr	r3, [r7, #12]
 8003068:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 800306c:	687b      	ldr	r3, [r7, #4]
 800306e:	69db      	ldr	r3, [r3, #28]
 8003070:	429a      	cmp	r2, r3
 8003072:	d121      	bne.n	80030b8 <HAL_RCC_OscConfig+0x4dc>
 8003074:	68fb      	ldr	r3, [r7, #12]
 8003076:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 800307a:	687b      	ldr	r3, [r7, #4]
 800307c:	6a1b      	ldr	r3, [r3, #32]
 800307e:	429a      	cmp	r2, r3
 8003080:	d11a      	bne.n	80030b8 <HAL_RCC_OscConfig+0x4dc>
 8003082:	68fa      	ldr	r2, [r7, #12]
 8003084:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8003088:	4013      	ands	r3, r2
 800308a:	687a      	ldr	r2, [r7, #4]
 800308c:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 800308e:	0192      	lsls	r2, r2, #6
 8003090:	4293      	cmp	r3, r2
 8003092:	d111      	bne.n	80030b8 <HAL_RCC_OscConfig+0x4dc>
 8003094:	68fb      	ldr	r3, [r7, #12]
 8003096:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 800309a:	687b      	ldr	r3, [r7, #4]
 800309c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800309e:	085b      	lsrs	r3, r3, #1
 80030a0:	3b01      	subs	r3, #1
 80030a2:	041b      	lsls	r3, r3, #16
 80030a4:	429a      	cmp	r2, r3
 80030a6:	d107      	bne.n	80030b8 <HAL_RCC_OscConfig+0x4dc>
 80030a8:	68fb      	ldr	r3, [r7, #12]
 80030aa:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 80030ae:	687b      	ldr	r3, [r7, #4]
 80030b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80030b2:	061b      	lsls	r3, r3, #24
 80030b4:	429a      	cmp	r2, r3
 80030b6:	d001      	beq.n	80030bc <HAL_RCC_OscConfig+0x4e0>
 80030b8:	2301      	movs	r3, #1
 80030ba:	e000      	b.n	80030be <HAL_RCC_OscConfig+0x4e2>
 80030bc:	2300      	movs	r3, #0
 80030be:	4618      	mov	r0, r3
 80030c0:	3718      	adds	r7, #24
 80030c2:	46bd      	mov	sp, r7
 80030c4:	bd80      	pop	{r7, pc}
 80030c6:	bf00      	nop
 80030c8:	40023800 	.word	0x40023800

080030cc <HAL_RCC_ClockConfig>:
 80030cc:	b580      	push	{r7, lr}
 80030ce:	b084      	sub	sp, #16
 80030d0:	af00      	add	r7, sp, #0
 80030d2:	6078      	str	r0, [r7, #4]
 80030d4:	6039      	str	r1, [r7, #0]
 80030d6:	687b      	ldr	r3, [r7, #4]
 80030d8:	2b00      	cmp	r3, #0
 80030da:	d101      	bne.n	80030e0 <HAL_RCC_ClockConfig+0x14>
 80030dc:	2301      	movs	r3, #1
 80030de:	e0cc      	b.n	800327a <HAL_RCC_ClockConfig+0x1ae>
 80030e0:	4b68      	ldr	r3, [pc, #416]	@ (8003284 <HAL_RCC_ClockConfig+0x1b8>)
 80030e2:	681b      	ldr	r3, [r3, #0]
 80030e4:	f003 0307 	and.w	r3, r3, #7
 80030e8:	683a      	ldr	r2, [r7, #0]
 80030ea:	429a      	cmp	r2, r3
 80030ec:	d90c      	bls.n	8003108 <HAL_RCC_ClockConfig+0x3c>
 80030ee:	4b65      	ldr	r3, [pc, #404]	@ (8003284 <HAL_RCC_ClockConfig+0x1b8>)
 80030f0:	683a      	ldr	r2, [r7, #0]
 80030f2:	b2d2      	uxtb	r2, r2
 80030f4:	701a      	strb	r2, [r3, #0]
 80030f6:	4b63      	ldr	r3, [pc, #396]	@ (8003284 <HAL_RCC_ClockConfig+0x1b8>)
 80030f8:	681b      	ldr	r3, [r3, #0]
 80030fa:	f003 0307 	and.w	r3, r3, #7
 80030fe:	683a      	ldr	r2, [r7, #0]
 8003100:	429a      	cmp	r2, r3
 8003102:	d001      	beq.n	8003108 <HAL_RCC_ClockConfig+0x3c>
 8003104:	2301      	movs	r3, #1
 8003106:	e0b8      	b.n	800327a <HAL_RCC_ClockConfig+0x1ae>
 8003108:	687b      	ldr	r3, [r7, #4]
 800310a:	681b      	ldr	r3, [r3, #0]
 800310c:	f003 0302 	and.w	r3, r3, #2
 8003110:	2b00      	cmp	r3, #0
 8003112:	d020      	beq.n	8003156 <HAL_RCC_ClockConfig+0x8a>
 8003114:	687b      	ldr	r3, [r7, #4]
 8003116:	681b      	ldr	r3, [r3, #0]
 8003118:	f003 0304 	and.w	r3, r3, #4
 800311c:	2b00      	cmp	r3, #0
 800311e:	d005      	beq.n	800312c <HAL_RCC_ClockConfig+0x60>
 8003120:	4b59      	ldr	r3, [pc, #356]	@ (8003288 <HAL_RCC_ClockConfig+0x1bc>)
 8003122:	689b      	ldr	r3, [r3, #8]
 8003124:	4a58      	ldr	r2, [pc, #352]	@ (8003288 <HAL_RCC_ClockConfig+0x1bc>)
 8003126:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 800312a:	6093      	str	r3, [r2, #8]
 800312c:	687b      	ldr	r3, [r7, #4]
 800312e:	681b      	ldr	r3, [r3, #0]
 8003130:	f003 0308 	and.w	r3, r3, #8
 8003134:	2b00      	cmp	r3, #0
 8003136:	d005      	beq.n	8003144 <HAL_RCC_ClockConfig+0x78>
 8003138:	4b53      	ldr	r3, [pc, #332]	@ (8003288 <HAL_RCC_ClockConfig+0x1bc>)
 800313a:	689b      	ldr	r3, [r3, #8]
 800313c:	4a52      	ldr	r2, [pc, #328]	@ (8003288 <HAL_RCC_ClockConfig+0x1bc>)
 800313e:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 8003142:	6093      	str	r3, [r2, #8]
 8003144:	4b50      	ldr	r3, [pc, #320]	@ (8003288 <HAL_RCC_ClockConfig+0x1bc>)
 8003146:	689b      	ldr	r3, [r3, #8]
 8003148:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 800314c:	687b      	ldr	r3, [r7, #4]
 800314e:	689b      	ldr	r3, [r3, #8]
 8003150:	494d      	ldr	r1, [pc, #308]	@ (8003288 <HAL_RCC_ClockConfig+0x1bc>)
 8003152:	4313      	orrs	r3, r2
 8003154:	608b      	str	r3, [r1, #8]
 8003156:	687b      	ldr	r3, [r7, #4]
 8003158:	681b      	ldr	r3, [r3, #0]
 800315a:	f003 0301 	and.w	r3, r3, #1
 800315e:	2b00      	cmp	r3, #0
 8003160:	d044      	beq.n	80031ec <HAL_RCC_ClockConfig+0x120>
 8003162:	687b      	ldr	r3, [r7, #4]
 8003164:	685b      	ldr	r3, [r3, #4]
 8003166:	2b01      	cmp	r3, #1
 8003168:	d107      	bne.n	800317a <HAL_RCC_ClockConfig+0xae>
 800316a:	4b47      	ldr	r3, [pc, #284]	@ (8003288 <HAL_RCC_ClockConfig+0x1bc>)
 800316c:	681b      	ldr	r3, [r3, #0]
 800316e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003172:	2b00      	cmp	r3, #0
 8003174:	d119      	bne.n	80031aa <HAL_RCC_ClockConfig+0xde>
 8003176:	2301      	movs	r3, #1
 8003178:	e07f      	b.n	800327a <HAL_RCC_ClockConfig+0x1ae>
 800317a:	687b      	ldr	r3, [r7, #4]
 800317c:	685b      	ldr	r3, [r3, #4]
 800317e:	2b02      	cmp	r3, #2
 8003180:	d003      	beq.n	800318a <HAL_RCC_ClockConfig+0xbe>
 8003182:	687b      	ldr	r3, [r7, #4]
 8003184:	685b      	ldr	r3, [r3, #4]
 8003186:	2b03      	cmp	r3, #3
 8003188:	d107      	bne.n	800319a <HAL_RCC_ClockConfig+0xce>
 800318a:	4b3f      	ldr	r3, [pc, #252]	@ (8003288 <HAL_RCC_ClockConfig+0x1bc>)
 800318c:	681b      	ldr	r3, [r3, #0]
 800318e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003192:	2b00      	cmp	r3, #0
 8003194:	d109      	bne.n	80031aa <HAL_RCC_ClockConfig+0xde>
 8003196:	2301      	movs	r3, #1
 8003198:	e06f      	b.n	800327a <HAL_RCC_ClockConfig+0x1ae>
 800319a:	4b3b      	ldr	r3, [pc, #236]	@ (8003288 <HAL_RCC_ClockConfig+0x1bc>)
 800319c:	681b      	ldr	r3, [r3, #0]
 800319e:	f003 0302 	and.w	r3, r3, #2
 80031a2:	2b00      	cmp	r3, #0
 80031a4:	d101      	bne.n	80031aa <HAL_RCC_ClockConfig+0xde>
 80031a6:	2301      	movs	r3, #1
 80031a8:	e067      	b.n	800327a <HAL_RCC_ClockConfig+0x1ae>
 80031aa:	4b37      	ldr	r3, [pc, #220]	@ (8003288 <HAL_RCC_ClockConfig+0x1bc>)
 80031ac:	689b      	ldr	r3, [r3, #8]
 80031ae:	f023 0203 	bic.w	r2, r3, #3
 80031b2:	687b      	ldr	r3, [r7, #4]
 80031b4:	685b      	ldr	r3, [r3, #4]
 80031b6:	4934      	ldr	r1, [pc, #208]	@ (8003288 <HAL_RCC_ClockConfig+0x1bc>)
 80031b8:	4313      	orrs	r3, r2
 80031ba:	608b      	str	r3, [r1, #8]
 80031bc:	f7fe fac4 	bl	8001748 <HAL_GetTick>
 80031c0:	60f8      	str	r0, [r7, #12]
 80031c2:	e00a      	b.n	80031da <HAL_RCC_ClockConfig+0x10e>
 80031c4:	f7fe fac0 	bl	8001748 <HAL_GetTick>
 80031c8:	4602      	mov	r2, r0
 80031ca:	68fb      	ldr	r3, [r7, #12]
 80031cc:	1ad3      	subs	r3, r2, r3
 80031ce:	f241 3288 	movw	r2, #5000	@ 0x1388
 80031d2:	4293      	cmp	r3, r2
 80031d4:	d901      	bls.n	80031da <HAL_RCC_ClockConfig+0x10e>
 80031d6:	2303      	movs	r3, #3
 80031d8:	e04f      	b.n	800327a <HAL_RCC_ClockConfig+0x1ae>
 80031da:	4b2b      	ldr	r3, [pc, #172]	@ (8003288 <HAL_RCC_ClockConfig+0x1bc>)
 80031dc:	689b      	ldr	r3, [r3, #8]
 80031de:	f003 020c 	and.w	r2, r3, #12
 80031e2:	687b      	ldr	r3, [r7, #4]
 80031e4:	685b      	ldr	r3, [r3, #4]
 80031e6:	009b      	lsls	r3, r3, #2
 80031e8:	429a      	cmp	r2, r3
 80031ea:	d1eb      	bne.n	80031c4 <HAL_RCC_ClockConfig+0xf8>
 80031ec:	4b25      	ldr	r3, [pc, #148]	@ (8003284 <HAL_RCC_ClockConfig+0x1b8>)
 80031ee:	681b      	ldr	r3, [r3, #0]
 80031f0:	f003 0307 	and.w	r3, r3, #7
 80031f4:	683a      	ldr	r2, [r7, #0]
 80031f6:	429a      	cmp	r2, r3
 80031f8:	d20c      	bcs.n	8003214 <HAL_RCC_ClockConfig+0x148>
 80031fa:	4b22      	ldr	r3, [pc, #136]	@ (8003284 <HAL_RCC_ClockConfig+0x1b8>)
 80031fc:	683a      	ldr	r2, [r7, #0]
 80031fe:	b2d2      	uxtb	r2, r2
 8003200:	701a      	strb	r2, [r3, #0]
 8003202:	4b20      	ldr	r3, [pc, #128]	@ (8003284 <HAL_RCC_ClockConfig+0x1b8>)
 8003204:	681b      	ldr	r3, [r3, #0]
 8003206:	f003 0307 	and.w	r3, r3, #7
 800320a:	683a      	ldr	r2, [r7, #0]
 800320c:	429a      	cmp	r2, r3
 800320e:	d001      	beq.n	8003214 <HAL_RCC_ClockConfig+0x148>
 8003210:	2301      	movs	r3, #1
 8003212:	e032      	b.n	800327a <HAL_RCC_ClockConfig+0x1ae>
 8003214:	687b      	ldr	r3, [r7, #4]
 8003216:	681b      	ldr	r3, [r3, #0]
 8003218:	f003 0304 	and.w	r3, r3, #4
 800321c:	2b00      	cmp	r3, #0
 800321e:	d008      	beq.n	8003232 <HAL_RCC_ClockConfig+0x166>
 8003220:	4b19      	ldr	r3, [pc, #100]	@ (8003288 <HAL_RCC_ClockConfig+0x1bc>)
 8003222:	689b      	ldr	r3, [r3, #8]
 8003224:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8003228:	687b      	ldr	r3, [r7, #4]
 800322a:	68db      	ldr	r3, [r3, #12]
 800322c:	4916      	ldr	r1, [pc, #88]	@ (8003288 <HAL_RCC_ClockConfig+0x1bc>)
 800322e:	4313      	orrs	r3, r2
 8003230:	608b      	str	r3, [r1, #8]
 8003232:	687b      	ldr	r3, [r7, #4]
 8003234:	681b      	ldr	r3, [r3, #0]
 8003236:	f003 0308 	and.w	r3, r3, #8
 800323a:	2b00      	cmp	r3, #0
 800323c:	d009      	beq.n	8003252 <HAL_RCC_ClockConfig+0x186>
 800323e:	4b12      	ldr	r3, [pc, #72]	@ (8003288 <HAL_RCC_ClockConfig+0x1bc>)
 8003240:	689b      	ldr	r3, [r3, #8]
 8003242:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8003246:	687b      	ldr	r3, [r7, #4]
 8003248:	691b      	ldr	r3, [r3, #16]
 800324a:	00db      	lsls	r3, r3, #3
 800324c:	490e      	ldr	r1, [pc, #56]	@ (8003288 <HAL_RCC_ClockConfig+0x1bc>)
 800324e:	4313      	orrs	r3, r2
 8003250:	608b      	str	r3, [r1, #8]
 8003252:	f000 f821 	bl	8003298 <HAL_RCC_GetSysClockFreq>
 8003256:	4602      	mov	r2, r0
 8003258:	4b0b      	ldr	r3, [pc, #44]	@ (8003288 <HAL_RCC_ClockConfig+0x1bc>)
 800325a:	689b      	ldr	r3, [r3, #8]
 800325c:	091b      	lsrs	r3, r3, #4
 800325e:	f003 030f 	and.w	r3, r3, #15
 8003262:	490a      	ldr	r1, [pc, #40]	@ (800328c <HAL_RCC_ClockConfig+0x1c0>)
 8003264:	5ccb      	ldrb	r3, [r1, r3]
 8003266:	fa22 f303 	lsr.w	r3, r2, r3
 800326a:	4a09      	ldr	r2, [pc, #36]	@ (8003290 <HAL_RCC_ClockConfig+0x1c4>)
 800326c:	6013      	str	r3, [r2, #0]
 800326e:	4b09      	ldr	r3, [pc, #36]	@ (8003294 <HAL_RCC_ClockConfig+0x1c8>)
 8003270:	681b      	ldr	r3, [r3, #0]
 8003272:	4618      	mov	r0, r3
 8003274:	f7fe f914 	bl	80014a0 <HAL_InitTick>
 8003278:	2300      	movs	r3, #0
 800327a:	4618      	mov	r0, r3
 800327c:	3710      	adds	r7, #16
 800327e:	46bd      	mov	sp, r7
 8003280:	bd80      	pop	{r7, pc}
 8003282:	bf00      	nop
 8003284:	40023c00 	.word	0x40023c00
 8003288:	40023800 	.word	0x40023800
 800328c:	080082c8 	.word	0x080082c8
 8003290:	20000020 	.word	0x20000020
 8003294:	20000024 	.word	0x20000024

08003298 <HAL_RCC_GetSysClockFreq>:
 8003298:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800329c:	b090      	sub	sp, #64	@ 0x40
 800329e:	af00      	add	r7, sp, #0
 80032a0:	2300      	movs	r3, #0
 80032a2:	637b      	str	r3, [r7, #52]	@ 0x34
 80032a4:	2300      	movs	r3, #0
 80032a6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80032a8:	2300      	movs	r3, #0
 80032aa:	633b      	str	r3, [r7, #48]	@ 0x30
 80032ac:	2300      	movs	r3, #0
 80032ae:	63bb      	str	r3, [r7, #56]	@ 0x38
 80032b0:	4b59      	ldr	r3, [pc, #356]	@ (8003418 <HAL_RCC_GetSysClockFreq+0x180>)
 80032b2:	689b      	ldr	r3, [r3, #8]
 80032b4:	f003 030c 	and.w	r3, r3, #12
 80032b8:	2b08      	cmp	r3, #8
 80032ba:	d00d      	beq.n	80032d8 <HAL_RCC_GetSysClockFreq+0x40>
 80032bc:	2b08      	cmp	r3, #8
 80032be:	f200 80a1 	bhi.w	8003404 <HAL_RCC_GetSysClockFreq+0x16c>
 80032c2:	2b00      	cmp	r3, #0
 80032c4:	d002      	beq.n	80032cc <HAL_RCC_GetSysClockFreq+0x34>
 80032c6:	2b04      	cmp	r3, #4
 80032c8:	d003      	beq.n	80032d2 <HAL_RCC_GetSysClockFreq+0x3a>
 80032ca:	e09b      	b.n	8003404 <HAL_RCC_GetSysClockFreq+0x16c>
 80032cc:	4b53      	ldr	r3, [pc, #332]	@ (800341c <HAL_RCC_GetSysClockFreq+0x184>)
 80032ce:	63bb      	str	r3, [r7, #56]	@ 0x38
 80032d0:	e09b      	b.n	800340a <HAL_RCC_GetSysClockFreq+0x172>
 80032d2:	4b53      	ldr	r3, [pc, #332]	@ (8003420 <HAL_RCC_GetSysClockFreq+0x188>)
 80032d4:	63bb      	str	r3, [r7, #56]	@ 0x38
 80032d6:	e098      	b.n	800340a <HAL_RCC_GetSysClockFreq+0x172>
 80032d8:	4b4f      	ldr	r3, [pc, #316]	@ (8003418 <HAL_RCC_GetSysClockFreq+0x180>)
 80032da:	685b      	ldr	r3, [r3, #4]
 80032dc:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80032e0:	637b      	str	r3, [r7, #52]	@ 0x34
 80032e2:	4b4d      	ldr	r3, [pc, #308]	@ (8003418 <HAL_RCC_GetSysClockFreq+0x180>)
 80032e4:	685b      	ldr	r3, [r3, #4]
 80032e6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80032ea:	2b00      	cmp	r3, #0
 80032ec:	d028      	beq.n	8003340 <HAL_RCC_GetSysClockFreq+0xa8>
 80032ee:	4b4a      	ldr	r3, [pc, #296]	@ (8003418 <HAL_RCC_GetSysClockFreq+0x180>)
 80032f0:	685b      	ldr	r3, [r3, #4]
 80032f2:	099b      	lsrs	r3, r3, #6
 80032f4:	2200      	movs	r2, #0
 80032f6:	623b      	str	r3, [r7, #32]
 80032f8:	627a      	str	r2, [r7, #36]	@ 0x24
 80032fa:	6a3b      	ldr	r3, [r7, #32]
 80032fc:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8003300:	2100      	movs	r1, #0
 8003302:	4b47      	ldr	r3, [pc, #284]	@ (8003420 <HAL_RCC_GetSysClockFreq+0x188>)
 8003304:	fb03 f201 	mul.w	r2, r3, r1
 8003308:	2300      	movs	r3, #0
 800330a:	fb00 f303 	mul.w	r3, r0, r3
 800330e:	4413      	add	r3, r2
 8003310:	4a43      	ldr	r2, [pc, #268]	@ (8003420 <HAL_RCC_GetSysClockFreq+0x188>)
 8003312:	fba0 1202 	umull	r1, r2, r0, r2
 8003316:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8003318:	460a      	mov	r2, r1
 800331a:	62ba      	str	r2, [r7, #40]	@ 0x28
 800331c:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800331e:	4413      	add	r3, r2
 8003320:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003322:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003324:	2200      	movs	r2, #0
 8003326:	61bb      	str	r3, [r7, #24]
 8003328:	61fa      	str	r2, [r7, #28]
 800332a:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800332e:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 8003332:	f7fc ffa5 	bl	8000280 <__aeabi_uldivmod>
 8003336:	4602      	mov	r2, r0
 8003338:	460b      	mov	r3, r1
 800333a:	4613      	mov	r3, r2
 800333c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800333e:	e053      	b.n	80033e8 <HAL_RCC_GetSysClockFreq+0x150>
 8003340:	4b35      	ldr	r3, [pc, #212]	@ (8003418 <HAL_RCC_GetSysClockFreq+0x180>)
 8003342:	685b      	ldr	r3, [r3, #4]
 8003344:	099b      	lsrs	r3, r3, #6
 8003346:	2200      	movs	r2, #0
 8003348:	613b      	str	r3, [r7, #16]
 800334a:	617a      	str	r2, [r7, #20]
 800334c:	693b      	ldr	r3, [r7, #16]
 800334e:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 8003352:	f04f 0b00 	mov.w	fp, #0
 8003356:	4652      	mov	r2, sl
 8003358:	465b      	mov	r3, fp
 800335a:	f04f 0000 	mov.w	r0, #0
 800335e:	f04f 0100 	mov.w	r1, #0
 8003362:	0159      	lsls	r1, r3, #5
 8003364:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8003368:	0150      	lsls	r0, r2, #5
 800336a:	4602      	mov	r2, r0
 800336c:	460b      	mov	r3, r1
 800336e:	ebb2 080a 	subs.w	r8, r2, sl
 8003372:	eb63 090b 	sbc.w	r9, r3, fp
 8003376:	f04f 0200 	mov.w	r2, #0
 800337a:	f04f 0300 	mov.w	r3, #0
 800337e:	ea4f 1389 	mov.w	r3, r9, lsl #6
 8003382:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 8003386:	ea4f 1288 	mov.w	r2, r8, lsl #6
 800338a:	ebb2 0408 	subs.w	r4, r2, r8
 800338e:	eb63 0509 	sbc.w	r5, r3, r9
 8003392:	f04f 0200 	mov.w	r2, #0
 8003396:	f04f 0300 	mov.w	r3, #0
 800339a:	00eb      	lsls	r3, r5, #3
 800339c:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80033a0:	00e2      	lsls	r2, r4, #3
 80033a2:	4614      	mov	r4, r2
 80033a4:	461d      	mov	r5, r3
 80033a6:	eb14 030a 	adds.w	r3, r4, sl
 80033aa:	603b      	str	r3, [r7, #0]
 80033ac:	eb45 030b 	adc.w	r3, r5, fp
 80033b0:	607b      	str	r3, [r7, #4]
 80033b2:	f04f 0200 	mov.w	r2, #0
 80033b6:	f04f 0300 	mov.w	r3, #0
 80033ba:	e9d7 4500 	ldrd	r4, r5, [r7]
 80033be:	4629      	mov	r1, r5
 80033c0:	028b      	lsls	r3, r1, #10
 80033c2:	4621      	mov	r1, r4
 80033c4:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80033c8:	4621      	mov	r1, r4
 80033ca:	028a      	lsls	r2, r1, #10
 80033cc:	4610      	mov	r0, r2
 80033ce:	4619      	mov	r1, r3
 80033d0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80033d2:	2200      	movs	r2, #0
 80033d4:	60bb      	str	r3, [r7, #8]
 80033d6:	60fa      	str	r2, [r7, #12]
 80033d8:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80033dc:	f7fc ff50 	bl	8000280 <__aeabi_uldivmod>
 80033e0:	4602      	mov	r2, r0
 80033e2:	460b      	mov	r3, r1
 80033e4:	4613      	mov	r3, r2
 80033e6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80033e8:	4b0b      	ldr	r3, [pc, #44]	@ (8003418 <HAL_RCC_GetSysClockFreq+0x180>)
 80033ea:	685b      	ldr	r3, [r3, #4]
 80033ec:	0c1b      	lsrs	r3, r3, #16
 80033ee:	f003 0303 	and.w	r3, r3, #3
 80033f2:	3301      	adds	r3, #1
 80033f4:	005b      	lsls	r3, r3, #1
 80033f6:	633b      	str	r3, [r7, #48]	@ 0x30
 80033f8:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 80033fa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80033fc:	fbb2 f3f3 	udiv	r3, r2, r3
 8003400:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003402:	e002      	b.n	800340a <HAL_RCC_GetSysClockFreq+0x172>
 8003404:	4b05      	ldr	r3, [pc, #20]	@ (800341c <HAL_RCC_GetSysClockFreq+0x184>)
 8003406:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003408:	bf00      	nop
 800340a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800340c:	4618      	mov	r0, r3
 800340e:	3740      	adds	r7, #64	@ 0x40
 8003410:	46bd      	mov	sp, r7
 8003412:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8003416:	bf00      	nop
 8003418:	40023800 	.word	0x40023800
 800341c:	00f42400 	.word	0x00f42400
 8003420:	017d7840 	.word	0x017d7840

08003424 <HAL_RCC_GetHCLKFreq>:
 8003424:	b480      	push	{r7}
 8003426:	af00      	add	r7, sp, #0
 8003428:	4b03      	ldr	r3, [pc, #12]	@ (8003438 <HAL_RCC_GetHCLKFreq+0x14>)
 800342a:	681b      	ldr	r3, [r3, #0]
 800342c:	4618      	mov	r0, r3
 800342e:	46bd      	mov	sp, r7
 8003430:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003434:	4770      	bx	lr
 8003436:	bf00      	nop
 8003438:	20000020 	.word	0x20000020

0800343c <HAL_RCC_GetPCLK1Freq>:
 800343c:	b580      	push	{r7, lr}
 800343e:	af00      	add	r7, sp, #0
 8003440:	f7ff fff0 	bl	8003424 <HAL_RCC_GetHCLKFreq>
 8003444:	4602      	mov	r2, r0
 8003446:	4b05      	ldr	r3, [pc, #20]	@ (800345c <HAL_RCC_GetPCLK1Freq+0x20>)
 8003448:	689b      	ldr	r3, [r3, #8]
 800344a:	0a9b      	lsrs	r3, r3, #10
 800344c:	f003 0307 	and.w	r3, r3, #7
 8003450:	4903      	ldr	r1, [pc, #12]	@ (8003460 <HAL_RCC_GetPCLK1Freq+0x24>)
 8003452:	5ccb      	ldrb	r3, [r1, r3]
 8003454:	fa22 f303 	lsr.w	r3, r2, r3
 8003458:	4618      	mov	r0, r3
 800345a:	bd80      	pop	{r7, pc}
 800345c:	40023800 	.word	0x40023800
 8003460:	080082d8 	.word	0x080082d8

08003464 <HAL_RCC_GetClockConfig>:
 8003464:	b480      	push	{r7}
 8003466:	b083      	sub	sp, #12
 8003468:	af00      	add	r7, sp, #0
 800346a:	6078      	str	r0, [r7, #4]
 800346c:	6039      	str	r1, [r7, #0]
 800346e:	687b      	ldr	r3, [r7, #4]
 8003470:	220f      	movs	r2, #15
 8003472:	601a      	str	r2, [r3, #0]
 8003474:	4b12      	ldr	r3, [pc, #72]	@ (80034c0 <HAL_RCC_GetClockConfig+0x5c>)
 8003476:	689b      	ldr	r3, [r3, #8]
 8003478:	f003 0203 	and.w	r2, r3, #3
 800347c:	687b      	ldr	r3, [r7, #4]
 800347e:	605a      	str	r2, [r3, #4]
 8003480:	4b0f      	ldr	r3, [pc, #60]	@ (80034c0 <HAL_RCC_GetClockConfig+0x5c>)
 8003482:	689b      	ldr	r3, [r3, #8]
 8003484:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 8003488:	687b      	ldr	r3, [r7, #4]
 800348a:	609a      	str	r2, [r3, #8]
 800348c:	4b0c      	ldr	r3, [pc, #48]	@ (80034c0 <HAL_RCC_GetClockConfig+0x5c>)
 800348e:	689b      	ldr	r3, [r3, #8]
 8003490:	f403 52e0 	and.w	r2, r3, #7168	@ 0x1c00
 8003494:	687b      	ldr	r3, [r7, #4]
 8003496:	60da      	str	r2, [r3, #12]
 8003498:	4b09      	ldr	r3, [pc, #36]	@ (80034c0 <HAL_RCC_GetClockConfig+0x5c>)
 800349a:	689b      	ldr	r3, [r3, #8]
 800349c:	08db      	lsrs	r3, r3, #3
 800349e:	f403 52e0 	and.w	r2, r3, #7168	@ 0x1c00
 80034a2:	687b      	ldr	r3, [r7, #4]
 80034a4:	611a      	str	r2, [r3, #16]
 80034a6:	4b07      	ldr	r3, [pc, #28]	@ (80034c4 <HAL_RCC_GetClockConfig+0x60>)
 80034a8:	681b      	ldr	r3, [r3, #0]
 80034aa:	f003 0207 	and.w	r2, r3, #7
 80034ae:	683b      	ldr	r3, [r7, #0]
 80034b0:	601a      	str	r2, [r3, #0]
 80034b2:	bf00      	nop
 80034b4:	370c      	adds	r7, #12
 80034b6:	46bd      	mov	sp, r7
 80034b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034bc:	4770      	bx	lr
 80034be:	bf00      	nop
 80034c0:	40023800 	.word	0x40023800
 80034c4:	40023c00 	.word	0x40023c00

080034c8 <HAL_SPI_Init>:
 80034c8:	b580      	push	{r7, lr}
 80034ca:	b082      	sub	sp, #8
 80034cc:	af00      	add	r7, sp, #0
 80034ce:	6078      	str	r0, [r7, #4]
 80034d0:	687b      	ldr	r3, [r7, #4]
 80034d2:	2b00      	cmp	r3, #0
 80034d4:	d101      	bne.n	80034da <HAL_SPI_Init+0x12>
 80034d6:	2301      	movs	r3, #1
 80034d8:	e07b      	b.n	80035d2 <HAL_SPI_Init+0x10a>
 80034da:	687b      	ldr	r3, [r7, #4]
 80034dc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80034de:	2b00      	cmp	r3, #0
 80034e0:	d108      	bne.n	80034f4 <HAL_SPI_Init+0x2c>
 80034e2:	687b      	ldr	r3, [r7, #4]
 80034e4:	685b      	ldr	r3, [r3, #4]
 80034e6:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80034ea:	d009      	beq.n	8003500 <HAL_SPI_Init+0x38>
 80034ec:	687b      	ldr	r3, [r7, #4]
 80034ee:	2200      	movs	r2, #0
 80034f0:	61da      	str	r2, [r3, #28]
 80034f2:	e005      	b.n	8003500 <HAL_SPI_Init+0x38>
 80034f4:	687b      	ldr	r3, [r7, #4]
 80034f6:	2200      	movs	r2, #0
 80034f8:	611a      	str	r2, [r3, #16]
 80034fa:	687b      	ldr	r3, [r7, #4]
 80034fc:	2200      	movs	r2, #0
 80034fe:	615a      	str	r2, [r3, #20]
 8003500:	687b      	ldr	r3, [r7, #4]
 8003502:	2200      	movs	r2, #0
 8003504:	629a      	str	r2, [r3, #40]	@ 0x28
 8003506:	687b      	ldr	r3, [r7, #4]
 8003508:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 800350c:	b2db      	uxtb	r3, r3
 800350e:	2b00      	cmp	r3, #0
 8003510:	d106      	bne.n	8003520 <HAL_SPI_Init+0x58>
 8003512:	687b      	ldr	r3, [r7, #4]
 8003514:	2200      	movs	r2, #0
 8003516:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800351a:	6878      	ldr	r0, [r7, #4]
 800351c:	f7fd ff78 	bl	8001410 <HAL_SPI_MspInit>
 8003520:	687b      	ldr	r3, [r7, #4]
 8003522:	2202      	movs	r2, #2
 8003524:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8003528:	687b      	ldr	r3, [r7, #4]
 800352a:	681b      	ldr	r3, [r3, #0]
 800352c:	681a      	ldr	r2, [r3, #0]
 800352e:	687b      	ldr	r3, [r7, #4]
 8003530:	681b      	ldr	r3, [r3, #0]
 8003532:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8003536:	601a      	str	r2, [r3, #0]
 8003538:	687b      	ldr	r3, [r7, #4]
 800353a:	685b      	ldr	r3, [r3, #4]
 800353c:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 8003540:	687b      	ldr	r3, [r7, #4]
 8003542:	689b      	ldr	r3, [r3, #8]
 8003544:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 8003548:	431a      	orrs	r2, r3
 800354a:	687b      	ldr	r3, [r7, #4]
 800354c:	68db      	ldr	r3, [r3, #12]
 800354e:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8003552:	431a      	orrs	r2, r3
 8003554:	687b      	ldr	r3, [r7, #4]
 8003556:	691b      	ldr	r3, [r3, #16]
 8003558:	f003 0302 	and.w	r3, r3, #2
 800355c:	431a      	orrs	r2, r3
 800355e:	687b      	ldr	r3, [r7, #4]
 8003560:	695b      	ldr	r3, [r3, #20]
 8003562:	f003 0301 	and.w	r3, r3, #1
 8003566:	431a      	orrs	r2, r3
 8003568:	687b      	ldr	r3, [r7, #4]
 800356a:	699b      	ldr	r3, [r3, #24]
 800356c:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8003570:	431a      	orrs	r2, r3
 8003572:	687b      	ldr	r3, [r7, #4]
 8003574:	69db      	ldr	r3, [r3, #28]
 8003576:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 800357a:	431a      	orrs	r2, r3
 800357c:	687b      	ldr	r3, [r7, #4]
 800357e:	6a1b      	ldr	r3, [r3, #32]
 8003580:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003584:	ea42 0103 	orr.w	r1, r2, r3
 8003588:	687b      	ldr	r3, [r7, #4]
 800358a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800358c:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 8003590:	687b      	ldr	r3, [r7, #4]
 8003592:	681b      	ldr	r3, [r3, #0]
 8003594:	430a      	orrs	r2, r1
 8003596:	601a      	str	r2, [r3, #0]
 8003598:	687b      	ldr	r3, [r7, #4]
 800359a:	699b      	ldr	r3, [r3, #24]
 800359c:	0c1b      	lsrs	r3, r3, #16
 800359e:	f003 0104 	and.w	r1, r3, #4
 80035a2:	687b      	ldr	r3, [r7, #4]
 80035a4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80035a6:	f003 0210 	and.w	r2, r3, #16
 80035aa:	687b      	ldr	r3, [r7, #4]
 80035ac:	681b      	ldr	r3, [r3, #0]
 80035ae:	430a      	orrs	r2, r1
 80035b0:	605a      	str	r2, [r3, #4]
 80035b2:	687b      	ldr	r3, [r7, #4]
 80035b4:	681b      	ldr	r3, [r3, #0]
 80035b6:	69da      	ldr	r2, [r3, #28]
 80035b8:	687b      	ldr	r3, [r7, #4]
 80035ba:	681b      	ldr	r3, [r3, #0]
 80035bc:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80035c0:	61da      	str	r2, [r3, #28]
 80035c2:	687b      	ldr	r3, [r7, #4]
 80035c4:	2200      	movs	r2, #0
 80035c6:	655a      	str	r2, [r3, #84]	@ 0x54
 80035c8:	687b      	ldr	r3, [r7, #4]
 80035ca:	2201      	movs	r2, #1
 80035cc:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80035d0:	2300      	movs	r3, #0
 80035d2:	4618      	mov	r0, r3
 80035d4:	3708      	adds	r7, #8
 80035d6:	46bd      	mov	sp, r7
 80035d8:	bd80      	pop	{r7, pc}

080035da <HAL_SPI_Transmit>:
 80035da:	b580      	push	{r7, lr}
 80035dc:	b088      	sub	sp, #32
 80035de:	af00      	add	r7, sp, #0
 80035e0:	60f8      	str	r0, [r7, #12]
 80035e2:	60b9      	str	r1, [r7, #8]
 80035e4:	603b      	str	r3, [r7, #0]
 80035e6:	4613      	mov	r3, r2
 80035e8:	80fb      	strh	r3, [r7, #6]
 80035ea:	2300      	movs	r3, #0
 80035ec:	77fb      	strb	r3, [r7, #31]
 80035ee:	68fb      	ldr	r3, [r7, #12]
 80035f0:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 80035f4:	2b01      	cmp	r3, #1
 80035f6:	d101      	bne.n	80035fc <HAL_SPI_Transmit+0x22>
 80035f8:	2302      	movs	r3, #2
 80035fa:	e12d      	b.n	8003858 <HAL_SPI_Transmit+0x27e>
 80035fc:	68fb      	ldr	r3, [r7, #12]
 80035fe:	2201      	movs	r2, #1
 8003600:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8003604:	f7fe f8a0 	bl	8001748 <HAL_GetTick>
 8003608:	61b8      	str	r0, [r7, #24]
 800360a:	88fb      	ldrh	r3, [r7, #6]
 800360c:	82fb      	strh	r3, [r7, #22]
 800360e:	68fb      	ldr	r3, [r7, #12]
 8003610:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8003614:	b2db      	uxtb	r3, r3
 8003616:	2b01      	cmp	r3, #1
 8003618:	d002      	beq.n	8003620 <HAL_SPI_Transmit+0x46>
 800361a:	2302      	movs	r3, #2
 800361c:	77fb      	strb	r3, [r7, #31]
 800361e:	e116      	b.n	800384e <HAL_SPI_Transmit+0x274>
 8003620:	68bb      	ldr	r3, [r7, #8]
 8003622:	2b00      	cmp	r3, #0
 8003624:	d002      	beq.n	800362c <HAL_SPI_Transmit+0x52>
 8003626:	88fb      	ldrh	r3, [r7, #6]
 8003628:	2b00      	cmp	r3, #0
 800362a:	d102      	bne.n	8003632 <HAL_SPI_Transmit+0x58>
 800362c:	2301      	movs	r3, #1
 800362e:	77fb      	strb	r3, [r7, #31]
 8003630:	e10d      	b.n	800384e <HAL_SPI_Transmit+0x274>
 8003632:	68fb      	ldr	r3, [r7, #12]
 8003634:	2203      	movs	r2, #3
 8003636:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 800363a:	68fb      	ldr	r3, [r7, #12]
 800363c:	2200      	movs	r2, #0
 800363e:	655a      	str	r2, [r3, #84]	@ 0x54
 8003640:	68fb      	ldr	r3, [r7, #12]
 8003642:	68ba      	ldr	r2, [r7, #8]
 8003644:	631a      	str	r2, [r3, #48]	@ 0x30
 8003646:	68fb      	ldr	r3, [r7, #12]
 8003648:	88fa      	ldrh	r2, [r7, #6]
 800364a:	869a      	strh	r2, [r3, #52]	@ 0x34
 800364c:	68fb      	ldr	r3, [r7, #12]
 800364e:	88fa      	ldrh	r2, [r7, #6]
 8003650:	86da      	strh	r2, [r3, #54]	@ 0x36
 8003652:	68fb      	ldr	r3, [r7, #12]
 8003654:	2200      	movs	r2, #0
 8003656:	639a      	str	r2, [r3, #56]	@ 0x38
 8003658:	68fb      	ldr	r3, [r7, #12]
 800365a:	2200      	movs	r2, #0
 800365c:	879a      	strh	r2, [r3, #60]	@ 0x3c
 800365e:	68fb      	ldr	r3, [r7, #12]
 8003660:	2200      	movs	r2, #0
 8003662:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8003664:	68fb      	ldr	r3, [r7, #12]
 8003666:	2200      	movs	r2, #0
 8003668:	645a      	str	r2, [r3, #68]	@ 0x44
 800366a:	68fb      	ldr	r3, [r7, #12]
 800366c:	2200      	movs	r2, #0
 800366e:	641a      	str	r2, [r3, #64]	@ 0x40
 8003670:	68fb      	ldr	r3, [r7, #12]
 8003672:	689b      	ldr	r3, [r3, #8]
 8003674:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8003678:	d10f      	bne.n	800369a <HAL_SPI_Transmit+0xc0>
 800367a:	68fb      	ldr	r3, [r7, #12]
 800367c:	681b      	ldr	r3, [r3, #0]
 800367e:	681a      	ldr	r2, [r3, #0]
 8003680:	68fb      	ldr	r3, [r7, #12]
 8003682:	681b      	ldr	r3, [r3, #0]
 8003684:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8003688:	601a      	str	r2, [r3, #0]
 800368a:	68fb      	ldr	r3, [r7, #12]
 800368c:	681b      	ldr	r3, [r3, #0]
 800368e:	681a      	ldr	r2, [r3, #0]
 8003690:	68fb      	ldr	r3, [r7, #12]
 8003692:	681b      	ldr	r3, [r3, #0]
 8003694:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8003698:	601a      	str	r2, [r3, #0]
 800369a:	68fb      	ldr	r3, [r7, #12]
 800369c:	681b      	ldr	r3, [r3, #0]
 800369e:	681b      	ldr	r3, [r3, #0]
 80036a0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80036a4:	2b40      	cmp	r3, #64	@ 0x40
 80036a6:	d007      	beq.n	80036b8 <HAL_SPI_Transmit+0xde>
 80036a8:	68fb      	ldr	r3, [r7, #12]
 80036aa:	681b      	ldr	r3, [r3, #0]
 80036ac:	681a      	ldr	r2, [r3, #0]
 80036ae:	68fb      	ldr	r3, [r7, #12]
 80036b0:	681b      	ldr	r3, [r3, #0]
 80036b2:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80036b6:	601a      	str	r2, [r3, #0]
 80036b8:	68fb      	ldr	r3, [r7, #12]
 80036ba:	68db      	ldr	r3, [r3, #12]
 80036bc:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80036c0:	d14f      	bne.n	8003762 <HAL_SPI_Transmit+0x188>
 80036c2:	68fb      	ldr	r3, [r7, #12]
 80036c4:	685b      	ldr	r3, [r3, #4]
 80036c6:	2b00      	cmp	r3, #0
 80036c8:	d002      	beq.n	80036d0 <HAL_SPI_Transmit+0xf6>
 80036ca:	8afb      	ldrh	r3, [r7, #22]
 80036cc:	2b01      	cmp	r3, #1
 80036ce:	d142      	bne.n	8003756 <HAL_SPI_Transmit+0x17c>
 80036d0:	68fb      	ldr	r3, [r7, #12]
 80036d2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80036d4:	881a      	ldrh	r2, [r3, #0]
 80036d6:	68fb      	ldr	r3, [r7, #12]
 80036d8:	681b      	ldr	r3, [r3, #0]
 80036da:	60da      	str	r2, [r3, #12]
 80036dc:	68fb      	ldr	r3, [r7, #12]
 80036de:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80036e0:	1c9a      	adds	r2, r3, #2
 80036e2:	68fb      	ldr	r3, [r7, #12]
 80036e4:	631a      	str	r2, [r3, #48]	@ 0x30
 80036e6:	68fb      	ldr	r3, [r7, #12]
 80036e8:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80036ea:	b29b      	uxth	r3, r3
 80036ec:	3b01      	subs	r3, #1
 80036ee:	b29a      	uxth	r2, r3
 80036f0:	68fb      	ldr	r3, [r7, #12]
 80036f2:	86da      	strh	r2, [r3, #54]	@ 0x36
 80036f4:	e02f      	b.n	8003756 <HAL_SPI_Transmit+0x17c>
 80036f6:	68fb      	ldr	r3, [r7, #12]
 80036f8:	681b      	ldr	r3, [r3, #0]
 80036fa:	689b      	ldr	r3, [r3, #8]
 80036fc:	f003 0302 	and.w	r3, r3, #2
 8003700:	2b02      	cmp	r3, #2
 8003702:	d112      	bne.n	800372a <HAL_SPI_Transmit+0x150>
 8003704:	68fb      	ldr	r3, [r7, #12]
 8003706:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003708:	881a      	ldrh	r2, [r3, #0]
 800370a:	68fb      	ldr	r3, [r7, #12]
 800370c:	681b      	ldr	r3, [r3, #0]
 800370e:	60da      	str	r2, [r3, #12]
 8003710:	68fb      	ldr	r3, [r7, #12]
 8003712:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003714:	1c9a      	adds	r2, r3, #2
 8003716:	68fb      	ldr	r3, [r7, #12]
 8003718:	631a      	str	r2, [r3, #48]	@ 0x30
 800371a:	68fb      	ldr	r3, [r7, #12]
 800371c:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800371e:	b29b      	uxth	r3, r3
 8003720:	3b01      	subs	r3, #1
 8003722:	b29a      	uxth	r2, r3
 8003724:	68fb      	ldr	r3, [r7, #12]
 8003726:	86da      	strh	r2, [r3, #54]	@ 0x36
 8003728:	e015      	b.n	8003756 <HAL_SPI_Transmit+0x17c>
 800372a:	f7fe f80d 	bl	8001748 <HAL_GetTick>
 800372e:	4602      	mov	r2, r0
 8003730:	69bb      	ldr	r3, [r7, #24]
 8003732:	1ad3      	subs	r3, r2, r3
 8003734:	683a      	ldr	r2, [r7, #0]
 8003736:	429a      	cmp	r2, r3
 8003738:	d803      	bhi.n	8003742 <HAL_SPI_Transmit+0x168>
 800373a:	683b      	ldr	r3, [r7, #0]
 800373c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003740:	d102      	bne.n	8003748 <HAL_SPI_Transmit+0x16e>
 8003742:	683b      	ldr	r3, [r7, #0]
 8003744:	2b00      	cmp	r3, #0
 8003746:	d106      	bne.n	8003756 <HAL_SPI_Transmit+0x17c>
 8003748:	2303      	movs	r3, #3
 800374a:	77fb      	strb	r3, [r7, #31]
 800374c:	68fb      	ldr	r3, [r7, #12]
 800374e:	2201      	movs	r2, #1
 8003750:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8003754:	e07b      	b.n	800384e <HAL_SPI_Transmit+0x274>
 8003756:	68fb      	ldr	r3, [r7, #12]
 8003758:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800375a:	b29b      	uxth	r3, r3
 800375c:	2b00      	cmp	r3, #0
 800375e:	d1ca      	bne.n	80036f6 <HAL_SPI_Transmit+0x11c>
 8003760:	e050      	b.n	8003804 <HAL_SPI_Transmit+0x22a>
 8003762:	68fb      	ldr	r3, [r7, #12]
 8003764:	685b      	ldr	r3, [r3, #4]
 8003766:	2b00      	cmp	r3, #0
 8003768:	d002      	beq.n	8003770 <HAL_SPI_Transmit+0x196>
 800376a:	8afb      	ldrh	r3, [r7, #22]
 800376c:	2b01      	cmp	r3, #1
 800376e:	d144      	bne.n	80037fa <HAL_SPI_Transmit+0x220>
 8003770:	68fb      	ldr	r3, [r7, #12]
 8003772:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8003774:	68fb      	ldr	r3, [r7, #12]
 8003776:	681b      	ldr	r3, [r3, #0]
 8003778:	330c      	adds	r3, #12
 800377a:	7812      	ldrb	r2, [r2, #0]
 800377c:	701a      	strb	r2, [r3, #0]
 800377e:	68fb      	ldr	r3, [r7, #12]
 8003780:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003782:	1c5a      	adds	r2, r3, #1
 8003784:	68fb      	ldr	r3, [r7, #12]
 8003786:	631a      	str	r2, [r3, #48]	@ 0x30
 8003788:	68fb      	ldr	r3, [r7, #12]
 800378a:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800378c:	b29b      	uxth	r3, r3
 800378e:	3b01      	subs	r3, #1
 8003790:	b29a      	uxth	r2, r3
 8003792:	68fb      	ldr	r3, [r7, #12]
 8003794:	86da      	strh	r2, [r3, #54]	@ 0x36
 8003796:	e030      	b.n	80037fa <HAL_SPI_Transmit+0x220>
 8003798:	68fb      	ldr	r3, [r7, #12]
 800379a:	681b      	ldr	r3, [r3, #0]
 800379c:	689b      	ldr	r3, [r3, #8]
 800379e:	f003 0302 	and.w	r3, r3, #2
 80037a2:	2b02      	cmp	r3, #2
 80037a4:	d113      	bne.n	80037ce <HAL_SPI_Transmit+0x1f4>
 80037a6:	68fb      	ldr	r3, [r7, #12]
 80037a8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80037aa:	68fb      	ldr	r3, [r7, #12]
 80037ac:	681b      	ldr	r3, [r3, #0]
 80037ae:	330c      	adds	r3, #12
 80037b0:	7812      	ldrb	r2, [r2, #0]
 80037b2:	701a      	strb	r2, [r3, #0]
 80037b4:	68fb      	ldr	r3, [r7, #12]
 80037b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80037b8:	1c5a      	adds	r2, r3, #1
 80037ba:	68fb      	ldr	r3, [r7, #12]
 80037bc:	631a      	str	r2, [r3, #48]	@ 0x30
 80037be:	68fb      	ldr	r3, [r7, #12]
 80037c0:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80037c2:	b29b      	uxth	r3, r3
 80037c4:	3b01      	subs	r3, #1
 80037c6:	b29a      	uxth	r2, r3
 80037c8:	68fb      	ldr	r3, [r7, #12]
 80037ca:	86da      	strh	r2, [r3, #54]	@ 0x36
 80037cc:	e015      	b.n	80037fa <HAL_SPI_Transmit+0x220>
 80037ce:	f7fd ffbb 	bl	8001748 <HAL_GetTick>
 80037d2:	4602      	mov	r2, r0
 80037d4:	69bb      	ldr	r3, [r7, #24]
 80037d6:	1ad3      	subs	r3, r2, r3
 80037d8:	683a      	ldr	r2, [r7, #0]
 80037da:	429a      	cmp	r2, r3
 80037dc:	d803      	bhi.n	80037e6 <HAL_SPI_Transmit+0x20c>
 80037de:	683b      	ldr	r3, [r7, #0]
 80037e0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80037e4:	d102      	bne.n	80037ec <HAL_SPI_Transmit+0x212>
 80037e6:	683b      	ldr	r3, [r7, #0]
 80037e8:	2b00      	cmp	r3, #0
 80037ea:	d106      	bne.n	80037fa <HAL_SPI_Transmit+0x220>
 80037ec:	2303      	movs	r3, #3
 80037ee:	77fb      	strb	r3, [r7, #31]
 80037f0:	68fb      	ldr	r3, [r7, #12]
 80037f2:	2201      	movs	r2, #1
 80037f4:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80037f8:	e029      	b.n	800384e <HAL_SPI_Transmit+0x274>
 80037fa:	68fb      	ldr	r3, [r7, #12]
 80037fc:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80037fe:	b29b      	uxth	r3, r3
 8003800:	2b00      	cmp	r3, #0
 8003802:	d1c9      	bne.n	8003798 <HAL_SPI_Transmit+0x1be>
 8003804:	69ba      	ldr	r2, [r7, #24]
 8003806:	6839      	ldr	r1, [r7, #0]
 8003808:	68f8      	ldr	r0, [r7, #12]
 800380a:	f000 f8b1 	bl	8003970 <SPI_EndRxTxTransaction>
 800380e:	4603      	mov	r3, r0
 8003810:	2b00      	cmp	r3, #0
 8003812:	d002      	beq.n	800381a <HAL_SPI_Transmit+0x240>
 8003814:	68fb      	ldr	r3, [r7, #12]
 8003816:	2220      	movs	r2, #32
 8003818:	655a      	str	r2, [r3, #84]	@ 0x54
 800381a:	68fb      	ldr	r3, [r7, #12]
 800381c:	689b      	ldr	r3, [r3, #8]
 800381e:	2b00      	cmp	r3, #0
 8003820:	d10a      	bne.n	8003838 <HAL_SPI_Transmit+0x25e>
 8003822:	2300      	movs	r3, #0
 8003824:	613b      	str	r3, [r7, #16]
 8003826:	68fb      	ldr	r3, [r7, #12]
 8003828:	681b      	ldr	r3, [r3, #0]
 800382a:	68db      	ldr	r3, [r3, #12]
 800382c:	613b      	str	r3, [r7, #16]
 800382e:	68fb      	ldr	r3, [r7, #12]
 8003830:	681b      	ldr	r3, [r3, #0]
 8003832:	689b      	ldr	r3, [r3, #8]
 8003834:	613b      	str	r3, [r7, #16]
 8003836:	693b      	ldr	r3, [r7, #16]
 8003838:	68fb      	ldr	r3, [r7, #12]
 800383a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800383c:	2b00      	cmp	r3, #0
 800383e:	d002      	beq.n	8003846 <HAL_SPI_Transmit+0x26c>
 8003840:	2301      	movs	r3, #1
 8003842:	77fb      	strb	r3, [r7, #31]
 8003844:	e003      	b.n	800384e <HAL_SPI_Transmit+0x274>
 8003846:	68fb      	ldr	r3, [r7, #12]
 8003848:	2201      	movs	r2, #1
 800384a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 800384e:	68fb      	ldr	r3, [r7, #12]
 8003850:	2200      	movs	r2, #0
 8003852:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8003856:	7ffb      	ldrb	r3, [r7, #31]
 8003858:	4618      	mov	r0, r3
 800385a:	3720      	adds	r7, #32
 800385c:	46bd      	mov	sp, r7
 800385e:	bd80      	pop	{r7, pc}

08003860 <SPI_WaitFlagStateUntilTimeout>:
 8003860:	b580      	push	{r7, lr}
 8003862:	b088      	sub	sp, #32
 8003864:	af00      	add	r7, sp, #0
 8003866:	60f8      	str	r0, [r7, #12]
 8003868:	60b9      	str	r1, [r7, #8]
 800386a:	603b      	str	r3, [r7, #0]
 800386c:	4613      	mov	r3, r2
 800386e:	71fb      	strb	r3, [r7, #7]
 8003870:	f7fd ff6a 	bl	8001748 <HAL_GetTick>
 8003874:	4602      	mov	r2, r0
 8003876:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003878:	1a9b      	subs	r3, r3, r2
 800387a:	683a      	ldr	r2, [r7, #0]
 800387c:	4413      	add	r3, r2
 800387e:	61fb      	str	r3, [r7, #28]
 8003880:	f7fd ff62 	bl	8001748 <HAL_GetTick>
 8003884:	61b8      	str	r0, [r7, #24]
 8003886:	4b39      	ldr	r3, [pc, #228]	@ (800396c <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8003888:	681b      	ldr	r3, [r3, #0]
 800388a:	015b      	lsls	r3, r3, #5
 800388c:	0d1b      	lsrs	r3, r3, #20
 800388e:	69fa      	ldr	r2, [r7, #28]
 8003890:	fb02 f303 	mul.w	r3, r2, r3
 8003894:	617b      	str	r3, [r7, #20]
 8003896:	e054      	b.n	8003942 <SPI_WaitFlagStateUntilTimeout+0xe2>
 8003898:	683b      	ldr	r3, [r7, #0]
 800389a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800389e:	d050      	beq.n	8003942 <SPI_WaitFlagStateUntilTimeout+0xe2>
 80038a0:	f7fd ff52 	bl	8001748 <HAL_GetTick>
 80038a4:	4602      	mov	r2, r0
 80038a6:	69bb      	ldr	r3, [r7, #24]
 80038a8:	1ad3      	subs	r3, r2, r3
 80038aa:	69fa      	ldr	r2, [r7, #28]
 80038ac:	429a      	cmp	r2, r3
 80038ae:	d902      	bls.n	80038b6 <SPI_WaitFlagStateUntilTimeout+0x56>
 80038b0:	69fb      	ldr	r3, [r7, #28]
 80038b2:	2b00      	cmp	r3, #0
 80038b4:	d13d      	bne.n	8003932 <SPI_WaitFlagStateUntilTimeout+0xd2>
 80038b6:	68fb      	ldr	r3, [r7, #12]
 80038b8:	681b      	ldr	r3, [r3, #0]
 80038ba:	685a      	ldr	r2, [r3, #4]
 80038bc:	68fb      	ldr	r3, [r7, #12]
 80038be:	681b      	ldr	r3, [r3, #0]
 80038c0:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 80038c4:	605a      	str	r2, [r3, #4]
 80038c6:	68fb      	ldr	r3, [r7, #12]
 80038c8:	685b      	ldr	r3, [r3, #4]
 80038ca:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80038ce:	d111      	bne.n	80038f4 <SPI_WaitFlagStateUntilTimeout+0x94>
 80038d0:	68fb      	ldr	r3, [r7, #12]
 80038d2:	689b      	ldr	r3, [r3, #8]
 80038d4:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80038d8:	d004      	beq.n	80038e4 <SPI_WaitFlagStateUntilTimeout+0x84>
 80038da:	68fb      	ldr	r3, [r7, #12]
 80038dc:	689b      	ldr	r3, [r3, #8]
 80038de:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80038e2:	d107      	bne.n	80038f4 <SPI_WaitFlagStateUntilTimeout+0x94>
 80038e4:	68fb      	ldr	r3, [r7, #12]
 80038e6:	681b      	ldr	r3, [r3, #0]
 80038e8:	681a      	ldr	r2, [r3, #0]
 80038ea:	68fb      	ldr	r3, [r7, #12]
 80038ec:	681b      	ldr	r3, [r3, #0]
 80038ee:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80038f2:	601a      	str	r2, [r3, #0]
 80038f4:	68fb      	ldr	r3, [r7, #12]
 80038f6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80038f8:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80038fc:	d10f      	bne.n	800391e <SPI_WaitFlagStateUntilTimeout+0xbe>
 80038fe:	68fb      	ldr	r3, [r7, #12]
 8003900:	681b      	ldr	r3, [r3, #0]
 8003902:	681a      	ldr	r2, [r3, #0]
 8003904:	68fb      	ldr	r3, [r7, #12]
 8003906:	681b      	ldr	r3, [r3, #0]
 8003908:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800390c:	601a      	str	r2, [r3, #0]
 800390e:	68fb      	ldr	r3, [r7, #12]
 8003910:	681b      	ldr	r3, [r3, #0]
 8003912:	681a      	ldr	r2, [r3, #0]
 8003914:	68fb      	ldr	r3, [r7, #12]
 8003916:	681b      	ldr	r3, [r3, #0]
 8003918:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800391c:	601a      	str	r2, [r3, #0]
 800391e:	68fb      	ldr	r3, [r7, #12]
 8003920:	2201      	movs	r2, #1
 8003922:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8003926:	68fb      	ldr	r3, [r7, #12]
 8003928:	2200      	movs	r2, #0
 800392a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800392e:	2303      	movs	r3, #3
 8003930:	e017      	b.n	8003962 <SPI_WaitFlagStateUntilTimeout+0x102>
 8003932:	697b      	ldr	r3, [r7, #20]
 8003934:	2b00      	cmp	r3, #0
 8003936:	d101      	bne.n	800393c <SPI_WaitFlagStateUntilTimeout+0xdc>
 8003938:	2300      	movs	r3, #0
 800393a:	61fb      	str	r3, [r7, #28]
 800393c:	697b      	ldr	r3, [r7, #20]
 800393e:	3b01      	subs	r3, #1
 8003940:	617b      	str	r3, [r7, #20]
 8003942:	68fb      	ldr	r3, [r7, #12]
 8003944:	681b      	ldr	r3, [r3, #0]
 8003946:	689a      	ldr	r2, [r3, #8]
 8003948:	68bb      	ldr	r3, [r7, #8]
 800394a:	4013      	ands	r3, r2
 800394c:	68ba      	ldr	r2, [r7, #8]
 800394e:	429a      	cmp	r2, r3
 8003950:	bf0c      	ite	eq
 8003952:	2301      	moveq	r3, #1
 8003954:	2300      	movne	r3, #0
 8003956:	b2db      	uxtb	r3, r3
 8003958:	461a      	mov	r2, r3
 800395a:	79fb      	ldrb	r3, [r7, #7]
 800395c:	429a      	cmp	r2, r3
 800395e:	d19b      	bne.n	8003898 <SPI_WaitFlagStateUntilTimeout+0x38>
 8003960:	2300      	movs	r3, #0
 8003962:	4618      	mov	r0, r3
 8003964:	3720      	adds	r7, #32
 8003966:	46bd      	mov	sp, r7
 8003968:	bd80      	pop	{r7, pc}
 800396a:	bf00      	nop
 800396c:	20000020 	.word	0x20000020

08003970 <SPI_EndRxTxTransaction>:
 8003970:	b580      	push	{r7, lr}
 8003972:	b088      	sub	sp, #32
 8003974:	af02      	add	r7, sp, #8
 8003976:	60f8      	str	r0, [r7, #12]
 8003978:	60b9      	str	r1, [r7, #8]
 800397a:	607a      	str	r2, [r7, #4]
 800397c:	687b      	ldr	r3, [r7, #4]
 800397e:	9300      	str	r3, [sp, #0]
 8003980:	68bb      	ldr	r3, [r7, #8]
 8003982:	2201      	movs	r2, #1
 8003984:	2102      	movs	r1, #2
 8003986:	68f8      	ldr	r0, [r7, #12]
 8003988:	f7ff ff6a 	bl	8003860 <SPI_WaitFlagStateUntilTimeout>
 800398c:	4603      	mov	r3, r0
 800398e:	2b00      	cmp	r3, #0
 8003990:	d007      	beq.n	80039a2 <SPI_EndRxTxTransaction+0x32>
 8003992:	68fb      	ldr	r3, [r7, #12]
 8003994:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003996:	f043 0220 	orr.w	r2, r3, #32
 800399a:	68fb      	ldr	r3, [r7, #12]
 800399c:	655a      	str	r2, [r3, #84]	@ 0x54
 800399e:	2303      	movs	r3, #3
 80039a0:	e032      	b.n	8003a08 <SPI_EndRxTxTransaction+0x98>
 80039a2:	4b1b      	ldr	r3, [pc, #108]	@ (8003a10 <SPI_EndRxTxTransaction+0xa0>)
 80039a4:	681b      	ldr	r3, [r3, #0]
 80039a6:	4a1b      	ldr	r2, [pc, #108]	@ (8003a14 <SPI_EndRxTxTransaction+0xa4>)
 80039a8:	fba2 2303 	umull	r2, r3, r2, r3
 80039ac:	0d5b      	lsrs	r3, r3, #21
 80039ae:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80039b2:	fb02 f303 	mul.w	r3, r2, r3
 80039b6:	617b      	str	r3, [r7, #20]
 80039b8:	68fb      	ldr	r3, [r7, #12]
 80039ba:	685b      	ldr	r3, [r3, #4]
 80039bc:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80039c0:	d112      	bne.n	80039e8 <SPI_EndRxTxTransaction+0x78>
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	9300      	str	r3, [sp, #0]
 80039c6:	68bb      	ldr	r3, [r7, #8]
 80039c8:	2200      	movs	r2, #0
 80039ca:	2180      	movs	r1, #128	@ 0x80
 80039cc:	68f8      	ldr	r0, [r7, #12]
 80039ce:	f7ff ff47 	bl	8003860 <SPI_WaitFlagStateUntilTimeout>
 80039d2:	4603      	mov	r3, r0
 80039d4:	2b00      	cmp	r3, #0
 80039d6:	d016      	beq.n	8003a06 <SPI_EndRxTxTransaction+0x96>
 80039d8:	68fb      	ldr	r3, [r7, #12]
 80039da:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80039dc:	f043 0220 	orr.w	r2, r3, #32
 80039e0:	68fb      	ldr	r3, [r7, #12]
 80039e2:	655a      	str	r2, [r3, #84]	@ 0x54
 80039e4:	2303      	movs	r3, #3
 80039e6:	e00f      	b.n	8003a08 <SPI_EndRxTxTransaction+0x98>
 80039e8:	697b      	ldr	r3, [r7, #20]
 80039ea:	2b00      	cmp	r3, #0
 80039ec:	d00a      	beq.n	8003a04 <SPI_EndRxTxTransaction+0x94>
 80039ee:	697b      	ldr	r3, [r7, #20]
 80039f0:	3b01      	subs	r3, #1
 80039f2:	617b      	str	r3, [r7, #20]
 80039f4:	68fb      	ldr	r3, [r7, #12]
 80039f6:	681b      	ldr	r3, [r3, #0]
 80039f8:	689b      	ldr	r3, [r3, #8]
 80039fa:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80039fe:	2b80      	cmp	r3, #128	@ 0x80
 8003a00:	d0f2      	beq.n	80039e8 <SPI_EndRxTxTransaction+0x78>
 8003a02:	e000      	b.n	8003a06 <SPI_EndRxTxTransaction+0x96>
 8003a04:	bf00      	nop
 8003a06:	2300      	movs	r3, #0
 8003a08:	4618      	mov	r0, r3
 8003a0a:	3718      	adds	r7, #24
 8003a0c:	46bd      	mov	sp, r7
 8003a0e:	bd80      	pop	{r7, pc}
 8003a10:	20000020 	.word	0x20000020
 8003a14:	165e9f81 	.word	0x165e9f81

08003a18 <HAL_TIM_Base_Init>:
 8003a18:	b580      	push	{r7, lr}
 8003a1a:	b082      	sub	sp, #8
 8003a1c:	af00      	add	r7, sp, #0
 8003a1e:	6078      	str	r0, [r7, #4]
 8003a20:	687b      	ldr	r3, [r7, #4]
 8003a22:	2b00      	cmp	r3, #0
 8003a24:	d101      	bne.n	8003a2a <HAL_TIM_Base_Init+0x12>
 8003a26:	2301      	movs	r3, #1
 8003a28:	e041      	b.n	8003aae <HAL_TIM_Base_Init+0x96>
 8003a2a:	687b      	ldr	r3, [r7, #4]
 8003a2c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003a30:	b2db      	uxtb	r3, r3
 8003a32:	2b00      	cmp	r3, #0
 8003a34:	d106      	bne.n	8003a44 <HAL_TIM_Base_Init+0x2c>
 8003a36:	687b      	ldr	r3, [r7, #4]
 8003a38:	2200      	movs	r2, #0
 8003a3a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003a3e:	6878      	ldr	r0, [r7, #4]
 8003a40:	f000 f839 	bl	8003ab6 <HAL_TIM_Base_MspInit>
 8003a44:	687b      	ldr	r3, [r7, #4]
 8003a46:	2202      	movs	r2, #2
 8003a48:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003a4c:	687b      	ldr	r3, [r7, #4]
 8003a4e:	681a      	ldr	r2, [r3, #0]
 8003a50:	687b      	ldr	r3, [r7, #4]
 8003a52:	3304      	adds	r3, #4
 8003a54:	4619      	mov	r1, r3
 8003a56:	4610      	mov	r0, r2
 8003a58:	f000 f9b2 	bl	8003dc0 <TIM_Base_SetConfig>
 8003a5c:	687b      	ldr	r3, [r7, #4]
 8003a5e:	2201      	movs	r2, #1
 8003a60:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8003a64:	687b      	ldr	r3, [r7, #4]
 8003a66:	2201      	movs	r2, #1
 8003a68:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003a6c:	687b      	ldr	r3, [r7, #4]
 8003a6e:	2201      	movs	r2, #1
 8003a70:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8003a74:	687b      	ldr	r3, [r7, #4]
 8003a76:	2201      	movs	r2, #1
 8003a78:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003a7c:	687b      	ldr	r3, [r7, #4]
 8003a7e:	2201      	movs	r2, #1
 8003a80:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003a84:	687b      	ldr	r3, [r7, #4]
 8003a86:	2201      	movs	r2, #1
 8003a88:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003a8c:	687b      	ldr	r3, [r7, #4]
 8003a8e:	2201      	movs	r2, #1
 8003a90:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8003a94:	687b      	ldr	r3, [r7, #4]
 8003a96:	2201      	movs	r2, #1
 8003a98:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8003a9c:	687b      	ldr	r3, [r7, #4]
 8003a9e:	2201      	movs	r2, #1
 8003aa0:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8003aa4:	687b      	ldr	r3, [r7, #4]
 8003aa6:	2201      	movs	r2, #1
 8003aa8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003aac:	2300      	movs	r3, #0
 8003aae:	4618      	mov	r0, r3
 8003ab0:	3708      	adds	r7, #8
 8003ab2:	46bd      	mov	sp, r7
 8003ab4:	bd80      	pop	{r7, pc}

08003ab6 <HAL_TIM_Base_MspInit>:
 8003ab6:	b480      	push	{r7}
 8003ab8:	b083      	sub	sp, #12
 8003aba:	af00      	add	r7, sp, #0
 8003abc:	6078      	str	r0, [r7, #4]
 8003abe:	bf00      	nop
 8003ac0:	370c      	adds	r7, #12
 8003ac2:	46bd      	mov	sp, r7
 8003ac4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ac8:	4770      	bx	lr
	...

08003acc <HAL_TIM_Base_Start_IT>:
 8003acc:	b480      	push	{r7}
 8003ace:	b085      	sub	sp, #20
 8003ad0:	af00      	add	r7, sp, #0
 8003ad2:	6078      	str	r0, [r7, #4]
 8003ad4:	687b      	ldr	r3, [r7, #4]
 8003ad6:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003ada:	b2db      	uxtb	r3, r3
 8003adc:	2b01      	cmp	r3, #1
 8003ade:	d001      	beq.n	8003ae4 <HAL_TIM_Base_Start_IT+0x18>
 8003ae0:	2301      	movs	r3, #1
 8003ae2:	e044      	b.n	8003b6e <HAL_TIM_Base_Start_IT+0xa2>
 8003ae4:	687b      	ldr	r3, [r7, #4]
 8003ae6:	2202      	movs	r2, #2
 8003ae8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003aec:	687b      	ldr	r3, [r7, #4]
 8003aee:	681b      	ldr	r3, [r3, #0]
 8003af0:	68da      	ldr	r2, [r3, #12]
 8003af2:	687b      	ldr	r3, [r7, #4]
 8003af4:	681b      	ldr	r3, [r3, #0]
 8003af6:	f042 0201 	orr.w	r2, r2, #1
 8003afa:	60da      	str	r2, [r3, #12]
 8003afc:	687b      	ldr	r3, [r7, #4]
 8003afe:	681b      	ldr	r3, [r3, #0]
 8003b00:	4a1e      	ldr	r2, [pc, #120]	@ (8003b7c <HAL_TIM_Base_Start_IT+0xb0>)
 8003b02:	4293      	cmp	r3, r2
 8003b04:	d018      	beq.n	8003b38 <HAL_TIM_Base_Start_IT+0x6c>
 8003b06:	687b      	ldr	r3, [r7, #4]
 8003b08:	681b      	ldr	r3, [r3, #0]
 8003b0a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003b0e:	d013      	beq.n	8003b38 <HAL_TIM_Base_Start_IT+0x6c>
 8003b10:	687b      	ldr	r3, [r7, #4]
 8003b12:	681b      	ldr	r3, [r3, #0]
 8003b14:	4a1a      	ldr	r2, [pc, #104]	@ (8003b80 <HAL_TIM_Base_Start_IT+0xb4>)
 8003b16:	4293      	cmp	r3, r2
 8003b18:	d00e      	beq.n	8003b38 <HAL_TIM_Base_Start_IT+0x6c>
 8003b1a:	687b      	ldr	r3, [r7, #4]
 8003b1c:	681b      	ldr	r3, [r3, #0]
 8003b1e:	4a19      	ldr	r2, [pc, #100]	@ (8003b84 <HAL_TIM_Base_Start_IT+0xb8>)
 8003b20:	4293      	cmp	r3, r2
 8003b22:	d009      	beq.n	8003b38 <HAL_TIM_Base_Start_IT+0x6c>
 8003b24:	687b      	ldr	r3, [r7, #4]
 8003b26:	681b      	ldr	r3, [r3, #0]
 8003b28:	4a17      	ldr	r2, [pc, #92]	@ (8003b88 <HAL_TIM_Base_Start_IT+0xbc>)
 8003b2a:	4293      	cmp	r3, r2
 8003b2c:	d004      	beq.n	8003b38 <HAL_TIM_Base_Start_IT+0x6c>
 8003b2e:	687b      	ldr	r3, [r7, #4]
 8003b30:	681b      	ldr	r3, [r3, #0]
 8003b32:	4a16      	ldr	r2, [pc, #88]	@ (8003b8c <HAL_TIM_Base_Start_IT+0xc0>)
 8003b34:	4293      	cmp	r3, r2
 8003b36:	d111      	bne.n	8003b5c <HAL_TIM_Base_Start_IT+0x90>
 8003b38:	687b      	ldr	r3, [r7, #4]
 8003b3a:	681b      	ldr	r3, [r3, #0]
 8003b3c:	689b      	ldr	r3, [r3, #8]
 8003b3e:	f003 0307 	and.w	r3, r3, #7
 8003b42:	60fb      	str	r3, [r7, #12]
 8003b44:	68fb      	ldr	r3, [r7, #12]
 8003b46:	2b06      	cmp	r3, #6
 8003b48:	d010      	beq.n	8003b6c <HAL_TIM_Base_Start_IT+0xa0>
 8003b4a:	687b      	ldr	r3, [r7, #4]
 8003b4c:	681b      	ldr	r3, [r3, #0]
 8003b4e:	681a      	ldr	r2, [r3, #0]
 8003b50:	687b      	ldr	r3, [r7, #4]
 8003b52:	681b      	ldr	r3, [r3, #0]
 8003b54:	f042 0201 	orr.w	r2, r2, #1
 8003b58:	601a      	str	r2, [r3, #0]
 8003b5a:	e007      	b.n	8003b6c <HAL_TIM_Base_Start_IT+0xa0>
 8003b5c:	687b      	ldr	r3, [r7, #4]
 8003b5e:	681b      	ldr	r3, [r3, #0]
 8003b60:	681a      	ldr	r2, [r3, #0]
 8003b62:	687b      	ldr	r3, [r7, #4]
 8003b64:	681b      	ldr	r3, [r3, #0]
 8003b66:	f042 0201 	orr.w	r2, r2, #1
 8003b6a:	601a      	str	r2, [r3, #0]
 8003b6c:	2300      	movs	r3, #0
 8003b6e:	4618      	mov	r0, r3
 8003b70:	3714      	adds	r7, #20
 8003b72:	46bd      	mov	sp, r7
 8003b74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b78:	4770      	bx	lr
 8003b7a:	bf00      	nop
 8003b7c:	40010000 	.word	0x40010000
 8003b80:	40000400 	.word	0x40000400
 8003b84:	40000800 	.word	0x40000800
 8003b88:	40000c00 	.word	0x40000c00
 8003b8c:	40014000 	.word	0x40014000

08003b90 <HAL_TIM_IRQHandler>:
 8003b90:	b580      	push	{r7, lr}
 8003b92:	b084      	sub	sp, #16
 8003b94:	af00      	add	r7, sp, #0
 8003b96:	6078      	str	r0, [r7, #4]
 8003b98:	687b      	ldr	r3, [r7, #4]
 8003b9a:	681b      	ldr	r3, [r3, #0]
 8003b9c:	68db      	ldr	r3, [r3, #12]
 8003b9e:	60fb      	str	r3, [r7, #12]
 8003ba0:	687b      	ldr	r3, [r7, #4]
 8003ba2:	681b      	ldr	r3, [r3, #0]
 8003ba4:	691b      	ldr	r3, [r3, #16]
 8003ba6:	60bb      	str	r3, [r7, #8]
 8003ba8:	68bb      	ldr	r3, [r7, #8]
 8003baa:	f003 0302 	and.w	r3, r3, #2
 8003bae:	2b00      	cmp	r3, #0
 8003bb0:	d020      	beq.n	8003bf4 <HAL_TIM_IRQHandler+0x64>
 8003bb2:	68fb      	ldr	r3, [r7, #12]
 8003bb4:	f003 0302 	and.w	r3, r3, #2
 8003bb8:	2b00      	cmp	r3, #0
 8003bba:	d01b      	beq.n	8003bf4 <HAL_TIM_IRQHandler+0x64>
 8003bbc:	687b      	ldr	r3, [r7, #4]
 8003bbe:	681b      	ldr	r3, [r3, #0]
 8003bc0:	f06f 0202 	mvn.w	r2, #2
 8003bc4:	611a      	str	r2, [r3, #16]
 8003bc6:	687b      	ldr	r3, [r7, #4]
 8003bc8:	2201      	movs	r2, #1
 8003bca:	771a      	strb	r2, [r3, #28]
 8003bcc:	687b      	ldr	r3, [r7, #4]
 8003bce:	681b      	ldr	r3, [r3, #0]
 8003bd0:	699b      	ldr	r3, [r3, #24]
 8003bd2:	f003 0303 	and.w	r3, r3, #3
 8003bd6:	2b00      	cmp	r3, #0
 8003bd8:	d003      	beq.n	8003be2 <HAL_TIM_IRQHandler+0x52>
 8003bda:	6878      	ldr	r0, [r7, #4]
 8003bdc:	f000 f8d2 	bl	8003d84 <HAL_TIM_IC_CaptureCallback>
 8003be0:	e005      	b.n	8003bee <HAL_TIM_IRQHandler+0x5e>
 8003be2:	6878      	ldr	r0, [r7, #4]
 8003be4:	f000 f8c4 	bl	8003d70 <HAL_TIM_OC_DelayElapsedCallback>
 8003be8:	6878      	ldr	r0, [r7, #4]
 8003bea:	f000 f8d5 	bl	8003d98 <HAL_TIM_PWM_PulseFinishedCallback>
 8003bee:	687b      	ldr	r3, [r7, #4]
 8003bf0:	2200      	movs	r2, #0
 8003bf2:	771a      	strb	r2, [r3, #28]
 8003bf4:	68bb      	ldr	r3, [r7, #8]
 8003bf6:	f003 0304 	and.w	r3, r3, #4
 8003bfa:	2b00      	cmp	r3, #0
 8003bfc:	d020      	beq.n	8003c40 <HAL_TIM_IRQHandler+0xb0>
 8003bfe:	68fb      	ldr	r3, [r7, #12]
 8003c00:	f003 0304 	and.w	r3, r3, #4
 8003c04:	2b00      	cmp	r3, #0
 8003c06:	d01b      	beq.n	8003c40 <HAL_TIM_IRQHandler+0xb0>
 8003c08:	687b      	ldr	r3, [r7, #4]
 8003c0a:	681b      	ldr	r3, [r3, #0]
 8003c0c:	f06f 0204 	mvn.w	r2, #4
 8003c10:	611a      	str	r2, [r3, #16]
 8003c12:	687b      	ldr	r3, [r7, #4]
 8003c14:	2202      	movs	r2, #2
 8003c16:	771a      	strb	r2, [r3, #28]
 8003c18:	687b      	ldr	r3, [r7, #4]
 8003c1a:	681b      	ldr	r3, [r3, #0]
 8003c1c:	699b      	ldr	r3, [r3, #24]
 8003c1e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003c22:	2b00      	cmp	r3, #0
 8003c24:	d003      	beq.n	8003c2e <HAL_TIM_IRQHandler+0x9e>
 8003c26:	6878      	ldr	r0, [r7, #4]
 8003c28:	f000 f8ac 	bl	8003d84 <HAL_TIM_IC_CaptureCallback>
 8003c2c:	e005      	b.n	8003c3a <HAL_TIM_IRQHandler+0xaa>
 8003c2e:	6878      	ldr	r0, [r7, #4]
 8003c30:	f000 f89e 	bl	8003d70 <HAL_TIM_OC_DelayElapsedCallback>
 8003c34:	6878      	ldr	r0, [r7, #4]
 8003c36:	f000 f8af 	bl	8003d98 <HAL_TIM_PWM_PulseFinishedCallback>
 8003c3a:	687b      	ldr	r3, [r7, #4]
 8003c3c:	2200      	movs	r2, #0
 8003c3e:	771a      	strb	r2, [r3, #28]
 8003c40:	68bb      	ldr	r3, [r7, #8]
 8003c42:	f003 0308 	and.w	r3, r3, #8
 8003c46:	2b00      	cmp	r3, #0
 8003c48:	d020      	beq.n	8003c8c <HAL_TIM_IRQHandler+0xfc>
 8003c4a:	68fb      	ldr	r3, [r7, #12]
 8003c4c:	f003 0308 	and.w	r3, r3, #8
 8003c50:	2b00      	cmp	r3, #0
 8003c52:	d01b      	beq.n	8003c8c <HAL_TIM_IRQHandler+0xfc>
 8003c54:	687b      	ldr	r3, [r7, #4]
 8003c56:	681b      	ldr	r3, [r3, #0]
 8003c58:	f06f 0208 	mvn.w	r2, #8
 8003c5c:	611a      	str	r2, [r3, #16]
 8003c5e:	687b      	ldr	r3, [r7, #4]
 8003c60:	2204      	movs	r2, #4
 8003c62:	771a      	strb	r2, [r3, #28]
 8003c64:	687b      	ldr	r3, [r7, #4]
 8003c66:	681b      	ldr	r3, [r3, #0]
 8003c68:	69db      	ldr	r3, [r3, #28]
 8003c6a:	f003 0303 	and.w	r3, r3, #3
 8003c6e:	2b00      	cmp	r3, #0
 8003c70:	d003      	beq.n	8003c7a <HAL_TIM_IRQHandler+0xea>
 8003c72:	6878      	ldr	r0, [r7, #4]
 8003c74:	f000 f886 	bl	8003d84 <HAL_TIM_IC_CaptureCallback>
 8003c78:	e005      	b.n	8003c86 <HAL_TIM_IRQHandler+0xf6>
 8003c7a:	6878      	ldr	r0, [r7, #4]
 8003c7c:	f000 f878 	bl	8003d70 <HAL_TIM_OC_DelayElapsedCallback>
 8003c80:	6878      	ldr	r0, [r7, #4]
 8003c82:	f000 f889 	bl	8003d98 <HAL_TIM_PWM_PulseFinishedCallback>
 8003c86:	687b      	ldr	r3, [r7, #4]
 8003c88:	2200      	movs	r2, #0
 8003c8a:	771a      	strb	r2, [r3, #28]
 8003c8c:	68bb      	ldr	r3, [r7, #8]
 8003c8e:	f003 0310 	and.w	r3, r3, #16
 8003c92:	2b00      	cmp	r3, #0
 8003c94:	d020      	beq.n	8003cd8 <HAL_TIM_IRQHandler+0x148>
 8003c96:	68fb      	ldr	r3, [r7, #12]
 8003c98:	f003 0310 	and.w	r3, r3, #16
 8003c9c:	2b00      	cmp	r3, #0
 8003c9e:	d01b      	beq.n	8003cd8 <HAL_TIM_IRQHandler+0x148>
 8003ca0:	687b      	ldr	r3, [r7, #4]
 8003ca2:	681b      	ldr	r3, [r3, #0]
 8003ca4:	f06f 0210 	mvn.w	r2, #16
 8003ca8:	611a      	str	r2, [r3, #16]
 8003caa:	687b      	ldr	r3, [r7, #4]
 8003cac:	2208      	movs	r2, #8
 8003cae:	771a      	strb	r2, [r3, #28]
 8003cb0:	687b      	ldr	r3, [r7, #4]
 8003cb2:	681b      	ldr	r3, [r3, #0]
 8003cb4:	69db      	ldr	r3, [r3, #28]
 8003cb6:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003cba:	2b00      	cmp	r3, #0
 8003cbc:	d003      	beq.n	8003cc6 <HAL_TIM_IRQHandler+0x136>
 8003cbe:	6878      	ldr	r0, [r7, #4]
 8003cc0:	f000 f860 	bl	8003d84 <HAL_TIM_IC_CaptureCallback>
 8003cc4:	e005      	b.n	8003cd2 <HAL_TIM_IRQHandler+0x142>
 8003cc6:	6878      	ldr	r0, [r7, #4]
 8003cc8:	f000 f852 	bl	8003d70 <HAL_TIM_OC_DelayElapsedCallback>
 8003ccc:	6878      	ldr	r0, [r7, #4]
 8003cce:	f000 f863 	bl	8003d98 <HAL_TIM_PWM_PulseFinishedCallback>
 8003cd2:	687b      	ldr	r3, [r7, #4]
 8003cd4:	2200      	movs	r2, #0
 8003cd6:	771a      	strb	r2, [r3, #28]
 8003cd8:	68bb      	ldr	r3, [r7, #8]
 8003cda:	f003 0301 	and.w	r3, r3, #1
 8003cde:	2b00      	cmp	r3, #0
 8003ce0:	d00c      	beq.n	8003cfc <HAL_TIM_IRQHandler+0x16c>
 8003ce2:	68fb      	ldr	r3, [r7, #12]
 8003ce4:	f003 0301 	and.w	r3, r3, #1
 8003ce8:	2b00      	cmp	r3, #0
 8003cea:	d007      	beq.n	8003cfc <HAL_TIM_IRQHandler+0x16c>
 8003cec:	687b      	ldr	r3, [r7, #4]
 8003cee:	681b      	ldr	r3, [r3, #0]
 8003cf0:	f06f 0201 	mvn.w	r2, #1
 8003cf4:	611a      	str	r2, [r3, #16]
 8003cf6:	6878      	ldr	r0, [r7, #4]
 8003cf8:	f7fc ffd4 	bl	8000ca4 <HAL_TIM_PeriodElapsedCallback>
 8003cfc:	68bb      	ldr	r3, [r7, #8]
 8003cfe:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003d02:	2b00      	cmp	r3, #0
 8003d04:	d00c      	beq.n	8003d20 <HAL_TIM_IRQHandler+0x190>
 8003d06:	68fb      	ldr	r3, [r7, #12]
 8003d08:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003d0c:	2b00      	cmp	r3, #0
 8003d0e:	d007      	beq.n	8003d20 <HAL_TIM_IRQHandler+0x190>
 8003d10:	687b      	ldr	r3, [r7, #4]
 8003d12:	681b      	ldr	r3, [r3, #0]
 8003d14:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8003d18:	611a      	str	r2, [r3, #16]
 8003d1a:	6878      	ldr	r0, [r7, #4]
 8003d1c:	f000 f8e6 	bl	8003eec <HAL_TIMEx_BreakCallback>
 8003d20:	68bb      	ldr	r3, [r7, #8]
 8003d22:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003d26:	2b00      	cmp	r3, #0
 8003d28:	d00c      	beq.n	8003d44 <HAL_TIM_IRQHandler+0x1b4>
 8003d2a:	68fb      	ldr	r3, [r7, #12]
 8003d2c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003d30:	2b00      	cmp	r3, #0
 8003d32:	d007      	beq.n	8003d44 <HAL_TIM_IRQHandler+0x1b4>
 8003d34:	687b      	ldr	r3, [r7, #4]
 8003d36:	681b      	ldr	r3, [r3, #0]
 8003d38:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8003d3c:	611a      	str	r2, [r3, #16]
 8003d3e:	6878      	ldr	r0, [r7, #4]
 8003d40:	f000 f834 	bl	8003dac <HAL_TIM_TriggerCallback>
 8003d44:	68bb      	ldr	r3, [r7, #8]
 8003d46:	f003 0320 	and.w	r3, r3, #32
 8003d4a:	2b00      	cmp	r3, #0
 8003d4c:	d00c      	beq.n	8003d68 <HAL_TIM_IRQHandler+0x1d8>
 8003d4e:	68fb      	ldr	r3, [r7, #12]
 8003d50:	f003 0320 	and.w	r3, r3, #32
 8003d54:	2b00      	cmp	r3, #0
 8003d56:	d007      	beq.n	8003d68 <HAL_TIM_IRQHandler+0x1d8>
 8003d58:	687b      	ldr	r3, [r7, #4]
 8003d5a:	681b      	ldr	r3, [r3, #0]
 8003d5c:	f06f 0220 	mvn.w	r2, #32
 8003d60:	611a      	str	r2, [r3, #16]
 8003d62:	6878      	ldr	r0, [r7, #4]
 8003d64:	f000 f8b8 	bl	8003ed8 <HAL_TIMEx_CommutCallback>
 8003d68:	bf00      	nop
 8003d6a:	3710      	adds	r7, #16
 8003d6c:	46bd      	mov	sp, r7
 8003d6e:	bd80      	pop	{r7, pc}

08003d70 <HAL_TIM_OC_DelayElapsedCallback>:
 8003d70:	b480      	push	{r7}
 8003d72:	b083      	sub	sp, #12
 8003d74:	af00      	add	r7, sp, #0
 8003d76:	6078      	str	r0, [r7, #4]
 8003d78:	bf00      	nop
 8003d7a:	370c      	adds	r7, #12
 8003d7c:	46bd      	mov	sp, r7
 8003d7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d82:	4770      	bx	lr

08003d84 <HAL_TIM_IC_CaptureCallback>:
 8003d84:	b480      	push	{r7}
 8003d86:	b083      	sub	sp, #12
 8003d88:	af00      	add	r7, sp, #0
 8003d8a:	6078      	str	r0, [r7, #4]
 8003d8c:	bf00      	nop
 8003d8e:	370c      	adds	r7, #12
 8003d90:	46bd      	mov	sp, r7
 8003d92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d96:	4770      	bx	lr

08003d98 <HAL_TIM_PWM_PulseFinishedCallback>:
 8003d98:	b480      	push	{r7}
 8003d9a:	b083      	sub	sp, #12
 8003d9c:	af00      	add	r7, sp, #0
 8003d9e:	6078      	str	r0, [r7, #4]
 8003da0:	bf00      	nop
 8003da2:	370c      	adds	r7, #12
 8003da4:	46bd      	mov	sp, r7
 8003da6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003daa:	4770      	bx	lr

08003dac <HAL_TIM_TriggerCallback>:
 8003dac:	b480      	push	{r7}
 8003dae:	b083      	sub	sp, #12
 8003db0:	af00      	add	r7, sp, #0
 8003db2:	6078      	str	r0, [r7, #4]
 8003db4:	bf00      	nop
 8003db6:	370c      	adds	r7, #12
 8003db8:	46bd      	mov	sp, r7
 8003dba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003dbe:	4770      	bx	lr

08003dc0 <TIM_Base_SetConfig>:
 8003dc0:	b480      	push	{r7}
 8003dc2:	b085      	sub	sp, #20
 8003dc4:	af00      	add	r7, sp, #0
 8003dc6:	6078      	str	r0, [r7, #4]
 8003dc8:	6039      	str	r1, [r7, #0]
 8003dca:	687b      	ldr	r3, [r7, #4]
 8003dcc:	681b      	ldr	r3, [r3, #0]
 8003dce:	60fb      	str	r3, [r7, #12]
 8003dd0:	687b      	ldr	r3, [r7, #4]
 8003dd2:	4a3a      	ldr	r2, [pc, #232]	@ (8003ebc <TIM_Base_SetConfig+0xfc>)
 8003dd4:	4293      	cmp	r3, r2
 8003dd6:	d00f      	beq.n	8003df8 <TIM_Base_SetConfig+0x38>
 8003dd8:	687b      	ldr	r3, [r7, #4]
 8003dda:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003dde:	d00b      	beq.n	8003df8 <TIM_Base_SetConfig+0x38>
 8003de0:	687b      	ldr	r3, [r7, #4]
 8003de2:	4a37      	ldr	r2, [pc, #220]	@ (8003ec0 <TIM_Base_SetConfig+0x100>)
 8003de4:	4293      	cmp	r3, r2
 8003de6:	d007      	beq.n	8003df8 <TIM_Base_SetConfig+0x38>
 8003de8:	687b      	ldr	r3, [r7, #4]
 8003dea:	4a36      	ldr	r2, [pc, #216]	@ (8003ec4 <TIM_Base_SetConfig+0x104>)
 8003dec:	4293      	cmp	r3, r2
 8003dee:	d003      	beq.n	8003df8 <TIM_Base_SetConfig+0x38>
 8003df0:	687b      	ldr	r3, [r7, #4]
 8003df2:	4a35      	ldr	r2, [pc, #212]	@ (8003ec8 <TIM_Base_SetConfig+0x108>)
 8003df4:	4293      	cmp	r3, r2
 8003df6:	d108      	bne.n	8003e0a <TIM_Base_SetConfig+0x4a>
 8003df8:	68fb      	ldr	r3, [r7, #12]
 8003dfa:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8003dfe:	60fb      	str	r3, [r7, #12]
 8003e00:	683b      	ldr	r3, [r7, #0]
 8003e02:	685b      	ldr	r3, [r3, #4]
 8003e04:	68fa      	ldr	r2, [r7, #12]
 8003e06:	4313      	orrs	r3, r2
 8003e08:	60fb      	str	r3, [r7, #12]
 8003e0a:	687b      	ldr	r3, [r7, #4]
 8003e0c:	4a2b      	ldr	r2, [pc, #172]	@ (8003ebc <TIM_Base_SetConfig+0xfc>)
 8003e0e:	4293      	cmp	r3, r2
 8003e10:	d01b      	beq.n	8003e4a <TIM_Base_SetConfig+0x8a>
 8003e12:	687b      	ldr	r3, [r7, #4]
 8003e14:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003e18:	d017      	beq.n	8003e4a <TIM_Base_SetConfig+0x8a>
 8003e1a:	687b      	ldr	r3, [r7, #4]
 8003e1c:	4a28      	ldr	r2, [pc, #160]	@ (8003ec0 <TIM_Base_SetConfig+0x100>)
 8003e1e:	4293      	cmp	r3, r2
 8003e20:	d013      	beq.n	8003e4a <TIM_Base_SetConfig+0x8a>
 8003e22:	687b      	ldr	r3, [r7, #4]
 8003e24:	4a27      	ldr	r2, [pc, #156]	@ (8003ec4 <TIM_Base_SetConfig+0x104>)
 8003e26:	4293      	cmp	r3, r2
 8003e28:	d00f      	beq.n	8003e4a <TIM_Base_SetConfig+0x8a>
 8003e2a:	687b      	ldr	r3, [r7, #4]
 8003e2c:	4a26      	ldr	r2, [pc, #152]	@ (8003ec8 <TIM_Base_SetConfig+0x108>)
 8003e2e:	4293      	cmp	r3, r2
 8003e30:	d00b      	beq.n	8003e4a <TIM_Base_SetConfig+0x8a>
 8003e32:	687b      	ldr	r3, [r7, #4]
 8003e34:	4a25      	ldr	r2, [pc, #148]	@ (8003ecc <TIM_Base_SetConfig+0x10c>)
 8003e36:	4293      	cmp	r3, r2
 8003e38:	d007      	beq.n	8003e4a <TIM_Base_SetConfig+0x8a>
 8003e3a:	687b      	ldr	r3, [r7, #4]
 8003e3c:	4a24      	ldr	r2, [pc, #144]	@ (8003ed0 <TIM_Base_SetConfig+0x110>)
 8003e3e:	4293      	cmp	r3, r2
 8003e40:	d003      	beq.n	8003e4a <TIM_Base_SetConfig+0x8a>
 8003e42:	687b      	ldr	r3, [r7, #4]
 8003e44:	4a23      	ldr	r2, [pc, #140]	@ (8003ed4 <TIM_Base_SetConfig+0x114>)
 8003e46:	4293      	cmp	r3, r2
 8003e48:	d108      	bne.n	8003e5c <TIM_Base_SetConfig+0x9c>
 8003e4a:	68fb      	ldr	r3, [r7, #12]
 8003e4c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8003e50:	60fb      	str	r3, [r7, #12]
 8003e52:	683b      	ldr	r3, [r7, #0]
 8003e54:	68db      	ldr	r3, [r3, #12]
 8003e56:	68fa      	ldr	r2, [r7, #12]
 8003e58:	4313      	orrs	r3, r2
 8003e5a:	60fb      	str	r3, [r7, #12]
 8003e5c:	68fb      	ldr	r3, [r7, #12]
 8003e5e:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8003e62:	683b      	ldr	r3, [r7, #0]
 8003e64:	695b      	ldr	r3, [r3, #20]
 8003e66:	4313      	orrs	r3, r2
 8003e68:	60fb      	str	r3, [r7, #12]
 8003e6a:	687b      	ldr	r3, [r7, #4]
 8003e6c:	68fa      	ldr	r2, [r7, #12]
 8003e6e:	601a      	str	r2, [r3, #0]
 8003e70:	683b      	ldr	r3, [r7, #0]
 8003e72:	689a      	ldr	r2, [r3, #8]
 8003e74:	687b      	ldr	r3, [r7, #4]
 8003e76:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003e78:	683b      	ldr	r3, [r7, #0]
 8003e7a:	681a      	ldr	r2, [r3, #0]
 8003e7c:	687b      	ldr	r3, [r7, #4]
 8003e7e:	629a      	str	r2, [r3, #40]	@ 0x28
 8003e80:	687b      	ldr	r3, [r7, #4]
 8003e82:	4a0e      	ldr	r2, [pc, #56]	@ (8003ebc <TIM_Base_SetConfig+0xfc>)
 8003e84:	4293      	cmp	r3, r2
 8003e86:	d103      	bne.n	8003e90 <TIM_Base_SetConfig+0xd0>
 8003e88:	683b      	ldr	r3, [r7, #0]
 8003e8a:	691a      	ldr	r2, [r3, #16]
 8003e8c:	687b      	ldr	r3, [r7, #4]
 8003e8e:	631a      	str	r2, [r3, #48]	@ 0x30
 8003e90:	687b      	ldr	r3, [r7, #4]
 8003e92:	2201      	movs	r2, #1
 8003e94:	615a      	str	r2, [r3, #20]
 8003e96:	687b      	ldr	r3, [r7, #4]
 8003e98:	691b      	ldr	r3, [r3, #16]
 8003e9a:	f003 0301 	and.w	r3, r3, #1
 8003e9e:	2b01      	cmp	r3, #1
 8003ea0:	d105      	bne.n	8003eae <TIM_Base_SetConfig+0xee>
 8003ea2:	687b      	ldr	r3, [r7, #4]
 8003ea4:	691b      	ldr	r3, [r3, #16]
 8003ea6:	f023 0201 	bic.w	r2, r3, #1
 8003eaa:	687b      	ldr	r3, [r7, #4]
 8003eac:	611a      	str	r2, [r3, #16]
 8003eae:	bf00      	nop
 8003eb0:	3714      	adds	r7, #20
 8003eb2:	46bd      	mov	sp, r7
 8003eb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003eb8:	4770      	bx	lr
 8003eba:	bf00      	nop
 8003ebc:	40010000 	.word	0x40010000
 8003ec0:	40000400 	.word	0x40000400
 8003ec4:	40000800 	.word	0x40000800
 8003ec8:	40000c00 	.word	0x40000c00
 8003ecc:	40014000 	.word	0x40014000
 8003ed0:	40014400 	.word	0x40014400
 8003ed4:	40014800 	.word	0x40014800

08003ed8 <HAL_TIMEx_CommutCallback>:
 8003ed8:	b480      	push	{r7}
 8003eda:	b083      	sub	sp, #12
 8003edc:	af00      	add	r7, sp, #0
 8003ede:	6078      	str	r0, [r7, #4]
 8003ee0:	bf00      	nop
 8003ee2:	370c      	adds	r7, #12
 8003ee4:	46bd      	mov	sp, r7
 8003ee6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003eea:	4770      	bx	lr

08003eec <HAL_TIMEx_BreakCallback>:
 8003eec:	b480      	push	{r7}
 8003eee:	b083      	sub	sp, #12
 8003ef0:	af00      	add	r7, sp, #0
 8003ef2:	6078      	str	r0, [r7, #4]
 8003ef4:	bf00      	nop
 8003ef6:	370c      	adds	r7, #12
 8003ef8:	46bd      	mov	sp, r7
 8003efa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003efe:	4770      	bx	lr

08003f00 <__NVIC_SetPriority>:
 8003f00:	b480      	push	{r7}
 8003f02:	b083      	sub	sp, #12
 8003f04:	af00      	add	r7, sp, #0
 8003f06:	4603      	mov	r3, r0
 8003f08:	6039      	str	r1, [r7, #0]
 8003f0a:	71fb      	strb	r3, [r7, #7]
 8003f0c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003f10:	2b00      	cmp	r3, #0
 8003f12:	db0a      	blt.n	8003f2a <__NVIC_SetPriority+0x2a>
 8003f14:	683b      	ldr	r3, [r7, #0]
 8003f16:	b2da      	uxtb	r2, r3
 8003f18:	490c      	ldr	r1, [pc, #48]	@ (8003f4c <__NVIC_SetPriority+0x4c>)
 8003f1a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003f1e:	0112      	lsls	r2, r2, #4
 8003f20:	b2d2      	uxtb	r2, r2
 8003f22:	440b      	add	r3, r1
 8003f24:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8003f28:	e00a      	b.n	8003f40 <__NVIC_SetPriority+0x40>
 8003f2a:	683b      	ldr	r3, [r7, #0]
 8003f2c:	b2da      	uxtb	r2, r3
 8003f2e:	4908      	ldr	r1, [pc, #32]	@ (8003f50 <__NVIC_SetPriority+0x50>)
 8003f30:	79fb      	ldrb	r3, [r7, #7]
 8003f32:	f003 030f 	and.w	r3, r3, #15
 8003f36:	3b04      	subs	r3, #4
 8003f38:	0112      	lsls	r2, r2, #4
 8003f3a:	b2d2      	uxtb	r2, r2
 8003f3c:	440b      	add	r3, r1
 8003f3e:	761a      	strb	r2, [r3, #24]
 8003f40:	bf00      	nop
 8003f42:	370c      	adds	r7, #12
 8003f44:	46bd      	mov	sp, r7
 8003f46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f4a:	4770      	bx	lr
 8003f4c:	e000e100 	.word	0xe000e100
 8003f50:	e000ed00 	.word	0xe000ed00

08003f54 <SysTick_Handler>:
 8003f54:	b580      	push	{r7, lr}
 8003f56:	af00      	add	r7, sp, #0
 8003f58:	4b05      	ldr	r3, [pc, #20]	@ (8003f70 <SysTick_Handler+0x1c>)
 8003f5a:	681b      	ldr	r3, [r3, #0]
 8003f5c:	f001 fd46 	bl	80059ec <xTaskGetSchedulerState>
 8003f60:	4603      	mov	r3, r0
 8003f62:	2b01      	cmp	r3, #1
 8003f64:	d001      	beq.n	8003f6a <SysTick_Handler+0x16>
 8003f66:	f002 fb3f 	bl	80065e8 <xPortSysTickHandler>
 8003f6a:	bf00      	nop
 8003f6c:	bd80      	pop	{r7, pc}
 8003f6e:	bf00      	nop
 8003f70:	e000e010 	.word	0xe000e010

08003f74 <SVC_Setup>:
 8003f74:	b580      	push	{r7, lr}
 8003f76:	af00      	add	r7, sp, #0
 8003f78:	2100      	movs	r1, #0
 8003f7a:	f06f 0004 	mvn.w	r0, #4
 8003f7e:	f7ff ffbf 	bl	8003f00 <__NVIC_SetPriority>
 8003f82:	bf00      	nop
 8003f84:	bd80      	pop	{r7, pc}
	...

08003f88 <osKernelInitialize>:
 8003f88:	b480      	push	{r7}
 8003f8a:	b083      	sub	sp, #12
 8003f8c:	af00      	add	r7, sp, #0
 8003f8e:	f3ef 8305 	mrs	r3, IPSR
 8003f92:	603b      	str	r3, [r7, #0]
 8003f94:	683b      	ldr	r3, [r7, #0]
 8003f96:	2b00      	cmp	r3, #0
 8003f98:	d003      	beq.n	8003fa2 <osKernelInitialize+0x1a>
 8003f9a:	f06f 0305 	mvn.w	r3, #5
 8003f9e:	607b      	str	r3, [r7, #4]
 8003fa0:	e00c      	b.n	8003fbc <osKernelInitialize+0x34>
 8003fa2:	4b0a      	ldr	r3, [pc, #40]	@ (8003fcc <osKernelInitialize+0x44>)
 8003fa4:	681b      	ldr	r3, [r3, #0]
 8003fa6:	2b00      	cmp	r3, #0
 8003fa8:	d105      	bne.n	8003fb6 <osKernelInitialize+0x2e>
 8003faa:	4b08      	ldr	r3, [pc, #32]	@ (8003fcc <osKernelInitialize+0x44>)
 8003fac:	2201      	movs	r2, #1
 8003fae:	601a      	str	r2, [r3, #0]
 8003fb0:	2300      	movs	r3, #0
 8003fb2:	607b      	str	r3, [r7, #4]
 8003fb4:	e002      	b.n	8003fbc <osKernelInitialize+0x34>
 8003fb6:	f04f 33ff 	mov.w	r3, #4294967295
 8003fba:	607b      	str	r3, [r7, #4]
 8003fbc:	687b      	ldr	r3, [r7, #4]
 8003fbe:	4618      	mov	r0, r3
 8003fc0:	370c      	adds	r7, #12
 8003fc2:	46bd      	mov	sp, r7
 8003fc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fc8:	4770      	bx	lr
 8003fca:	bf00      	nop
 8003fcc:	20000204 	.word	0x20000204

08003fd0 <osKernelStart>:
 8003fd0:	b580      	push	{r7, lr}
 8003fd2:	b082      	sub	sp, #8
 8003fd4:	af00      	add	r7, sp, #0
 8003fd6:	f3ef 8305 	mrs	r3, IPSR
 8003fda:	603b      	str	r3, [r7, #0]
 8003fdc:	683b      	ldr	r3, [r7, #0]
 8003fde:	2b00      	cmp	r3, #0
 8003fe0:	d003      	beq.n	8003fea <osKernelStart+0x1a>
 8003fe2:	f06f 0305 	mvn.w	r3, #5
 8003fe6:	607b      	str	r3, [r7, #4]
 8003fe8:	e010      	b.n	800400c <osKernelStart+0x3c>
 8003fea:	4b0b      	ldr	r3, [pc, #44]	@ (8004018 <osKernelStart+0x48>)
 8003fec:	681b      	ldr	r3, [r3, #0]
 8003fee:	2b01      	cmp	r3, #1
 8003ff0:	d109      	bne.n	8004006 <osKernelStart+0x36>
 8003ff2:	f7ff ffbf 	bl	8003f74 <SVC_Setup>
 8003ff6:	4b08      	ldr	r3, [pc, #32]	@ (8004018 <osKernelStart+0x48>)
 8003ff8:	2202      	movs	r2, #2
 8003ffa:	601a      	str	r2, [r3, #0]
 8003ffc:	f001 f892 	bl	8005124 <vTaskStartScheduler>
 8004000:	2300      	movs	r3, #0
 8004002:	607b      	str	r3, [r7, #4]
 8004004:	e002      	b.n	800400c <osKernelStart+0x3c>
 8004006:	f04f 33ff 	mov.w	r3, #4294967295
 800400a:	607b      	str	r3, [r7, #4]
 800400c:	687b      	ldr	r3, [r7, #4]
 800400e:	4618      	mov	r0, r3
 8004010:	3708      	adds	r7, #8
 8004012:	46bd      	mov	sp, r7
 8004014:	bd80      	pop	{r7, pc}
 8004016:	bf00      	nop
 8004018:	20000204 	.word	0x20000204

0800401c <osThreadNew>:
 800401c:	b580      	push	{r7, lr}
 800401e:	b08e      	sub	sp, #56	@ 0x38
 8004020:	af04      	add	r7, sp, #16
 8004022:	60f8      	str	r0, [r7, #12]
 8004024:	60b9      	str	r1, [r7, #8]
 8004026:	607a      	str	r2, [r7, #4]
 8004028:	2300      	movs	r3, #0
 800402a:	613b      	str	r3, [r7, #16]
 800402c:	f3ef 8305 	mrs	r3, IPSR
 8004030:	617b      	str	r3, [r7, #20]
 8004032:	697b      	ldr	r3, [r7, #20]
 8004034:	2b00      	cmp	r3, #0
 8004036:	d17e      	bne.n	8004136 <osThreadNew+0x11a>
 8004038:	68fb      	ldr	r3, [r7, #12]
 800403a:	2b00      	cmp	r3, #0
 800403c:	d07b      	beq.n	8004136 <osThreadNew+0x11a>
 800403e:	2380      	movs	r3, #128	@ 0x80
 8004040:	623b      	str	r3, [r7, #32]
 8004042:	2318      	movs	r3, #24
 8004044:	61fb      	str	r3, [r7, #28]
 8004046:	2300      	movs	r3, #0
 8004048:	627b      	str	r3, [r7, #36]	@ 0x24
 800404a:	f04f 33ff 	mov.w	r3, #4294967295
 800404e:	61bb      	str	r3, [r7, #24]
 8004050:	687b      	ldr	r3, [r7, #4]
 8004052:	2b00      	cmp	r3, #0
 8004054:	d045      	beq.n	80040e2 <osThreadNew+0xc6>
 8004056:	687b      	ldr	r3, [r7, #4]
 8004058:	681b      	ldr	r3, [r3, #0]
 800405a:	2b00      	cmp	r3, #0
 800405c:	d002      	beq.n	8004064 <osThreadNew+0x48>
 800405e:	687b      	ldr	r3, [r7, #4]
 8004060:	681b      	ldr	r3, [r3, #0]
 8004062:	627b      	str	r3, [r7, #36]	@ 0x24
 8004064:	687b      	ldr	r3, [r7, #4]
 8004066:	699b      	ldr	r3, [r3, #24]
 8004068:	2b00      	cmp	r3, #0
 800406a:	d002      	beq.n	8004072 <osThreadNew+0x56>
 800406c:	687b      	ldr	r3, [r7, #4]
 800406e:	699b      	ldr	r3, [r3, #24]
 8004070:	61fb      	str	r3, [r7, #28]
 8004072:	69fb      	ldr	r3, [r7, #28]
 8004074:	2b00      	cmp	r3, #0
 8004076:	d008      	beq.n	800408a <osThreadNew+0x6e>
 8004078:	69fb      	ldr	r3, [r7, #28]
 800407a:	2b38      	cmp	r3, #56	@ 0x38
 800407c:	d805      	bhi.n	800408a <osThreadNew+0x6e>
 800407e:	687b      	ldr	r3, [r7, #4]
 8004080:	685b      	ldr	r3, [r3, #4]
 8004082:	f003 0301 	and.w	r3, r3, #1
 8004086:	2b00      	cmp	r3, #0
 8004088:	d001      	beq.n	800408e <osThreadNew+0x72>
 800408a:	2300      	movs	r3, #0
 800408c:	e054      	b.n	8004138 <osThreadNew+0x11c>
 800408e:	687b      	ldr	r3, [r7, #4]
 8004090:	695b      	ldr	r3, [r3, #20]
 8004092:	2b00      	cmp	r3, #0
 8004094:	d003      	beq.n	800409e <osThreadNew+0x82>
 8004096:	687b      	ldr	r3, [r7, #4]
 8004098:	695b      	ldr	r3, [r3, #20]
 800409a:	089b      	lsrs	r3, r3, #2
 800409c:	623b      	str	r3, [r7, #32]
 800409e:	687b      	ldr	r3, [r7, #4]
 80040a0:	689b      	ldr	r3, [r3, #8]
 80040a2:	2b00      	cmp	r3, #0
 80040a4:	d00e      	beq.n	80040c4 <osThreadNew+0xa8>
 80040a6:	687b      	ldr	r3, [r7, #4]
 80040a8:	68db      	ldr	r3, [r3, #12]
 80040aa:	2ba7      	cmp	r3, #167	@ 0xa7
 80040ac:	d90a      	bls.n	80040c4 <osThreadNew+0xa8>
 80040ae:	687b      	ldr	r3, [r7, #4]
 80040b0:	691b      	ldr	r3, [r3, #16]
 80040b2:	2b00      	cmp	r3, #0
 80040b4:	d006      	beq.n	80040c4 <osThreadNew+0xa8>
 80040b6:	687b      	ldr	r3, [r7, #4]
 80040b8:	695b      	ldr	r3, [r3, #20]
 80040ba:	2b00      	cmp	r3, #0
 80040bc:	d002      	beq.n	80040c4 <osThreadNew+0xa8>
 80040be:	2301      	movs	r3, #1
 80040c0:	61bb      	str	r3, [r7, #24]
 80040c2:	e010      	b.n	80040e6 <osThreadNew+0xca>
 80040c4:	687b      	ldr	r3, [r7, #4]
 80040c6:	689b      	ldr	r3, [r3, #8]
 80040c8:	2b00      	cmp	r3, #0
 80040ca:	d10c      	bne.n	80040e6 <osThreadNew+0xca>
 80040cc:	687b      	ldr	r3, [r7, #4]
 80040ce:	68db      	ldr	r3, [r3, #12]
 80040d0:	2b00      	cmp	r3, #0
 80040d2:	d108      	bne.n	80040e6 <osThreadNew+0xca>
 80040d4:	687b      	ldr	r3, [r7, #4]
 80040d6:	691b      	ldr	r3, [r3, #16]
 80040d8:	2b00      	cmp	r3, #0
 80040da:	d104      	bne.n	80040e6 <osThreadNew+0xca>
 80040dc:	2300      	movs	r3, #0
 80040de:	61bb      	str	r3, [r7, #24]
 80040e0:	e001      	b.n	80040e6 <osThreadNew+0xca>
 80040e2:	2300      	movs	r3, #0
 80040e4:	61bb      	str	r3, [r7, #24]
 80040e6:	69bb      	ldr	r3, [r7, #24]
 80040e8:	2b01      	cmp	r3, #1
 80040ea:	d110      	bne.n	800410e <osThreadNew+0xf2>
 80040ec:	687b      	ldr	r3, [r7, #4]
 80040ee:	691b      	ldr	r3, [r3, #16]
 80040f0:	687a      	ldr	r2, [r7, #4]
 80040f2:	6892      	ldr	r2, [r2, #8]
 80040f4:	9202      	str	r2, [sp, #8]
 80040f6:	9301      	str	r3, [sp, #4]
 80040f8:	69fb      	ldr	r3, [r7, #28]
 80040fa:	9300      	str	r3, [sp, #0]
 80040fc:	68bb      	ldr	r3, [r7, #8]
 80040fe:	6a3a      	ldr	r2, [r7, #32]
 8004100:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8004102:	68f8      	ldr	r0, [r7, #12]
 8004104:	f000 fe1a 	bl	8004d3c <xTaskCreateStatic>
 8004108:	4603      	mov	r3, r0
 800410a:	613b      	str	r3, [r7, #16]
 800410c:	e013      	b.n	8004136 <osThreadNew+0x11a>
 800410e:	69bb      	ldr	r3, [r7, #24]
 8004110:	2b00      	cmp	r3, #0
 8004112:	d110      	bne.n	8004136 <osThreadNew+0x11a>
 8004114:	6a3b      	ldr	r3, [r7, #32]
 8004116:	b29a      	uxth	r2, r3
 8004118:	f107 0310 	add.w	r3, r7, #16
 800411c:	9301      	str	r3, [sp, #4]
 800411e:	69fb      	ldr	r3, [r7, #28]
 8004120:	9300      	str	r3, [sp, #0]
 8004122:	68bb      	ldr	r3, [r7, #8]
 8004124:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8004126:	68f8      	ldr	r0, [r7, #12]
 8004128:	f000 fe68 	bl	8004dfc <xTaskCreate>
 800412c:	4603      	mov	r3, r0
 800412e:	2b01      	cmp	r3, #1
 8004130:	d001      	beq.n	8004136 <osThreadNew+0x11a>
 8004132:	2300      	movs	r3, #0
 8004134:	613b      	str	r3, [r7, #16]
 8004136:	693b      	ldr	r3, [r7, #16]
 8004138:	4618      	mov	r0, r3
 800413a:	3728      	adds	r7, #40	@ 0x28
 800413c:	46bd      	mov	sp, r7
 800413e:	bd80      	pop	{r7, pc}

08004140 <osDelay>:
 8004140:	b580      	push	{r7, lr}
 8004142:	b084      	sub	sp, #16
 8004144:	af00      	add	r7, sp, #0
 8004146:	6078      	str	r0, [r7, #4]
 8004148:	f3ef 8305 	mrs	r3, IPSR
 800414c:	60bb      	str	r3, [r7, #8]
 800414e:	68bb      	ldr	r3, [r7, #8]
 8004150:	2b00      	cmp	r3, #0
 8004152:	d003      	beq.n	800415c <osDelay+0x1c>
 8004154:	f06f 0305 	mvn.w	r3, #5
 8004158:	60fb      	str	r3, [r7, #12]
 800415a:	e007      	b.n	800416c <osDelay+0x2c>
 800415c:	2300      	movs	r3, #0
 800415e:	60fb      	str	r3, [r7, #12]
 8004160:	687b      	ldr	r3, [r7, #4]
 8004162:	2b00      	cmp	r3, #0
 8004164:	d002      	beq.n	800416c <osDelay+0x2c>
 8004166:	6878      	ldr	r0, [r7, #4]
 8004168:	f000 ffa6 	bl	80050b8 <vTaskDelay>
 800416c:	68fb      	ldr	r3, [r7, #12]
 800416e:	4618      	mov	r0, r3
 8004170:	3710      	adds	r7, #16
 8004172:	46bd      	mov	sp, r7
 8004174:	bd80      	pop	{r7, pc}
	...

08004178 <vApplicationGetIdleTaskMemory>:
 8004178:	b480      	push	{r7}
 800417a:	b085      	sub	sp, #20
 800417c:	af00      	add	r7, sp, #0
 800417e:	60f8      	str	r0, [r7, #12]
 8004180:	60b9      	str	r1, [r7, #8]
 8004182:	607a      	str	r2, [r7, #4]
 8004184:	68fb      	ldr	r3, [r7, #12]
 8004186:	4a07      	ldr	r2, [pc, #28]	@ (80041a4 <vApplicationGetIdleTaskMemory+0x2c>)
 8004188:	601a      	str	r2, [r3, #0]
 800418a:	68bb      	ldr	r3, [r7, #8]
 800418c:	4a06      	ldr	r2, [pc, #24]	@ (80041a8 <vApplicationGetIdleTaskMemory+0x30>)
 800418e:	601a      	str	r2, [r3, #0]
 8004190:	687b      	ldr	r3, [r7, #4]
 8004192:	2280      	movs	r2, #128	@ 0x80
 8004194:	601a      	str	r2, [r3, #0]
 8004196:	bf00      	nop
 8004198:	3714      	adds	r7, #20
 800419a:	46bd      	mov	sp, r7
 800419c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041a0:	4770      	bx	lr
 80041a2:	bf00      	nop
 80041a4:	20000208 	.word	0x20000208
 80041a8:	200002b0 	.word	0x200002b0

080041ac <vApplicationGetTimerTaskMemory>:
 80041ac:	b480      	push	{r7}
 80041ae:	b085      	sub	sp, #20
 80041b0:	af00      	add	r7, sp, #0
 80041b2:	60f8      	str	r0, [r7, #12]
 80041b4:	60b9      	str	r1, [r7, #8]
 80041b6:	607a      	str	r2, [r7, #4]
 80041b8:	68fb      	ldr	r3, [r7, #12]
 80041ba:	4a07      	ldr	r2, [pc, #28]	@ (80041d8 <vApplicationGetTimerTaskMemory+0x2c>)
 80041bc:	601a      	str	r2, [r3, #0]
 80041be:	68bb      	ldr	r3, [r7, #8]
 80041c0:	4a06      	ldr	r2, [pc, #24]	@ (80041dc <vApplicationGetTimerTaskMemory+0x30>)
 80041c2:	601a      	str	r2, [r3, #0]
 80041c4:	687b      	ldr	r3, [r7, #4]
 80041c6:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80041ca:	601a      	str	r2, [r3, #0]
 80041cc:	bf00      	nop
 80041ce:	3714      	adds	r7, #20
 80041d0:	46bd      	mov	sp, r7
 80041d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041d6:	4770      	bx	lr
 80041d8:	200004b0 	.word	0x200004b0
 80041dc:	20000558 	.word	0x20000558

080041e0 <vListInitialise>:
 80041e0:	b480      	push	{r7}
 80041e2:	b083      	sub	sp, #12
 80041e4:	af00      	add	r7, sp, #0
 80041e6:	6078      	str	r0, [r7, #4]
 80041e8:	687b      	ldr	r3, [r7, #4]
 80041ea:	f103 0208 	add.w	r2, r3, #8
 80041ee:	687b      	ldr	r3, [r7, #4]
 80041f0:	605a      	str	r2, [r3, #4]
 80041f2:	687b      	ldr	r3, [r7, #4]
 80041f4:	f04f 32ff 	mov.w	r2, #4294967295
 80041f8:	609a      	str	r2, [r3, #8]
 80041fa:	687b      	ldr	r3, [r7, #4]
 80041fc:	f103 0208 	add.w	r2, r3, #8
 8004200:	687b      	ldr	r3, [r7, #4]
 8004202:	60da      	str	r2, [r3, #12]
 8004204:	687b      	ldr	r3, [r7, #4]
 8004206:	f103 0208 	add.w	r2, r3, #8
 800420a:	687b      	ldr	r3, [r7, #4]
 800420c:	611a      	str	r2, [r3, #16]
 800420e:	687b      	ldr	r3, [r7, #4]
 8004210:	2200      	movs	r2, #0
 8004212:	601a      	str	r2, [r3, #0]
 8004214:	bf00      	nop
 8004216:	370c      	adds	r7, #12
 8004218:	46bd      	mov	sp, r7
 800421a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800421e:	4770      	bx	lr

08004220 <vListInitialiseItem>:
 8004220:	b480      	push	{r7}
 8004222:	b083      	sub	sp, #12
 8004224:	af00      	add	r7, sp, #0
 8004226:	6078      	str	r0, [r7, #4]
 8004228:	687b      	ldr	r3, [r7, #4]
 800422a:	2200      	movs	r2, #0
 800422c:	611a      	str	r2, [r3, #16]
 800422e:	bf00      	nop
 8004230:	370c      	adds	r7, #12
 8004232:	46bd      	mov	sp, r7
 8004234:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004238:	4770      	bx	lr

0800423a <vListInsertEnd>:
 800423a:	b480      	push	{r7}
 800423c:	b085      	sub	sp, #20
 800423e:	af00      	add	r7, sp, #0
 8004240:	6078      	str	r0, [r7, #4]
 8004242:	6039      	str	r1, [r7, #0]
 8004244:	687b      	ldr	r3, [r7, #4]
 8004246:	685b      	ldr	r3, [r3, #4]
 8004248:	60fb      	str	r3, [r7, #12]
 800424a:	683b      	ldr	r3, [r7, #0]
 800424c:	68fa      	ldr	r2, [r7, #12]
 800424e:	605a      	str	r2, [r3, #4]
 8004250:	68fb      	ldr	r3, [r7, #12]
 8004252:	689a      	ldr	r2, [r3, #8]
 8004254:	683b      	ldr	r3, [r7, #0]
 8004256:	609a      	str	r2, [r3, #8]
 8004258:	68fb      	ldr	r3, [r7, #12]
 800425a:	689b      	ldr	r3, [r3, #8]
 800425c:	683a      	ldr	r2, [r7, #0]
 800425e:	605a      	str	r2, [r3, #4]
 8004260:	68fb      	ldr	r3, [r7, #12]
 8004262:	683a      	ldr	r2, [r7, #0]
 8004264:	609a      	str	r2, [r3, #8]
 8004266:	683b      	ldr	r3, [r7, #0]
 8004268:	687a      	ldr	r2, [r7, #4]
 800426a:	611a      	str	r2, [r3, #16]
 800426c:	687b      	ldr	r3, [r7, #4]
 800426e:	681b      	ldr	r3, [r3, #0]
 8004270:	1c5a      	adds	r2, r3, #1
 8004272:	687b      	ldr	r3, [r7, #4]
 8004274:	601a      	str	r2, [r3, #0]
 8004276:	bf00      	nop
 8004278:	3714      	adds	r7, #20
 800427a:	46bd      	mov	sp, r7
 800427c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004280:	4770      	bx	lr

08004282 <vListInsert>:
 8004282:	b480      	push	{r7}
 8004284:	b085      	sub	sp, #20
 8004286:	af00      	add	r7, sp, #0
 8004288:	6078      	str	r0, [r7, #4]
 800428a:	6039      	str	r1, [r7, #0]
 800428c:	683b      	ldr	r3, [r7, #0]
 800428e:	681b      	ldr	r3, [r3, #0]
 8004290:	60bb      	str	r3, [r7, #8]
 8004292:	68bb      	ldr	r3, [r7, #8]
 8004294:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004298:	d103      	bne.n	80042a2 <vListInsert+0x20>
 800429a:	687b      	ldr	r3, [r7, #4]
 800429c:	691b      	ldr	r3, [r3, #16]
 800429e:	60fb      	str	r3, [r7, #12]
 80042a0:	e00c      	b.n	80042bc <vListInsert+0x3a>
 80042a2:	687b      	ldr	r3, [r7, #4]
 80042a4:	3308      	adds	r3, #8
 80042a6:	60fb      	str	r3, [r7, #12]
 80042a8:	e002      	b.n	80042b0 <vListInsert+0x2e>
 80042aa:	68fb      	ldr	r3, [r7, #12]
 80042ac:	685b      	ldr	r3, [r3, #4]
 80042ae:	60fb      	str	r3, [r7, #12]
 80042b0:	68fb      	ldr	r3, [r7, #12]
 80042b2:	685b      	ldr	r3, [r3, #4]
 80042b4:	681b      	ldr	r3, [r3, #0]
 80042b6:	68ba      	ldr	r2, [r7, #8]
 80042b8:	429a      	cmp	r2, r3
 80042ba:	d2f6      	bcs.n	80042aa <vListInsert+0x28>
 80042bc:	68fb      	ldr	r3, [r7, #12]
 80042be:	685a      	ldr	r2, [r3, #4]
 80042c0:	683b      	ldr	r3, [r7, #0]
 80042c2:	605a      	str	r2, [r3, #4]
 80042c4:	683b      	ldr	r3, [r7, #0]
 80042c6:	685b      	ldr	r3, [r3, #4]
 80042c8:	683a      	ldr	r2, [r7, #0]
 80042ca:	609a      	str	r2, [r3, #8]
 80042cc:	683b      	ldr	r3, [r7, #0]
 80042ce:	68fa      	ldr	r2, [r7, #12]
 80042d0:	609a      	str	r2, [r3, #8]
 80042d2:	68fb      	ldr	r3, [r7, #12]
 80042d4:	683a      	ldr	r2, [r7, #0]
 80042d6:	605a      	str	r2, [r3, #4]
 80042d8:	683b      	ldr	r3, [r7, #0]
 80042da:	687a      	ldr	r2, [r7, #4]
 80042dc:	611a      	str	r2, [r3, #16]
 80042de:	687b      	ldr	r3, [r7, #4]
 80042e0:	681b      	ldr	r3, [r3, #0]
 80042e2:	1c5a      	adds	r2, r3, #1
 80042e4:	687b      	ldr	r3, [r7, #4]
 80042e6:	601a      	str	r2, [r3, #0]
 80042e8:	bf00      	nop
 80042ea:	3714      	adds	r7, #20
 80042ec:	46bd      	mov	sp, r7
 80042ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042f2:	4770      	bx	lr

080042f4 <uxListRemove>:
 80042f4:	b480      	push	{r7}
 80042f6:	b085      	sub	sp, #20
 80042f8:	af00      	add	r7, sp, #0
 80042fa:	6078      	str	r0, [r7, #4]
 80042fc:	687b      	ldr	r3, [r7, #4]
 80042fe:	691b      	ldr	r3, [r3, #16]
 8004300:	60fb      	str	r3, [r7, #12]
 8004302:	687b      	ldr	r3, [r7, #4]
 8004304:	685b      	ldr	r3, [r3, #4]
 8004306:	687a      	ldr	r2, [r7, #4]
 8004308:	6892      	ldr	r2, [r2, #8]
 800430a:	609a      	str	r2, [r3, #8]
 800430c:	687b      	ldr	r3, [r7, #4]
 800430e:	689b      	ldr	r3, [r3, #8]
 8004310:	687a      	ldr	r2, [r7, #4]
 8004312:	6852      	ldr	r2, [r2, #4]
 8004314:	605a      	str	r2, [r3, #4]
 8004316:	68fb      	ldr	r3, [r7, #12]
 8004318:	685b      	ldr	r3, [r3, #4]
 800431a:	687a      	ldr	r2, [r7, #4]
 800431c:	429a      	cmp	r2, r3
 800431e:	d103      	bne.n	8004328 <uxListRemove+0x34>
 8004320:	687b      	ldr	r3, [r7, #4]
 8004322:	689a      	ldr	r2, [r3, #8]
 8004324:	68fb      	ldr	r3, [r7, #12]
 8004326:	605a      	str	r2, [r3, #4]
 8004328:	687b      	ldr	r3, [r7, #4]
 800432a:	2200      	movs	r2, #0
 800432c:	611a      	str	r2, [r3, #16]
 800432e:	68fb      	ldr	r3, [r7, #12]
 8004330:	681b      	ldr	r3, [r3, #0]
 8004332:	1e5a      	subs	r2, r3, #1
 8004334:	68fb      	ldr	r3, [r7, #12]
 8004336:	601a      	str	r2, [r3, #0]
 8004338:	68fb      	ldr	r3, [r7, #12]
 800433a:	681b      	ldr	r3, [r3, #0]
 800433c:	4618      	mov	r0, r3
 800433e:	3714      	adds	r7, #20
 8004340:	46bd      	mov	sp, r7
 8004342:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004346:	4770      	bx	lr

08004348 <xQueueGenericReset>:
 8004348:	b580      	push	{r7, lr}
 800434a:	b084      	sub	sp, #16
 800434c:	af00      	add	r7, sp, #0
 800434e:	6078      	str	r0, [r7, #4]
 8004350:	6039      	str	r1, [r7, #0]
 8004352:	687b      	ldr	r3, [r7, #4]
 8004354:	60fb      	str	r3, [r7, #12]
 8004356:	68fb      	ldr	r3, [r7, #12]
 8004358:	2b00      	cmp	r3, #0
 800435a:	d10b      	bne.n	8004374 <xQueueGenericReset+0x2c>
 800435c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004360:	f383 8811 	msr	BASEPRI, r3
 8004364:	f3bf 8f6f 	isb	sy
 8004368:	f3bf 8f4f 	dsb	sy
 800436c:	60bb      	str	r3, [r7, #8]
 800436e:	bf00      	nop
 8004370:	bf00      	nop
 8004372:	e7fd      	b.n	8004370 <xQueueGenericReset+0x28>
 8004374:	f002 f8a8 	bl	80064c8 <vPortEnterCritical>
 8004378:	68fb      	ldr	r3, [r7, #12]
 800437a:	681a      	ldr	r2, [r3, #0]
 800437c:	68fb      	ldr	r3, [r7, #12]
 800437e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004380:	68f9      	ldr	r1, [r7, #12]
 8004382:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 8004384:	fb01 f303 	mul.w	r3, r1, r3
 8004388:	441a      	add	r2, r3
 800438a:	68fb      	ldr	r3, [r7, #12]
 800438c:	609a      	str	r2, [r3, #8]
 800438e:	68fb      	ldr	r3, [r7, #12]
 8004390:	2200      	movs	r2, #0
 8004392:	639a      	str	r2, [r3, #56]	@ 0x38
 8004394:	68fb      	ldr	r3, [r7, #12]
 8004396:	681a      	ldr	r2, [r3, #0]
 8004398:	68fb      	ldr	r3, [r7, #12]
 800439a:	605a      	str	r2, [r3, #4]
 800439c:	68fb      	ldr	r3, [r7, #12]
 800439e:	681a      	ldr	r2, [r3, #0]
 80043a0:	68fb      	ldr	r3, [r7, #12]
 80043a2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80043a4:	3b01      	subs	r3, #1
 80043a6:	68f9      	ldr	r1, [r7, #12]
 80043a8:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 80043aa:	fb01 f303 	mul.w	r3, r1, r3
 80043ae:	441a      	add	r2, r3
 80043b0:	68fb      	ldr	r3, [r7, #12]
 80043b2:	60da      	str	r2, [r3, #12]
 80043b4:	68fb      	ldr	r3, [r7, #12]
 80043b6:	22ff      	movs	r2, #255	@ 0xff
 80043b8:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80043bc:	68fb      	ldr	r3, [r7, #12]
 80043be:	22ff      	movs	r2, #255	@ 0xff
 80043c0:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80043c4:	683b      	ldr	r3, [r7, #0]
 80043c6:	2b00      	cmp	r3, #0
 80043c8:	d114      	bne.n	80043f4 <xQueueGenericReset+0xac>
 80043ca:	68fb      	ldr	r3, [r7, #12]
 80043cc:	691b      	ldr	r3, [r3, #16]
 80043ce:	2b00      	cmp	r3, #0
 80043d0:	d01a      	beq.n	8004408 <xQueueGenericReset+0xc0>
 80043d2:	68fb      	ldr	r3, [r7, #12]
 80043d4:	3310      	adds	r3, #16
 80043d6:	4618      	mov	r0, r3
 80043d8:	f001 f942 	bl	8005660 <xTaskRemoveFromEventList>
 80043dc:	4603      	mov	r3, r0
 80043de:	2b00      	cmp	r3, #0
 80043e0:	d012      	beq.n	8004408 <xQueueGenericReset+0xc0>
 80043e2:	4b0d      	ldr	r3, [pc, #52]	@ (8004418 <xQueueGenericReset+0xd0>)
 80043e4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80043e8:	601a      	str	r2, [r3, #0]
 80043ea:	f3bf 8f4f 	dsb	sy
 80043ee:	f3bf 8f6f 	isb	sy
 80043f2:	e009      	b.n	8004408 <xQueueGenericReset+0xc0>
 80043f4:	68fb      	ldr	r3, [r7, #12]
 80043f6:	3310      	adds	r3, #16
 80043f8:	4618      	mov	r0, r3
 80043fa:	f7ff fef1 	bl	80041e0 <vListInitialise>
 80043fe:	68fb      	ldr	r3, [r7, #12]
 8004400:	3324      	adds	r3, #36	@ 0x24
 8004402:	4618      	mov	r0, r3
 8004404:	f7ff feec 	bl	80041e0 <vListInitialise>
 8004408:	f002 f890 	bl	800652c <vPortExitCritical>
 800440c:	2301      	movs	r3, #1
 800440e:	4618      	mov	r0, r3
 8004410:	3710      	adds	r7, #16
 8004412:	46bd      	mov	sp, r7
 8004414:	bd80      	pop	{r7, pc}
 8004416:	bf00      	nop
 8004418:	e000ed04 	.word	0xe000ed04

0800441c <xQueueGenericCreateStatic>:
 800441c:	b580      	push	{r7, lr}
 800441e:	b08e      	sub	sp, #56	@ 0x38
 8004420:	af02      	add	r7, sp, #8
 8004422:	60f8      	str	r0, [r7, #12]
 8004424:	60b9      	str	r1, [r7, #8]
 8004426:	607a      	str	r2, [r7, #4]
 8004428:	603b      	str	r3, [r7, #0]
 800442a:	68fb      	ldr	r3, [r7, #12]
 800442c:	2b00      	cmp	r3, #0
 800442e:	d10b      	bne.n	8004448 <xQueueGenericCreateStatic+0x2c>
 8004430:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004434:	f383 8811 	msr	BASEPRI, r3
 8004438:	f3bf 8f6f 	isb	sy
 800443c:	f3bf 8f4f 	dsb	sy
 8004440:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004442:	bf00      	nop
 8004444:	bf00      	nop
 8004446:	e7fd      	b.n	8004444 <xQueueGenericCreateStatic+0x28>
 8004448:	683b      	ldr	r3, [r7, #0]
 800444a:	2b00      	cmp	r3, #0
 800444c:	d10b      	bne.n	8004466 <xQueueGenericCreateStatic+0x4a>
 800444e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004452:	f383 8811 	msr	BASEPRI, r3
 8004456:	f3bf 8f6f 	isb	sy
 800445a:	f3bf 8f4f 	dsb	sy
 800445e:	627b      	str	r3, [r7, #36]	@ 0x24
 8004460:	bf00      	nop
 8004462:	bf00      	nop
 8004464:	e7fd      	b.n	8004462 <xQueueGenericCreateStatic+0x46>
 8004466:	687b      	ldr	r3, [r7, #4]
 8004468:	2b00      	cmp	r3, #0
 800446a:	d002      	beq.n	8004472 <xQueueGenericCreateStatic+0x56>
 800446c:	68bb      	ldr	r3, [r7, #8]
 800446e:	2b00      	cmp	r3, #0
 8004470:	d001      	beq.n	8004476 <xQueueGenericCreateStatic+0x5a>
 8004472:	2301      	movs	r3, #1
 8004474:	e000      	b.n	8004478 <xQueueGenericCreateStatic+0x5c>
 8004476:	2300      	movs	r3, #0
 8004478:	2b00      	cmp	r3, #0
 800447a:	d10b      	bne.n	8004494 <xQueueGenericCreateStatic+0x78>
 800447c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004480:	f383 8811 	msr	BASEPRI, r3
 8004484:	f3bf 8f6f 	isb	sy
 8004488:	f3bf 8f4f 	dsb	sy
 800448c:	623b      	str	r3, [r7, #32]
 800448e:	bf00      	nop
 8004490:	bf00      	nop
 8004492:	e7fd      	b.n	8004490 <xQueueGenericCreateStatic+0x74>
 8004494:	687b      	ldr	r3, [r7, #4]
 8004496:	2b00      	cmp	r3, #0
 8004498:	d102      	bne.n	80044a0 <xQueueGenericCreateStatic+0x84>
 800449a:	68bb      	ldr	r3, [r7, #8]
 800449c:	2b00      	cmp	r3, #0
 800449e:	d101      	bne.n	80044a4 <xQueueGenericCreateStatic+0x88>
 80044a0:	2301      	movs	r3, #1
 80044a2:	e000      	b.n	80044a6 <xQueueGenericCreateStatic+0x8a>
 80044a4:	2300      	movs	r3, #0
 80044a6:	2b00      	cmp	r3, #0
 80044a8:	d10b      	bne.n	80044c2 <xQueueGenericCreateStatic+0xa6>
 80044aa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80044ae:	f383 8811 	msr	BASEPRI, r3
 80044b2:	f3bf 8f6f 	isb	sy
 80044b6:	f3bf 8f4f 	dsb	sy
 80044ba:	61fb      	str	r3, [r7, #28]
 80044bc:	bf00      	nop
 80044be:	bf00      	nop
 80044c0:	e7fd      	b.n	80044be <xQueueGenericCreateStatic+0xa2>
 80044c2:	2350      	movs	r3, #80	@ 0x50
 80044c4:	617b      	str	r3, [r7, #20]
 80044c6:	697b      	ldr	r3, [r7, #20]
 80044c8:	2b50      	cmp	r3, #80	@ 0x50
 80044ca:	d00b      	beq.n	80044e4 <xQueueGenericCreateStatic+0xc8>
 80044cc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80044d0:	f383 8811 	msr	BASEPRI, r3
 80044d4:	f3bf 8f6f 	isb	sy
 80044d8:	f3bf 8f4f 	dsb	sy
 80044dc:	61bb      	str	r3, [r7, #24]
 80044de:	bf00      	nop
 80044e0:	bf00      	nop
 80044e2:	e7fd      	b.n	80044e0 <xQueueGenericCreateStatic+0xc4>
 80044e4:	697b      	ldr	r3, [r7, #20]
 80044e6:	683b      	ldr	r3, [r7, #0]
 80044e8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80044ea:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80044ec:	2b00      	cmp	r3, #0
 80044ee:	d00d      	beq.n	800450c <xQueueGenericCreateStatic+0xf0>
 80044f0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80044f2:	2201      	movs	r2, #1
 80044f4:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80044f8:	f897 2038 	ldrb.w	r2, [r7, #56]	@ 0x38
 80044fc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80044fe:	9300      	str	r3, [sp, #0]
 8004500:	4613      	mov	r3, r2
 8004502:	687a      	ldr	r2, [r7, #4]
 8004504:	68b9      	ldr	r1, [r7, #8]
 8004506:	68f8      	ldr	r0, [r7, #12]
 8004508:	f000 f805 	bl	8004516 <prvInitialiseNewQueue>
 800450c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800450e:	4618      	mov	r0, r3
 8004510:	3730      	adds	r7, #48	@ 0x30
 8004512:	46bd      	mov	sp, r7
 8004514:	bd80      	pop	{r7, pc}

08004516 <prvInitialiseNewQueue>:
 8004516:	b580      	push	{r7, lr}
 8004518:	b084      	sub	sp, #16
 800451a:	af00      	add	r7, sp, #0
 800451c:	60f8      	str	r0, [r7, #12]
 800451e:	60b9      	str	r1, [r7, #8]
 8004520:	607a      	str	r2, [r7, #4]
 8004522:	70fb      	strb	r3, [r7, #3]
 8004524:	68bb      	ldr	r3, [r7, #8]
 8004526:	2b00      	cmp	r3, #0
 8004528:	d103      	bne.n	8004532 <prvInitialiseNewQueue+0x1c>
 800452a:	69bb      	ldr	r3, [r7, #24]
 800452c:	69ba      	ldr	r2, [r7, #24]
 800452e:	601a      	str	r2, [r3, #0]
 8004530:	e002      	b.n	8004538 <prvInitialiseNewQueue+0x22>
 8004532:	69bb      	ldr	r3, [r7, #24]
 8004534:	687a      	ldr	r2, [r7, #4]
 8004536:	601a      	str	r2, [r3, #0]
 8004538:	69bb      	ldr	r3, [r7, #24]
 800453a:	68fa      	ldr	r2, [r7, #12]
 800453c:	63da      	str	r2, [r3, #60]	@ 0x3c
 800453e:	69bb      	ldr	r3, [r7, #24]
 8004540:	68ba      	ldr	r2, [r7, #8]
 8004542:	641a      	str	r2, [r3, #64]	@ 0x40
 8004544:	2101      	movs	r1, #1
 8004546:	69b8      	ldr	r0, [r7, #24]
 8004548:	f7ff fefe 	bl	8004348 <xQueueGenericReset>
 800454c:	69bb      	ldr	r3, [r7, #24]
 800454e:	78fa      	ldrb	r2, [r7, #3]
 8004550:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
 8004554:	bf00      	nop
 8004556:	3710      	adds	r7, #16
 8004558:	46bd      	mov	sp, r7
 800455a:	bd80      	pop	{r7, pc}

0800455c <xQueueGenericSend>:
 800455c:	b580      	push	{r7, lr}
 800455e:	b08e      	sub	sp, #56	@ 0x38
 8004560:	af00      	add	r7, sp, #0
 8004562:	60f8      	str	r0, [r7, #12]
 8004564:	60b9      	str	r1, [r7, #8]
 8004566:	607a      	str	r2, [r7, #4]
 8004568:	603b      	str	r3, [r7, #0]
 800456a:	2300      	movs	r3, #0
 800456c:	637b      	str	r3, [r7, #52]	@ 0x34
 800456e:	68fb      	ldr	r3, [r7, #12]
 8004570:	633b      	str	r3, [r7, #48]	@ 0x30
 8004572:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004574:	2b00      	cmp	r3, #0
 8004576:	d10b      	bne.n	8004590 <xQueueGenericSend+0x34>
 8004578:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800457c:	f383 8811 	msr	BASEPRI, r3
 8004580:	f3bf 8f6f 	isb	sy
 8004584:	f3bf 8f4f 	dsb	sy
 8004588:	62bb      	str	r3, [r7, #40]	@ 0x28
 800458a:	bf00      	nop
 800458c:	bf00      	nop
 800458e:	e7fd      	b.n	800458c <xQueueGenericSend+0x30>
 8004590:	68bb      	ldr	r3, [r7, #8]
 8004592:	2b00      	cmp	r3, #0
 8004594:	d103      	bne.n	800459e <xQueueGenericSend+0x42>
 8004596:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004598:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800459a:	2b00      	cmp	r3, #0
 800459c:	d101      	bne.n	80045a2 <xQueueGenericSend+0x46>
 800459e:	2301      	movs	r3, #1
 80045a0:	e000      	b.n	80045a4 <xQueueGenericSend+0x48>
 80045a2:	2300      	movs	r3, #0
 80045a4:	2b00      	cmp	r3, #0
 80045a6:	d10b      	bne.n	80045c0 <xQueueGenericSend+0x64>
 80045a8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80045ac:	f383 8811 	msr	BASEPRI, r3
 80045b0:	f3bf 8f6f 	isb	sy
 80045b4:	f3bf 8f4f 	dsb	sy
 80045b8:	627b      	str	r3, [r7, #36]	@ 0x24
 80045ba:	bf00      	nop
 80045bc:	bf00      	nop
 80045be:	e7fd      	b.n	80045bc <xQueueGenericSend+0x60>
 80045c0:	683b      	ldr	r3, [r7, #0]
 80045c2:	2b02      	cmp	r3, #2
 80045c4:	d103      	bne.n	80045ce <xQueueGenericSend+0x72>
 80045c6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80045c8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80045ca:	2b01      	cmp	r3, #1
 80045cc:	d101      	bne.n	80045d2 <xQueueGenericSend+0x76>
 80045ce:	2301      	movs	r3, #1
 80045d0:	e000      	b.n	80045d4 <xQueueGenericSend+0x78>
 80045d2:	2300      	movs	r3, #0
 80045d4:	2b00      	cmp	r3, #0
 80045d6:	d10b      	bne.n	80045f0 <xQueueGenericSend+0x94>
 80045d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80045dc:	f383 8811 	msr	BASEPRI, r3
 80045e0:	f3bf 8f6f 	isb	sy
 80045e4:	f3bf 8f4f 	dsb	sy
 80045e8:	623b      	str	r3, [r7, #32]
 80045ea:	bf00      	nop
 80045ec:	bf00      	nop
 80045ee:	e7fd      	b.n	80045ec <xQueueGenericSend+0x90>
 80045f0:	f001 f9fc 	bl	80059ec <xTaskGetSchedulerState>
 80045f4:	4603      	mov	r3, r0
 80045f6:	2b00      	cmp	r3, #0
 80045f8:	d102      	bne.n	8004600 <xQueueGenericSend+0xa4>
 80045fa:	687b      	ldr	r3, [r7, #4]
 80045fc:	2b00      	cmp	r3, #0
 80045fe:	d101      	bne.n	8004604 <xQueueGenericSend+0xa8>
 8004600:	2301      	movs	r3, #1
 8004602:	e000      	b.n	8004606 <xQueueGenericSend+0xaa>
 8004604:	2300      	movs	r3, #0
 8004606:	2b00      	cmp	r3, #0
 8004608:	d10b      	bne.n	8004622 <xQueueGenericSend+0xc6>
 800460a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800460e:	f383 8811 	msr	BASEPRI, r3
 8004612:	f3bf 8f6f 	isb	sy
 8004616:	f3bf 8f4f 	dsb	sy
 800461a:	61fb      	str	r3, [r7, #28]
 800461c:	bf00      	nop
 800461e:	bf00      	nop
 8004620:	e7fd      	b.n	800461e <xQueueGenericSend+0xc2>
 8004622:	f001 ff51 	bl	80064c8 <vPortEnterCritical>
 8004626:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004628:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800462a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800462c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800462e:	429a      	cmp	r2, r3
 8004630:	d302      	bcc.n	8004638 <xQueueGenericSend+0xdc>
 8004632:	683b      	ldr	r3, [r7, #0]
 8004634:	2b02      	cmp	r3, #2
 8004636:	d129      	bne.n	800468c <xQueueGenericSend+0x130>
 8004638:	683a      	ldr	r2, [r7, #0]
 800463a:	68b9      	ldr	r1, [r7, #8]
 800463c:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 800463e:	f000 fa0f 	bl	8004a60 <prvCopyDataToQueue>
 8004642:	62f8      	str	r0, [r7, #44]	@ 0x2c
 8004644:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004646:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004648:	2b00      	cmp	r3, #0
 800464a:	d010      	beq.n	800466e <xQueueGenericSend+0x112>
 800464c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800464e:	3324      	adds	r3, #36	@ 0x24
 8004650:	4618      	mov	r0, r3
 8004652:	f001 f805 	bl	8005660 <xTaskRemoveFromEventList>
 8004656:	4603      	mov	r3, r0
 8004658:	2b00      	cmp	r3, #0
 800465a:	d013      	beq.n	8004684 <xQueueGenericSend+0x128>
 800465c:	4b3f      	ldr	r3, [pc, #252]	@ (800475c <xQueueGenericSend+0x200>)
 800465e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8004662:	601a      	str	r2, [r3, #0]
 8004664:	f3bf 8f4f 	dsb	sy
 8004668:	f3bf 8f6f 	isb	sy
 800466c:	e00a      	b.n	8004684 <xQueueGenericSend+0x128>
 800466e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004670:	2b00      	cmp	r3, #0
 8004672:	d007      	beq.n	8004684 <xQueueGenericSend+0x128>
 8004674:	4b39      	ldr	r3, [pc, #228]	@ (800475c <xQueueGenericSend+0x200>)
 8004676:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800467a:	601a      	str	r2, [r3, #0]
 800467c:	f3bf 8f4f 	dsb	sy
 8004680:	f3bf 8f6f 	isb	sy
 8004684:	f001 ff52 	bl	800652c <vPortExitCritical>
 8004688:	2301      	movs	r3, #1
 800468a:	e063      	b.n	8004754 <xQueueGenericSend+0x1f8>
 800468c:	687b      	ldr	r3, [r7, #4]
 800468e:	2b00      	cmp	r3, #0
 8004690:	d103      	bne.n	800469a <xQueueGenericSend+0x13e>
 8004692:	f001 ff4b 	bl	800652c <vPortExitCritical>
 8004696:	2300      	movs	r3, #0
 8004698:	e05c      	b.n	8004754 <xQueueGenericSend+0x1f8>
 800469a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800469c:	2b00      	cmp	r3, #0
 800469e:	d106      	bne.n	80046ae <xQueueGenericSend+0x152>
 80046a0:	f107 0314 	add.w	r3, r7, #20
 80046a4:	4618      	mov	r0, r3
 80046a6:	f001 f83f 	bl	8005728 <vTaskInternalSetTimeOutState>
 80046aa:	2301      	movs	r3, #1
 80046ac:	637b      	str	r3, [r7, #52]	@ 0x34
 80046ae:	f001 ff3d 	bl	800652c <vPortExitCritical>
 80046b2:	f000 fda7 	bl	8005204 <vTaskSuspendAll>
 80046b6:	f001 ff07 	bl	80064c8 <vPortEnterCritical>
 80046ba:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80046bc:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 80046c0:	b25b      	sxtb	r3, r3
 80046c2:	f1b3 3fff 	cmp.w	r3, #4294967295
 80046c6:	d103      	bne.n	80046d0 <xQueueGenericSend+0x174>
 80046c8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80046ca:	2200      	movs	r2, #0
 80046cc:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80046d0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80046d2:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 80046d6:	b25b      	sxtb	r3, r3
 80046d8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80046dc:	d103      	bne.n	80046e6 <xQueueGenericSend+0x18a>
 80046de:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80046e0:	2200      	movs	r2, #0
 80046e2:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80046e6:	f001 ff21 	bl	800652c <vPortExitCritical>
 80046ea:	1d3a      	adds	r2, r7, #4
 80046ec:	f107 0314 	add.w	r3, r7, #20
 80046f0:	4611      	mov	r1, r2
 80046f2:	4618      	mov	r0, r3
 80046f4:	f001 f82e 	bl	8005754 <xTaskCheckForTimeOut>
 80046f8:	4603      	mov	r3, r0
 80046fa:	2b00      	cmp	r3, #0
 80046fc:	d124      	bne.n	8004748 <xQueueGenericSend+0x1ec>
 80046fe:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8004700:	f000 faa6 	bl	8004c50 <prvIsQueueFull>
 8004704:	4603      	mov	r3, r0
 8004706:	2b00      	cmp	r3, #0
 8004708:	d018      	beq.n	800473c <xQueueGenericSend+0x1e0>
 800470a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800470c:	3310      	adds	r3, #16
 800470e:	687a      	ldr	r2, [r7, #4]
 8004710:	4611      	mov	r1, r2
 8004712:	4618      	mov	r0, r3
 8004714:	f000 ff52 	bl	80055bc <vTaskPlaceOnEventList>
 8004718:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 800471a:	f000 fa31 	bl	8004b80 <prvUnlockQueue>
 800471e:	f000 fd7f 	bl	8005220 <xTaskResumeAll>
 8004722:	4603      	mov	r3, r0
 8004724:	2b00      	cmp	r3, #0
 8004726:	f47f af7c 	bne.w	8004622 <xQueueGenericSend+0xc6>
 800472a:	4b0c      	ldr	r3, [pc, #48]	@ (800475c <xQueueGenericSend+0x200>)
 800472c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8004730:	601a      	str	r2, [r3, #0]
 8004732:	f3bf 8f4f 	dsb	sy
 8004736:	f3bf 8f6f 	isb	sy
 800473a:	e772      	b.n	8004622 <xQueueGenericSend+0xc6>
 800473c:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 800473e:	f000 fa1f 	bl	8004b80 <prvUnlockQueue>
 8004742:	f000 fd6d 	bl	8005220 <xTaskResumeAll>
 8004746:	e76c      	b.n	8004622 <xQueueGenericSend+0xc6>
 8004748:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 800474a:	f000 fa19 	bl	8004b80 <prvUnlockQueue>
 800474e:	f000 fd67 	bl	8005220 <xTaskResumeAll>
 8004752:	2300      	movs	r3, #0
 8004754:	4618      	mov	r0, r3
 8004756:	3738      	adds	r7, #56	@ 0x38
 8004758:	46bd      	mov	sp, r7
 800475a:	bd80      	pop	{r7, pc}
 800475c:	e000ed04 	.word	0xe000ed04

08004760 <xQueueGenericSendFromISR>:
 8004760:	b580      	push	{r7, lr}
 8004762:	b090      	sub	sp, #64	@ 0x40
 8004764:	af00      	add	r7, sp, #0
 8004766:	60f8      	str	r0, [r7, #12]
 8004768:	60b9      	str	r1, [r7, #8]
 800476a:	607a      	str	r2, [r7, #4]
 800476c:	603b      	str	r3, [r7, #0]
 800476e:	68fb      	ldr	r3, [r7, #12]
 8004770:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004772:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004774:	2b00      	cmp	r3, #0
 8004776:	d10b      	bne.n	8004790 <xQueueGenericSendFromISR+0x30>
 8004778:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800477c:	f383 8811 	msr	BASEPRI, r3
 8004780:	f3bf 8f6f 	isb	sy
 8004784:	f3bf 8f4f 	dsb	sy
 8004788:	62bb      	str	r3, [r7, #40]	@ 0x28
 800478a:	bf00      	nop
 800478c:	bf00      	nop
 800478e:	e7fd      	b.n	800478c <xQueueGenericSendFromISR+0x2c>
 8004790:	68bb      	ldr	r3, [r7, #8]
 8004792:	2b00      	cmp	r3, #0
 8004794:	d103      	bne.n	800479e <xQueueGenericSendFromISR+0x3e>
 8004796:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004798:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800479a:	2b00      	cmp	r3, #0
 800479c:	d101      	bne.n	80047a2 <xQueueGenericSendFromISR+0x42>
 800479e:	2301      	movs	r3, #1
 80047a0:	e000      	b.n	80047a4 <xQueueGenericSendFromISR+0x44>
 80047a2:	2300      	movs	r3, #0
 80047a4:	2b00      	cmp	r3, #0
 80047a6:	d10b      	bne.n	80047c0 <xQueueGenericSendFromISR+0x60>
 80047a8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80047ac:	f383 8811 	msr	BASEPRI, r3
 80047b0:	f3bf 8f6f 	isb	sy
 80047b4:	f3bf 8f4f 	dsb	sy
 80047b8:	627b      	str	r3, [r7, #36]	@ 0x24
 80047ba:	bf00      	nop
 80047bc:	bf00      	nop
 80047be:	e7fd      	b.n	80047bc <xQueueGenericSendFromISR+0x5c>
 80047c0:	683b      	ldr	r3, [r7, #0]
 80047c2:	2b02      	cmp	r3, #2
 80047c4:	d103      	bne.n	80047ce <xQueueGenericSendFromISR+0x6e>
 80047c6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80047c8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80047ca:	2b01      	cmp	r3, #1
 80047cc:	d101      	bne.n	80047d2 <xQueueGenericSendFromISR+0x72>
 80047ce:	2301      	movs	r3, #1
 80047d0:	e000      	b.n	80047d4 <xQueueGenericSendFromISR+0x74>
 80047d2:	2300      	movs	r3, #0
 80047d4:	2b00      	cmp	r3, #0
 80047d6:	d10b      	bne.n	80047f0 <xQueueGenericSendFromISR+0x90>
 80047d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80047dc:	f383 8811 	msr	BASEPRI, r3
 80047e0:	f3bf 8f6f 	isb	sy
 80047e4:	f3bf 8f4f 	dsb	sy
 80047e8:	623b      	str	r3, [r7, #32]
 80047ea:	bf00      	nop
 80047ec:	bf00      	nop
 80047ee:	e7fd      	b.n	80047ec <xQueueGenericSendFromISR+0x8c>
 80047f0:	f001 ff4a 	bl	8006688 <vPortValidateInterruptPriority>
 80047f4:	f3ef 8211 	mrs	r2, BASEPRI
 80047f8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80047fc:	f383 8811 	msr	BASEPRI, r3
 8004800:	f3bf 8f6f 	isb	sy
 8004804:	f3bf 8f4f 	dsb	sy
 8004808:	61fa      	str	r2, [r7, #28]
 800480a:	61bb      	str	r3, [r7, #24]
 800480c:	69fb      	ldr	r3, [r7, #28]
 800480e:	637b      	str	r3, [r7, #52]	@ 0x34
 8004810:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004812:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8004814:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004816:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004818:	429a      	cmp	r2, r3
 800481a:	d302      	bcc.n	8004822 <xQueueGenericSendFromISR+0xc2>
 800481c:	683b      	ldr	r3, [r7, #0]
 800481e:	2b02      	cmp	r3, #2
 8004820:	d12f      	bne.n	8004882 <xQueueGenericSendFromISR+0x122>
 8004822:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004824:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8004828:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 800482c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800482e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004830:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004832:	683a      	ldr	r2, [r7, #0]
 8004834:	68b9      	ldr	r1, [r7, #8]
 8004836:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 8004838:	f000 f912 	bl	8004a60 <prvCopyDataToQueue>
 800483c:	f997 3033 	ldrsb.w	r3, [r7, #51]	@ 0x33
 8004840:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004844:	d112      	bne.n	800486c <xQueueGenericSendFromISR+0x10c>
 8004846:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004848:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800484a:	2b00      	cmp	r3, #0
 800484c:	d016      	beq.n	800487c <xQueueGenericSendFromISR+0x11c>
 800484e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004850:	3324      	adds	r3, #36	@ 0x24
 8004852:	4618      	mov	r0, r3
 8004854:	f000 ff04 	bl	8005660 <xTaskRemoveFromEventList>
 8004858:	4603      	mov	r3, r0
 800485a:	2b00      	cmp	r3, #0
 800485c:	d00e      	beq.n	800487c <xQueueGenericSendFromISR+0x11c>
 800485e:	687b      	ldr	r3, [r7, #4]
 8004860:	2b00      	cmp	r3, #0
 8004862:	d00b      	beq.n	800487c <xQueueGenericSendFromISR+0x11c>
 8004864:	687b      	ldr	r3, [r7, #4]
 8004866:	2201      	movs	r2, #1
 8004868:	601a      	str	r2, [r3, #0]
 800486a:	e007      	b.n	800487c <xQueueGenericSendFromISR+0x11c>
 800486c:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8004870:	3301      	adds	r3, #1
 8004872:	b2db      	uxtb	r3, r3
 8004874:	b25a      	sxtb	r2, r3
 8004876:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004878:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800487c:	2301      	movs	r3, #1
 800487e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004880:	e001      	b.n	8004886 <xQueueGenericSendFromISR+0x126>
 8004882:	2300      	movs	r3, #0
 8004884:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004886:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004888:	617b      	str	r3, [r7, #20]
 800488a:	697b      	ldr	r3, [r7, #20]
 800488c:	f383 8811 	msr	BASEPRI, r3
 8004890:	bf00      	nop
 8004892:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004894:	4618      	mov	r0, r3
 8004896:	3740      	adds	r7, #64	@ 0x40
 8004898:	46bd      	mov	sp, r7
 800489a:	bd80      	pop	{r7, pc}

0800489c <xQueueReceive>:
 800489c:	b580      	push	{r7, lr}
 800489e:	b08c      	sub	sp, #48	@ 0x30
 80048a0:	af00      	add	r7, sp, #0
 80048a2:	60f8      	str	r0, [r7, #12]
 80048a4:	60b9      	str	r1, [r7, #8]
 80048a6:	607a      	str	r2, [r7, #4]
 80048a8:	2300      	movs	r3, #0
 80048aa:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80048ac:	68fb      	ldr	r3, [r7, #12]
 80048ae:	62bb      	str	r3, [r7, #40]	@ 0x28
 80048b0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80048b2:	2b00      	cmp	r3, #0
 80048b4:	d10b      	bne.n	80048ce <xQueueReceive+0x32>
 80048b6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80048ba:	f383 8811 	msr	BASEPRI, r3
 80048be:	f3bf 8f6f 	isb	sy
 80048c2:	f3bf 8f4f 	dsb	sy
 80048c6:	623b      	str	r3, [r7, #32]
 80048c8:	bf00      	nop
 80048ca:	bf00      	nop
 80048cc:	e7fd      	b.n	80048ca <xQueueReceive+0x2e>
 80048ce:	68bb      	ldr	r3, [r7, #8]
 80048d0:	2b00      	cmp	r3, #0
 80048d2:	d103      	bne.n	80048dc <xQueueReceive+0x40>
 80048d4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80048d6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80048d8:	2b00      	cmp	r3, #0
 80048da:	d101      	bne.n	80048e0 <xQueueReceive+0x44>
 80048dc:	2301      	movs	r3, #1
 80048de:	e000      	b.n	80048e2 <xQueueReceive+0x46>
 80048e0:	2300      	movs	r3, #0
 80048e2:	2b00      	cmp	r3, #0
 80048e4:	d10b      	bne.n	80048fe <xQueueReceive+0x62>
 80048e6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80048ea:	f383 8811 	msr	BASEPRI, r3
 80048ee:	f3bf 8f6f 	isb	sy
 80048f2:	f3bf 8f4f 	dsb	sy
 80048f6:	61fb      	str	r3, [r7, #28]
 80048f8:	bf00      	nop
 80048fa:	bf00      	nop
 80048fc:	e7fd      	b.n	80048fa <xQueueReceive+0x5e>
 80048fe:	f001 f875 	bl	80059ec <xTaskGetSchedulerState>
 8004902:	4603      	mov	r3, r0
 8004904:	2b00      	cmp	r3, #0
 8004906:	d102      	bne.n	800490e <xQueueReceive+0x72>
 8004908:	687b      	ldr	r3, [r7, #4]
 800490a:	2b00      	cmp	r3, #0
 800490c:	d101      	bne.n	8004912 <xQueueReceive+0x76>
 800490e:	2301      	movs	r3, #1
 8004910:	e000      	b.n	8004914 <xQueueReceive+0x78>
 8004912:	2300      	movs	r3, #0
 8004914:	2b00      	cmp	r3, #0
 8004916:	d10b      	bne.n	8004930 <xQueueReceive+0x94>
 8004918:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800491c:	f383 8811 	msr	BASEPRI, r3
 8004920:	f3bf 8f6f 	isb	sy
 8004924:	f3bf 8f4f 	dsb	sy
 8004928:	61bb      	str	r3, [r7, #24]
 800492a:	bf00      	nop
 800492c:	bf00      	nop
 800492e:	e7fd      	b.n	800492c <xQueueReceive+0x90>
 8004930:	f001 fdca 	bl	80064c8 <vPortEnterCritical>
 8004934:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004936:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004938:	627b      	str	r3, [r7, #36]	@ 0x24
 800493a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800493c:	2b00      	cmp	r3, #0
 800493e:	d01f      	beq.n	8004980 <xQueueReceive+0xe4>
 8004940:	68b9      	ldr	r1, [r7, #8]
 8004942:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8004944:	f000 f8f6 	bl	8004b34 <prvCopyDataFromQueue>
 8004948:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800494a:	1e5a      	subs	r2, r3, #1
 800494c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800494e:	639a      	str	r2, [r3, #56]	@ 0x38
 8004950:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004952:	691b      	ldr	r3, [r3, #16]
 8004954:	2b00      	cmp	r3, #0
 8004956:	d00f      	beq.n	8004978 <xQueueReceive+0xdc>
 8004958:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800495a:	3310      	adds	r3, #16
 800495c:	4618      	mov	r0, r3
 800495e:	f000 fe7f 	bl	8005660 <xTaskRemoveFromEventList>
 8004962:	4603      	mov	r3, r0
 8004964:	2b00      	cmp	r3, #0
 8004966:	d007      	beq.n	8004978 <xQueueReceive+0xdc>
 8004968:	4b3c      	ldr	r3, [pc, #240]	@ (8004a5c <xQueueReceive+0x1c0>)
 800496a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800496e:	601a      	str	r2, [r3, #0]
 8004970:	f3bf 8f4f 	dsb	sy
 8004974:	f3bf 8f6f 	isb	sy
 8004978:	f001 fdd8 	bl	800652c <vPortExitCritical>
 800497c:	2301      	movs	r3, #1
 800497e:	e069      	b.n	8004a54 <xQueueReceive+0x1b8>
 8004980:	687b      	ldr	r3, [r7, #4]
 8004982:	2b00      	cmp	r3, #0
 8004984:	d103      	bne.n	800498e <xQueueReceive+0xf2>
 8004986:	f001 fdd1 	bl	800652c <vPortExitCritical>
 800498a:	2300      	movs	r3, #0
 800498c:	e062      	b.n	8004a54 <xQueueReceive+0x1b8>
 800498e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004990:	2b00      	cmp	r3, #0
 8004992:	d106      	bne.n	80049a2 <xQueueReceive+0x106>
 8004994:	f107 0310 	add.w	r3, r7, #16
 8004998:	4618      	mov	r0, r3
 800499a:	f000 fec5 	bl	8005728 <vTaskInternalSetTimeOutState>
 800499e:	2301      	movs	r3, #1
 80049a0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80049a2:	f001 fdc3 	bl	800652c <vPortExitCritical>
 80049a6:	f000 fc2d 	bl	8005204 <vTaskSuspendAll>
 80049aa:	f001 fd8d 	bl	80064c8 <vPortEnterCritical>
 80049ae:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80049b0:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 80049b4:	b25b      	sxtb	r3, r3
 80049b6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80049ba:	d103      	bne.n	80049c4 <xQueueReceive+0x128>
 80049bc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80049be:	2200      	movs	r2, #0
 80049c0:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80049c4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80049c6:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 80049ca:	b25b      	sxtb	r3, r3
 80049cc:	f1b3 3fff 	cmp.w	r3, #4294967295
 80049d0:	d103      	bne.n	80049da <xQueueReceive+0x13e>
 80049d2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80049d4:	2200      	movs	r2, #0
 80049d6:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80049da:	f001 fda7 	bl	800652c <vPortExitCritical>
 80049de:	1d3a      	adds	r2, r7, #4
 80049e0:	f107 0310 	add.w	r3, r7, #16
 80049e4:	4611      	mov	r1, r2
 80049e6:	4618      	mov	r0, r3
 80049e8:	f000 feb4 	bl	8005754 <xTaskCheckForTimeOut>
 80049ec:	4603      	mov	r3, r0
 80049ee:	2b00      	cmp	r3, #0
 80049f0:	d123      	bne.n	8004a3a <xQueueReceive+0x19e>
 80049f2:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 80049f4:	f000 f916 	bl	8004c24 <prvIsQueueEmpty>
 80049f8:	4603      	mov	r3, r0
 80049fa:	2b00      	cmp	r3, #0
 80049fc:	d017      	beq.n	8004a2e <xQueueReceive+0x192>
 80049fe:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004a00:	3324      	adds	r3, #36	@ 0x24
 8004a02:	687a      	ldr	r2, [r7, #4]
 8004a04:	4611      	mov	r1, r2
 8004a06:	4618      	mov	r0, r3
 8004a08:	f000 fdd8 	bl	80055bc <vTaskPlaceOnEventList>
 8004a0c:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8004a0e:	f000 f8b7 	bl	8004b80 <prvUnlockQueue>
 8004a12:	f000 fc05 	bl	8005220 <xTaskResumeAll>
 8004a16:	4603      	mov	r3, r0
 8004a18:	2b00      	cmp	r3, #0
 8004a1a:	d189      	bne.n	8004930 <xQueueReceive+0x94>
 8004a1c:	4b0f      	ldr	r3, [pc, #60]	@ (8004a5c <xQueueReceive+0x1c0>)
 8004a1e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8004a22:	601a      	str	r2, [r3, #0]
 8004a24:	f3bf 8f4f 	dsb	sy
 8004a28:	f3bf 8f6f 	isb	sy
 8004a2c:	e780      	b.n	8004930 <xQueueReceive+0x94>
 8004a2e:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8004a30:	f000 f8a6 	bl	8004b80 <prvUnlockQueue>
 8004a34:	f000 fbf4 	bl	8005220 <xTaskResumeAll>
 8004a38:	e77a      	b.n	8004930 <xQueueReceive+0x94>
 8004a3a:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8004a3c:	f000 f8a0 	bl	8004b80 <prvUnlockQueue>
 8004a40:	f000 fbee 	bl	8005220 <xTaskResumeAll>
 8004a44:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8004a46:	f000 f8ed 	bl	8004c24 <prvIsQueueEmpty>
 8004a4a:	4603      	mov	r3, r0
 8004a4c:	2b00      	cmp	r3, #0
 8004a4e:	f43f af6f 	beq.w	8004930 <xQueueReceive+0x94>
 8004a52:	2300      	movs	r3, #0
 8004a54:	4618      	mov	r0, r3
 8004a56:	3730      	adds	r7, #48	@ 0x30
 8004a58:	46bd      	mov	sp, r7
 8004a5a:	bd80      	pop	{r7, pc}
 8004a5c:	e000ed04 	.word	0xe000ed04

08004a60 <prvCopyDataToQueue>:
 8004a60:	b580      	push	{r7, lr}
 8004a62:	b086      	sub	sp, #24
 8004a64:	af00      	add	r7, sp, #0
 8004a66:	60f8      	str	r0, [r7, #12]
 8004a68:	60b9      	str	r1, [r7, #8]
 8004a6a:	607a      	str	r2, [r7, #4]
 8004a6c:	2300      	movs	r3, #0
 8004a6e:	617b      	str	r3, [r7, #20]
 8004a70:	68fb      	ldr	r3, [r7, #12]
 8004a72:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004a74:	613b      	str	r3, [r7, #16]
 8004a76:	68fb      	ldr	r3, [r7, #12]
 8004a78:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004a7a:	2b00      	cmp	r3, #0
 8004a7c:	d10d      	bne.n	8004a9a <prvCopyDataToQueue+0x3a>
 8004a7e:	68fb      	ldr	r3, [r7, #12]
 8004a80:	681b      	ldr	r3, [r3, #0]
 8004a82:	2b00      	cmp	r3, #0
 8004a84:	d14d      	bne.n	8004b22 <prvCopyDataToQueue+0xc2>
 8004a86:	68fb      	ldr	r3, [r7, #12]
 8004a88:	689b      	ldr	r3, [r3, #8]
 8004a8a:	4618      	mov	r0, r3
 8004a8c:	f000 ffcc 	bl	8005a28 <xTaskPriorityDisinherit>
 8004a90:	6178      	str	r0, [r7, #20]
 8004a92:	68fb      	ldr	r3, [r7, #12]
 8004a94:	2200      	movs	r2, #0
 8004a96:	609a      	str	r2, [r3, #8]
 8004a98:	e043      	b.n	8004b22 <prvCopyDataToQueue+0xc2>
 8004a9a:	687b      	ldr	r3, [r7, #4]
 8004a9c:	2b00      	cmp	r3, #0
 8004a9e:	d119      	bne.n	8004ad4 <prvCopyDataToQueue+0x74>
 8004aa0:	68fb      	ldr	r3, [r7, #12]
 8004aa2:	6858      	ldr	r0, [r3, #4]
 8004aa4:	68fb      	ldr	r3, [r7, #12]
 8004aa6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004aa8:	461a      	mov	r2, r3
 8004aaa:	68b9      	ldr	r1, [r7, #8]
 8004aac:	f002 f98e 	bl	8006dcc <memcpy>
 8004ab0:	68fb      	ldr	r3, [r7, #12]
 8004ab2:	685a      	ldr	r2, [r3, #4]
 8004ab4:	68fb      	ldr	r3, [r7, #12]
 8004ab6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004ab8:	441a      	add	r2, r3
 8004aba:	68fb      	ldr	r3, [r7, #12]
 8004abc:	605a      	str	r2, [r3, #4]
 8004abe:	68fb      	ldr	r3, [r7, #12]
 8004ac0:	685a      	ldr	r2, [r3, #4]
 8004ac2:	68fb      	ldr	r3, [r7, #12]
 8004ac4:	689b      	ldr	r3, [r3, #8]
 8004ac6:	429a      	cmp	r2, r3
 8004ac8:	d32b      	bcc.n	8004b22 <prvCopyDataToQueue+0xc2>
 8004aca:	68fb      	ldr	r3, [r7, #12]
 8004acc:	681a      	ldr	r2, [r3, #0]
 8004ace:	68fb      	ldr	r3, [r7, #12]
 8004ad0:	605a      	str	r2, [r3, #4]
 8004ad2:	e026      	b.n	8004b22 <prvCopyDataToQueue+0xc2>
 8004ad4:	68fb      	ldr	r3, [r7, #12]
 8004ad6:	68d8      	ldr	r0, [r3, #12]
 8004ad8:	68fb      	ldr	r3, [r7, #12]
 8004ada:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004adc:	461a      	mov	r2, r3
 8004ade:	68b9      	ldr	r1, [r7, #8]
 8004ae0:	f002 f974 	bl	8006dcc <memcpy>
 8004ae4:	68fb      	ldr	r3, [r7, #12]
 8004ae6:	68da      	ldr	r2, [r3, #12]
 8004ae8:	68fb      	ldr	r3, [r7, #12]
 8004aea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004aec:	425b      	negs	r3, r3
 8004aee:	441a      	add	r2, r3
 8004af0:	68fb      	ldr	r3, [r7, #12]
 8004af2:	60da      	str	r2, [r3, #12]
 8004af4:	68fb      	ldr	r3, [r7, #12]
 8004af6:	68da      	ldr	r2, [r3, #12]
 8004af8:	68fb      	ldr	r3, [r7, #12]
 8004afa:	681b      	ldr	r3, [r3, #0]
 8004afc:	429a      	cmp	r2, r3
 8004afe:	d207      	bcs.n	8004b10 <prvCopyDataToQueue+0xb0>
 8004b00:	68fb      	ldr	r3, [r7, #12]
 8004b02:	689a      	ldr	r2, [r3, #8]
 8004b04:	68fb      	ldr	r3, [r7, #12]
 8004b06:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004b08:	425b      	negs	r3, r3
 8004b0a:	441a      	add	r2, r3
 8004b0c:	68fb      	ldr	r3, [r7, #12]
 8004b0e:	60da      	str	r2, [r3, #12]
 8004b10:	687b      	ldr	r3, [r7, #4]
 8004b12:	2b02      	cmp	r3, #2
 8004b14:	d105      	bne.n	8004b22 <prvCopyDataToQueue+0xc2>
 8004b16:	693b      	ldr	r3, [r7, #16]
 8004b18:	2b00      	cmp	r3, #0
 8004b1a:	d002      	beq.n	8004b22 <prvCopyDataToQueue+0xc2>
 8004b1c:	693b      	ldr	r3, [r7, #16]
 8004b1e:	3b01      	subs	r3, #1
 8004b20:	613b      	str	r3, [r7, #16]
 8004b22:	693b      	ldr	r3, [r7, #16]
 8004b24:	1c5a      	adds	r2, r3, #1
 8004b26:	68fb      	ldr	r3, [r7, #12]
 8004b28:	639a      	str	r2, [r3, #56]	@ 0x38
 8004b2a:	697b      	ldr	r3, [r7, #20]
 8004b2c:	4618      	mov	r0, r3
 8004b2e:	3718      	adds	r7, #24
 8004b30:	46bd      	mov	sp, r7
 8004b32:	bd80      	pop	{r7, pc}

08004b34 <prvCopyDataFromQueue>:
 8004b34:	b580      	push	{r7, lr}
 8004b36:	b082      	sub	sp, #8
 8004b38:	af00      	add	r7, sp, #0
 8004b3a:	6078      	str	r0, [r7, #4]
 8004b3c:	6039      	str	r1, [r7, #0]
 8004b3e:	687b      	ldr	r3, [r7, #4]
 8004b40:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004b42:	2b00      	cmp	r3, #0
 8004b44:	d018      	beq.n	8004b78 <prvCopyDataFromQueue+0x44>
 8004b46:	687b      	ldr	r3, [r7, #4]
 8004b48:	68da      	ldr	r2, [r3, #12]
 8004b4a:	687b      	ldr	r3, [r7, #4]
 8004b4c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004b4e:	441a      	add	r2, r3
 8004b50:	687b      	ldr	r3, [r7, #4]
 8004b52:	60da      	str	r2, [r3, #12]
 8004b54:	687b      	ldr	r3, [r7, #4]
 8004b56:	68da      	ldr	r2, [r3, #12]
 8004b58:	687b      	ldr	r3, [r7, #4]
 8004b5a:	689b      	ldr	r3, [r3, #8]
 8004b5c:	429a      	cmp	r2, r3
 8004b5e:	d303      	bcc.n	8004b68 <prvCopyDataFromQueue+0x34>
 8004b60:	687b      	ldr	r3, [r7, #4]
 8004b62:	681a      	ldr	r2, [r3, #0]
 8004b64:	687b      	ldr	r3, [r7, #4]
 8004b66:	60da      	str	r2, [r3, #12]
 8004b68:	687b      	ldr	r3, [r7, #4]
 8004b6a:	68d9      	ldr	r1, [r3, #12]
 8004b6c:	687b      	ldr	r3, [r7, #4]
 8004b6e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004b70:	461a      	mov	r2, r3
 8004b72:	6838      	ldr	r0, [r7, #0]
 8004b74:	f002 f92a 	bl	8006dcc <memcpy>
 8004b78:	bf00      	nop
 8004b7a:	3708      	adds	r7, #8
 8004b7c:	46bd      	mov	sp, r7
 8004b7e:	bd80      	pop	{r7, pc}

08004b80 <prvUnlockQueue>:
 8004b80:	b580      	push	{r7, lr}
 8004b82:	b084      	sub	sp, #16
 8004b84:	af00      	add	r7, sp, #0
 8004b86:	6078      	str	r0, [r7, #4]
 8004b88:	f001 fc9e 	bl	80064c8 <vPortEnterCritical>
 8004b8c:	687b      	ldr	r3, [r7, #4]
 8004b8e:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8004b92:	73fb      	strb	r3, [r7, #15]
 8004b94:	e011      	b.n	8004bba <prvUnlockQueue+0x3a>
 8004b96:	687b      	ldr	r3, [r7, #4]
 8004b98:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b9a:	2b00      	cmp	r3, #0
 8004b9c:	d012      	beq.n	8004bc4 <prvUnlockQueue+0x44>
 8004b9e:	687b      	ldr	r3, [r7, #4]
 8004ba0:	3324      	adds	r3, #36	@ 0x24
 8004ba2:	4618      	mov	r0, r3
 8004ba4:	f000 fd5c 	bl	8005660 <xTaskRemoveFromEventList>
 8004ba8:	4603      	mov	r3, r0
 8004baa:	2b00      	cmp	r3, #0
 8004bac:	d001      	beq.n	8004bb2 <prvUnlockQueue+0x32>
 8004bae:	f000 fe35 	bl	800581c <vTaskMissedYield>
 8004bb2:	7bfb      	ldrb	r3, [r7, #15]
 8004bb4:	3b01      	subs	r3, #1
 8004bb6:	b2db      	uxtb	r3, r3
 8004bb8:	73fb      	strb	r3, [r7, #15]
 8004bba:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8004bbe:	2b00      	cmp	r3, #0
 8004bc0:	dce9      	bgt.n	8004b96 <prvUnlockQueue+0x16>
 8004bc2:	e000      	b.n	8004bc6 <prvUnlockQueue+0x46>
 8004bc4:	bf00      	nop
 8004bc6:	687b      	ldr	r3, [r7, #4]
 8004bc8:	22ff      	movs	r2, #255	@ 0xff
 8004bca:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8004bce:	f001 fcad 	bl	800652c <vPortExitCritical>
 8004bd2:	f001 fc79 	bl	80064c8 <vPortEnterCritical>
 8004bd6:	687b      	ldr	r3, [r7, #4]
 8004bd8:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8004bdc:	73bb      	strb	r3, [r7, #14]
 8004bde:	e011      	b.n	8004c04 <prvUnlockQueue+0x84>
 8004be0:	687b      	ldr	r3, [r7, #4]
 8004be2:	691b      	ldr	r3, [r3, #16]
 8004be4:	2b00      	cmp	r3, #0
 8004be6:	d012      	beq.n	8004c0e <prvUnlockQueue+0x8e>
 8004be8:	687b      	ldr	r3, [r7, #4]
 8004bea:	3310      	adds	r3, #16
 8004bec:	4618      	mov	r0, r3
 8004bee:	f000 fd37 	bl	8005660 <xTaskRemoveFromEventList>
 8004bf2:	4603      	mov	r3, r0
 8004bf4:	2b00      	cmp	r3, #0
 8004bf6:	d001      	beq.n	8004bfc <prvUnlockQueue+0x7c>
 8004bf8:	f000 fe10 	bl	800581c <vTaskMissedYield>
 8004bfc:	7bbb      	ldrb	r3, [r7, #14]
 8004bfe:	3b01      	subs	r3, #1
 8004c00:	b2db      	uxtb	r3, r3
 8004c02:	73bb      	strb	r3, [r7, #14]
 8004c04:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8004c08:	2b00      	cmp	r3, #0
 8004c0a:	dce9      	bgt.n	8004be0 <prvUnlockQueue+0x60>
 8004c0c:	e000      	b.n	8004c10 <prvUnlockQueue+0x90>
 8004c0e:	bf00      	nop
 8004c10:	687b      	ldr	r3, [r7, #4]
 8004c12:	22ff      	movs	r2, #255	@ 0xff
 8004c14:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8004c18:	f001 fc88 	bl	800652c <vPortExitCritical>
 8004c1c:	bf00      	nop
 8004c1e:	3710      	adds	r7, #16
 8004c20:	46bd      	mov	sp, r7
 8004c22:	bd80      	pop	{r7, pc}

08004c24 <prvIsQueueEmpty>:
 8004c24:	b580      	push	{r7, lr}
 8004c26:	b084      	sub	sp, #16
 8004c28:	af00      	add	r7, sp, #0
 8004c2a:	6078      	str	r0, [r7, #4]
 8004c2c:	f001 fc4c 	bl	80064c8 <vPortEnterCritical>
 8004c30:	687b      	ldr	r3, [r7, #4]
 8004c32:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004c34:	2b00      	cmp	r3, #0
 8004c36:	d102      	bne.n	8004c3e <prvIsQueueEmpty+0x1a>
 8004c38:	2301      	movs	r3, #1
 8004c3a:	60fb      	str	r3, [r7, #12]
 8004c3c:	e001      	b.n	8004c42 <prvIsQueueEmpty+0x1e>
 8004c3e:	2300      	movs	r3, #0
 8004c40:	60fb      	str	r3, [r7, #12]
 8004c42:	f001 fc73 	bl	800652c <vPortExitCritical>
 8004c46:	68fb      	ldr	r3, [r7, #12]
 8004c48:	4618      	mov	r0, r3
 8004c4a:	3710      	adds	r7, #16
 8004c4c:	46bd      	mov	sp, r7
 8004c4e:	bd80      	pop	{r7, pc}

08004c50 <prvIsQueueFull>:
 8004c50:	b580      	push	{r7, lr}
 8004c52:	b084      	sub	sp, #16
 8004c54:	af00      	add	r7, sp, #0
 8004c56:	6078      	str	r0, [r7, #4]
 8004c58:	f001 fc36 	bl	80064c8 <vPortEnterCritical>
 8004c5c:	687b      	ldr	r3, [r7, #4]
 8004c5e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8004c60:	687b      	ldr	r3, [r7, #4]
 8004c62:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004c64:	429a      	cmp	r2, r3
 8004c66:	d102      	bne.n	8004c6e <prvIsQueueFull+0x1e>
 8004c68:	2301      	movs	r3, #1
 8004c6a:	60fb      	str	r3, [r7, #12]
 8004c6c:	e001      	b.n	8004c72 <prvIsQueueFull+0x22>
 8004c6e:	2300      	movs	r3, #0
 8004c70:	60fb      	str	r3, [r7, #12]
 8004c72:	f001 fc5b 	bl	800652c <vPortExitCritical>
 8004c76:	68fb      	ldr	r3, [r7, #12]
 8004c78:	4618      	mov	r0, r3
 8004c7a:	3710      	adds	r7, #16
 8004c7c:	46bd      	mov	sp, r7
 8004c7e:	bd80      	pop	{r7, pc}

08004c80 <vQueueAddToRegistry>:
 8004c80:	b480      	push	{r7}
 8004c82:	b085      	sub	sp, #20
 8004c84:	af00      	add	r7, sp, #0
 8004c86:	6078      	str	r0, [r7, #4]
 8004c88:	6039      	str	r1, [r7, #0]
 8004c8a:	2300      	movs	r3, #0
 8004c8c:	60fb      	str	r3, [r7, #12]
 8004c8e:	e014      	b.n	8004cba <vQueueAddToRegistry+0x3a>
 8004c90:	4a0f      	ldr	r2, [pc, #60]	@ (8004cd0 <vQueueAddToRegistry+0x50>)
 8004c92:	68fb      	ldr	r3, [r7, #12]
 8004c94:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 8004c98:	2b00      	cmp	r3, #0
 8004c9a:	d10b      	bne.n	8004cb4 <vQueueAddToRegistry+0x34>
 8004c9c:	490c      	ldr	r1, [pc, #48]	@ (8004cd0 <vQueueAddToRegistry+0x50>)
 8004c9e:	68fb      	ldr	r3, [r7, #12]
 8004ca0:	683a      	ldr	r2, [r7, #0]
 8004ca2:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 8004ca6:	4a0a      	ldr	r2, [pc, #40]	@ (8004cd0 <vQueueAddToRegistry+0x50>)
 8004ca8:	68fb      	ldr	r3, [r7, #12]
 8004caa:	00db      	lsls	r3, r3, #3
 8004cac:	4413      	add	r3, r2
 8004cae:	687a      	ldr	r2, [r7, #4]
 8004cb0:	605a      	str	r2, [r3, #4]
 8004cb2:	e006      	b.n	8004cc2 <vQueueAddToRegistry+0x42>
 8004cb4:	68fb      	ldr	r3, [r7, #12]
 8004cb6:	3301      	adds	r3, #1
 8004cb8:	60fb      	str	r3, [r7, #12]
 8004cba:	68fb      	ldr	r3, [r7, #12]
 8004cbc:	2b07      	cmp	r3, #7
 8004cbe:	d9e7      	bls.n	8004c90 <vQueueAddToRegistry+0x10>
 8004cc0:	bf00      	nop
 8004cc2:	bf00      	nop
 8004cc4:	3714      	adds	r7, #20
 8004cc6:	46bd      	mov	sp, r7
 8004cc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ccc:	4770      	bx	lr
 8004cce:	bf00      	nop
 8004cd0:	20000958 	.word	0x20000958

08004cd4 <vQueueWaitForMessageRestricted>:
 8004cd4:	b580      	push	{r7, lr}
 8004cd6:	b086      	sub	sp, #24
 8004cd8:	af00      	add	r7, sp, #0
 8004cda:	60f8      	str	r0, [r7, #12]
 8004cdc:	60b9      	str	r1, [r7, #8]
 8004cde:	607a      	str	r2, [r7, #4]
 8004ce0:	68fb      	ldr	r3, [r7, #12]
 8004ce2:	617b      	str	r3, [r7, #20]
 8004ce4:	f001 fbf0 	bl	80064c8 <vPortEnterCritical>
 8004ce8:	697b      	ldr	r3, [r7, #20]
 8004cea:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8004cee:	b25b      	sxtb	r3, r3
 8004cf0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004cf4:	d103      	bne.n	8004cfe <vQueueWaitForMessageRestricted+0x2a>
 8004cf6:	697b      	ldr	r3, [r7, #20]
 8004cf8:	2200      	movs	r2, #0
 8004cfa:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8004cfe:	697b      	ldr	r3, [r7, #20]
 8004d00:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8004d04:	b25b      	sxtb	r3, r3
 8004d06:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004d0a:	d103      	bne.n	8004d14 <vQueueWaitForMessageRestricted+0x40>
 8004d0c:	697b      	ldr	r3, [r7, #20]
 8004d0e:	2200      	movs	r2, #0
 8004d10:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8004d14:	f001 fc0a 	bl	800652c <vPortExitCritical>
 8004d18:	697b      	ldr	r3, [r7, #20]
 8004d1a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004d1c:	2b00      	cmp	r3, #0
 8004d1e:	d106      	bne.n	8004d2e <vQueueWaitForMessageRestricted+0x5a>
 8004d20:	697b      	ldr	r3, [r7, #20]
 8004d22:	3324      	adds	r3, #36	@ 0x24
 8004d24:	687a      	ldr	r2, [r7, #4]
 8004d26:	68b9      	ldr	r1, [r7, #8]
 8004d28:	4618      	mov	r0, r3
 8004d2a:	f000 fc6d 	bl	8005608 <vTaskPlaceOnEventListRestricted>
 8004d2e:	6978      	ldr	r0, [r7, #20]
 8004d30:	f7ff ff26 	bl	8004b80 <prvUnlockQueue>
 8004d34:	bf00      	nop
 8004d36:	3718      	adds	r7, #24
 8004d38:	46bd      	mov	sp, r7
 8004d3a:	bd80      	pop	{r7, pc}

08004d3c <xTaskCreateStatic>:
 8004d3c:	b580      	push	{r7, lr}
 8004d3e:	b08e      	sub	sp, #56	@ 0x38
 8004d40:	af04      	add	r7, sp, #16
 8004d42:	60f8      	str	r0, [r7, #12]
 8004d44:	60b9      	str	r1, [r7, #8]
 8004d46:	607a      	str	r2, [r7, #4]
 8004d48:	603b      	str	r3, [r7, #0]
 8004d4a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004d4c:	2b00      	cmp	r3, #0
 8004d4e:	d10b      	bne.n	8004d68 <xTaskCreateStatic+0x2c>
 8004d50:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004d54:	f383 8811 	msr	BASEPRI, r3
 8004d58:	f3bf 8f6f 	isb	sy
 8004d5c:	f3bf 8f4f 	dsb	sy
 8004d60:	623b      	str	r3, [r7, #32]
 8004d62:	bf00      	nop
 8004d64:	bf00      	nop
 8004d66:	e7fd      	b.n	8004d64 <xTaskCreateStatic+0x28>
 8004d68:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004d6a:	2b00      	cmp	r3, #0
 8004d6c:	d10b      	bne.n	8004d86 <xTaskCreateStatic+0x4a>
 8004d6e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004d72:	f383 8811 	msr	BASEPRI, r3
 8004d76:	f3bf 8f6f 	isb	sy
 8004d7a:	f3bf 8f4f 	dsb	sy
 8004d7e:	61fb      	str	r3, [r7, #28]
 8004d80:	bf00      	nop
 8004d82:	bf00      	nop
 8004d84:	e7fd      	b.n	8004d82 <xTaskCreateStatic+0x46>
 8004d86:	23a8      	movs	r3, #168	@ 0xa8
 8004d88:	613b      	str	r3, [r7, #16]
 8004d8a:	693b      	ldr	r3, [r7, #16]
 8004d8c:	2ba8      	cmp	r3, #168	@ 0xa8
 8004d8e:	d00b      	beq.n	8004da8 <xTaskCreateStatic+0x6c>
 8004d90:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004d94:	f383 8811 	msr	BASEPRI, r3
 8004d98:	f3bf 8f6f 	isb	sy
 8004d9c:	f3bf 8f4f 	dsb	sy
 8004da0:	61bb      	str	r3, [r7, #24]
 8004da2:	bf00      	nop
 8004da4:	bf00      	nop
 8004da6:	e7fd      	b.n	8004da4 <xTaskCreateStatic+0x68>
 8004da8:	693b      	ldr	r3, [r7, #16]
 8004daa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004dac:	2b00      	cmp	r3, #0
 8004dae:	d01e      	beq.n	8004dee <xTaskCreateStatic+0xb2>
 8004db0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004db2:	2b00      	cmp	r3, #0
 8004db4:	d01b      	beq.n	8004dee <xTaskCreateStatic+0xb2>
 8004db6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004db8:	627b      	str	r3, [r7, #36]	@ 0x24
 8004dba:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004dbc:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8004dbe:	631a      	str	r2, [r3, #48]	@ 0x30
 8004dc0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004dc2:	2202      	movs	r2, #2
 8004dc4:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 8004dc8:	2300      	movs	r3, #0
 8004dca:	9303      	str	r3, [sp, #12]
 8004dcc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004dce:	9302      	str	r3, [sp, #8]
 8004dd0:	f107 0314 	add.w	r3, r7, #20
 8004dd4:	9301      	str	r3, [sp, #4]
 8004dd6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004dd8:	9300      	str	r3, [sp, #0]
 8004dda:	683b      	ldr	r3, [r7, #0]
 8004ddc:	687a      	ldr	r2, [r7, #4]
 8004dde:	68b9      	ldr	r1, [r7, #8]
 8004de0:	68f8      	ldr	r0, [r7, #12]
 8004de2:	f000 f851 	bl	8004e88 <prvInitialiseNewTask>
 8004de6:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 8004de8:	f000 f8f6 	bl	8004fd8 <prvAddNewTaskToReadyList>
 8004dec:	e001      	b.n	8004df2 <xTaskCreateStatic+0xb6>
 8004dee:	2300      	movs	r3, #0
 8004df0:	617b      	str	r3, [r7, #20]
 8004df2:	697b      	ldr	r3, [r7, #20]
 8004df4:	4618      	mov	r0, r3
 8004df6:	3728      	adds	r7, #40	@ 0x28
 8004df8:	46bd      	mov	sp, r7
 8004dfa:	bd80      	pop	{r7, pc}

08004dfc <xTaskCreate>:
 8004dfc:	b580      	push	{r7, lr}
 8004dfe:	b08c      	sub	sp, #48	@ 0x30
 8004e00:	af04      	add	r7, sp, #16
 8004e02:	60f8      	str	r0, [r7, #12]
 8004e04:	60b9      	str	r1, [r7, #8]
 8004e06:	603b      	str	r3, [r7, #0]
 8004e08:	4613      	mov	r3, r2
 8004e0a:	80fb      	strh	r3, [r7, #6]
 8004e0c:	88fb      	ldrh	r3, [r7, #6]
 8004e0e:	009b      	lsls	r3, r3, #2
 8004e10:	4618      	mov	r0, r3
 8004e12:	f001 fc7b 	bl	800670c <pvPortMalloc>
 8004e16:	6178      	str	r0, [r7, #20]
 8004e18:	697b      	ldr	r3, [r7, #20]
 8004e1a:	2b00      	cmp	r3, #0
 8004e1c:	d00e      	beq.n	8004e3c <xTaskCreate+0x40>
 8004e1e:	20a8      	movs	r0, #168	@ 0xa8
 8004e20:	f001 fc74 	bl	800670c <pvPortMalloc>
 8004e24:	61f8      	str	r0, [r7, #28]
 8004e26:	69fb      	ldr	r3, [r7, #28]
 8004e28:	2b00      	cmp	r3, #0
 8004e2a:	d003      	beq.n	8004e34 <xTaskCreate+0x38>
 8004e2c:	69fb      	ldr	r3, [r7, #28]
 8004e2e:	697a      	ldr	r2, [r7, #20]
 8004e30:	631a      	str	r2, [r3, #48]	@ 0x30
 8004e32:	e005      	b.n	8004e40 <xTaskCreate+0x44>
 8004e34:	6978      	ldr	r0, [r7, #20]
 8004e36:	f001 fd37 	bl	80068a8 <vPortFree>
 8004e3a:	e001      	b.n	8004e40 <xTaskCreate+0x44>
 8004e3c:	2300      	movs	r3, #0
 8004e3e:	61fb      	str	r3, [r7, #28]
 8004e40:	69fb      	ldr	r3, [r7, #28]
 8004e42:	2b00      	cmp	r3, #0
 8004e44:	d017      	beq.n	8004e76 <xTaskCreate+0x7a>
 8004e46:	69fb      	ldr	r3, [r7, #28]
 8004e48:	2200      	movs	r2, #0
 8004e4a:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 8004e4e:	88fa      	ldrh	r2, [r7, #6]
 8004e50:	2300      	movs	r3, #0
 8004e52:	9303      	str	r3, [sp, #12]
 8004e54:	69fb      	ldr	r3, [r7, #28]
 8004e56:	9302      	str	r3, [sp, #8]
 8004e58:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004e5a:	9301      	str	r3, [sp, #4]
 8004e5c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004e5e:	9300      	str	r3, [sp, #0]
 8004e60:	683b      	ldr	r3, [r7, #0]
 8004e62:	68b9      	ldr	r1, [r7, #8]
 8004e64:	68f8      	ldr	r0, [r7, #12]
 8004e66:	f000 f80f 	bl	8004e88 <prvInitialiseNewTask>
 8004e6a:	69f8      	ldr	r0, [r7, #28]
 8004e6c:	f000 f8b4 	bl	8004fd8 <prvAddNewTaskToReadyList>
 8004e70:	2301      	movs	r3, #1
 8004e72:	61bb      	str	r3, [r7, #24]
 8004e74:	e002      	b.n	8004e7c <xTaskCreate+0x80>
 8004e76:	f04f 33ff 	mov.w	r3, #4294967295
 8004e7a:	61bb      	str	r3, [r7, #24]
 8004e7c:	69bb      	ldr	r3, [r7, #24]
 8004e7e:	4618      	mov	r0, r3
 8004e80:	3720      	adds	r7, #32
 8004e82:	46bd      	mov	sp, r7
 8004e84:	bd80      	pop	{r7, pc}
	...

08004e88 <prvInitialiseNewTask>:
 8004e88:	b580      	push	{r7, lr}
 8004e8a:	b088      	sub	sp, #32
 8004e8c:	af00      	add	r7, sp, #0
 8004e8e:	60f8      	str	r0, [r7, #12]
 8004e90:	60b9      	str	r1, [r7, #8]
 8004e92:	607a      	str	r2, [r7, #4]
 8004e94:	603b      	str	r3, [r7, #0]
 8004e96:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004e98:	6b18      	ldr	r0, [r3, #48]	@ 0x30
 8004e9a:	687b      	ldr	r3, [r7, #4]
 8004e9c:	009b      	lsls	r3, r3, #2
 8004e9e:	461a      	mov	r2, r3
 8004ea0:	21a5      	movs	r1, #165	@ 0xa5
 8004ea2:	f001 fef1 	bl	8006c88 <memset>
 8004ea6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004ea8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004eaa:	687b      	ldr	r3, [r7, #4]
 8004eac:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8004eb0:	3b01      	subs	r3, #1
 8004eb2:	009b      	lsls	r3, r3, #2
 8004eb4:	4413      	add	r3, r2
 8004eb6:	61bb      	str	r3, [r7, #24]
 8004eb8:	69bb      	ldr	r3, [r7, #24]
 8004eba:	f023 0307 	bic.w	r3, r3, #7
 8004ebe:	61bb      	str	r3, [r7, #24]
 8004ec0:	69bb      	ldr	r3, [r7, #24]
 8004ec2:	f003 0307 	and.w	r3, r3, #7
 8004ec6:	2b00      	cmp	r3, #0
 8004ec8:	d00b      	beq.n	8004ee2 <prvInitialiseNewTask+0x5a>
 8004eca:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004ece:	f383 8811 	msr	BASEPRI, r3
 8004ed2:	f3bf 8f6f 	isb	sy
 8004ed6:	f3bf 8f4f 	dsb	sy
 8004eda:	617b      	str	r3, [r7, #20]
 8004edc:	bf00      	nop
 8004ede:	bf00      	nop
 8004ee0:	e7fd      	b.n	8004ede <prvInitialiseNewTask+0x56>
 8004ee2:	68bb      	ldr	r3, [r7, #8]
 8004ee4:	2b00      	cmp	r3, #0
 8004ee6:	d01f      	beq.n	8004f28 <prvInitialiseNewTask+0xa0>
 8004ee8:	2300      	movs	r3, #0
 8004eea:	61fb      	str	r3, [r7, #28]
 8004eec:	e012      	b.n	8004f14 <prvInitialiseNewTask+0x8c>
 8004eee:	68ba      	ldr	r2, [r7, #8]
 8004ef0:	69fb      	ldr	r3, [r7, #28]
 8004ef2:	4413      	add	r3, r2
 8004ef4:	7819      	ldrb	r1, [r3, #0]
 8004ef6:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8004ef8:	69fb      	ldr	r3, [r7, #28]
 8004efa:	4413      	add	r3, r2
 8004efc:	3334      	adds	r3, #52	@ 0x34
 8004efe:	460a      	mov	r2, r1
 8004f00:	701a      	strb	r2, [r3, #0]
 8004f02:	68ba      	ldr	r2, [r7, #8]
 8004f04:	69fb      	ldr	r3, [r7, #28]
 8004f06:	4413      	add	r3, r2
 8004f08:	781b      	ldrb	r3, [r3, #0]
 8004f0a:	2b00      	cmp	r3, #0
 8004f0c:	d006      	beq.n	8004f1c <prvInitialiseNewTask+0x94>
 8004f0e:	69fb      	ldr	r3, [r7, #28]
 8004f10:	3301      	adds	r3, #1
 8004f12:	61fb      	str	r3, [r7, #28]
 8004f14:	69fb      	ldr	r3, [r7, #28]
 8004f16:	2b0f      	cmp	r3, #15
 8004f18:	d9e9      	bls.n	8004eee <prvInitialiseNewTask+0x66>
 8004f1a:	e000      	b.n	8004f1e <prvInitialiseNewTask+0x96>
 8004f1c:	bf00      	nop
 8004f1e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004f20:	2200      	movs	r2, #0
 8004f22:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8004f26:	e003      	b.n	8004f30 <prvInitialiseNewTask+0xa8>
 8004f28:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004f2a:	2200      	movs	r2, #0
 8004f2c:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8004f30:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004f32:	2b37      	cmp	r3, #55	@ 0x37
 8004f34:	d901      	bls.n	8004f3a <prvInitialiseNewTask+0xb2>
 8004f36:	2337      	movs	r3, #55	@ 0x37
 8004f38:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004f3a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004f3c:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8004f3e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8004f40:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004f42:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8004f44:	64da      	str	r2, [r3, #76]	@ 0x4c
 8004f46:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004f48:	2200      	movs	r2, #0
 8004f4a:	651a      	str	r2, [r3, #80]	@ 0x50
 8004f4c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004f4e:	3304      	adds	r3, #4
 8004f50:	4618      	mov	r0, r3
 8004f52:	f7ff f965 	bl	8004220 <vListInitialiseItem>
 8004f56:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004f58:	3318      	adds	r3, #24
 8004f5a:	4618      	mov	r0, r3
 8004f5c:	f7ff f960 	bl	8004220 <vListInitialiseItem>
 8004f60:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004f62:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8004f64:	611a      	str	r2, [r3, #16]
 8004f66:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004f68:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 8004f6c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004f6e:	619a      	str	r2, [r3, #24]
 8004f70:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004f72:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8004f74:	625a      	str	r2, [r3, #36]	@ 0x24
 8004f76:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004f78:	2200      	movs	r2, #0
 8004f7a:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
 8004f7e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004f80:	2200      	movs	r2, #0
 8004f82:	f883 20a4 	strb.w	r2, [r3, #164]	@ 0xa4
 8004f86:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004f88:	3354      	adds	r3, #84	@ 0x54
 8004f8a:	224c      	movs	r2, #76	@ 0x4c
 8004f8c:	2100      	movs	r1, #0
 8004f8e:	4618      	mov	r0, r3
 8004f90:	f001 fe7a 	bl	8006c88 <memset>
 8004f94:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004f96:	4a0d      	ldr	r2, [pc, #52]	@ (8004fcc <prvInitialiseNewTask+0x144>)
 8004f98:	659a      	str	r2, [r3, #88]	@ 0x58
 8004f9a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004f9c:	4a0c      	ldr	r2, [pc, #48]	@ (8004fd0 <prvInitialiseNewTask+0x148>)
 8004f9e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004fa0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004fa2:	4a0c      	ldr	r2, [pc, #48]	@ (8004fd4 <prvInitialiseNewTask+0x14c>)
 8004fa4:	661a      	str	r2, [r3, #96]	@ 0x60
 8004fa6:	683a      	ldr	r2, [r7, #0]
 8004fa8:	68f9      	ldr	r1, [r7, #12]
 8004faa:	69b8      	ldr	r0, [r7, #24]
 8004fac:	f001 f95a 	bl	8006264 <pxPortInitialiseStack>
 8004fb0:	4602      	mov	r2, r0
 8004fb2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004fb4:	601a      	str	r2, [r3, #0]
 8004fb6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004fb8:	2b00      	cmp	r3, #0
 8004fba:	d002      	beq.n	8004fc2 <prvInitialiseNewTask+0x13a>
 8004fbc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004fbe:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8004fc0:	601a      	str	r2, [r3, #0]
 8004fc2:	bf00      	nop
 8004fc4:	3720      	adds	r7, #32
 8004fc6:	46bd      	mov	sp, r7
 8004fc8:	bd80      	pop	{r7, pc}
 8004fca:	bf00      	nop
 8004fcc:	20004bf4 	.word	0x20004bf4
 8004fd0:	20004c5c 	.word	0x20004c5c
 8004fd4:	20004cc4 	.word	0x20004cc4

08004fd8 <prvAddNewTaskToReadyList>:
 8004fd8:	b580      	push	{r7, lr}
 8004fda:	b082      	sub	sp, #8
 8004fdc:	af00      	add	r7, sp, #0
 8004fde:	6078      	str	r0, [r7, #4]
 8004fe0:	f001 fa72 	bl	80064c8 <vPortEnterCritical>
 8004fe4:	4b2d      	ldr	r3, [pc, #180]	@ (800509c <prvAddNewTaskToReadyList+0xc4>)
 8004fe6:	681b      	ldr	r3, [r3, #0]
 8004fe8:	3301      	adds	r3, #1
 8004fea:	4a2c      	ldr	r2, [pc, #176]	@ (800509c <prvAddNewTaskToReadyList+0xc4>)
 8004fec:	6013      	str	r3, [r2, #0]
 8004fee:	4b2c      	ldr	r3, [pc, #176]	@ (80050a0 <prvAddNewTaskToReadyList+0xc8>)
 8004ff0:	681b      	ldr	r3, [r3, #0]
 8004ff2:	2b00      	cmp	r3, #0
 8004ff4:	d109      	bne.n	800500a <prvAddNewTaskToReadyList+0x32>
 8004ff6:	4a2a      	ldr	r2, [pc, #168]	@ (80050a0 <prvAddNewTaskToReadyList+0xc8>)
 8004ff8:	687b      	ldr	r3, [r7, #4]
 8004ffa:	6013      	str	r3, [r2, #0]
 8004ffc:	4b27      	ldr	r3, [pc, #156]	@ (800509c <prvAddNewTaskToReadyList+0xc4>)
 8004ffe:	681b      	ldr	r3, [r3, #0]
 8005000:	2b01      	cmp	r3, #1
 8005002:	d110      	bne.n	8005026 <prvAddNewTaskToReadyList+0x4e>
 8005004:	f000 fc2e 	bl	8005864 <prvInitialiseTaskLists>
 8005008:	e00d      	b.n	8005026 <prvAddNewTaskToReadyList+0x4e>
 800500a:	4b26      	ldr	r3, [pc, #152]	@ (80050a4 <prvAddNewTaskToReadyList+0xcc>)
 800500c:	681b      	ldr	r3, [r3, #0]
 800500e:	2b00      	cmp	r3, #0
 8005010:	d109      	bne.n	8005026 <prvAddNewTaskToReadyList+0x4e>
 8005012:	4b23      	ldr	r3, [pc, #140]	@ (80050a0 <prvAddNewTaskToReadyList+0xc8>)
 8005014:	681b      	ldr	r3, [r3, #0]
 8005016:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8005018:	687b      	ldr	r3, [r7, #4]
 800501a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800501c:	429a      	cmp	r2, r3
 800501e:	d802      	bhi.n	8005026 <prvAddNewTaskToReadyList+0x4e>
 8005020:	4a1f      	ldr	r2, [pc, #124]	@ (80050a0 <prvAddNewTaskToReadyList+0xc8>)
 8005022:	687b      	ldr	r3, [r7, #4]
 8005024:	6013      	str	r3, [r2, #0]
 8005026:	4b20      	ldr	r3, [pc, #128]	@ (80050a8 <prvAddNewTaskToReadyList+0xd0>)
 8005028:	681b      	ldr	r3, [r3, #0]
 800502a:	3301      	adds	r3, #1
 800502c:	4a1e      	ldr	r2, [pc, #120]	@ (80050a8 <prvAddNewTaskToReadyList+0xd0>)
 800502e:	6013      	str	r3, [r2, #0]
 8005030:	4b1d      	ldr	r3, [pc, #116]	@ (80050a8 <prvAddNewTaskToReadyList+0xd0>)
 8005032:	681a      	ldr	r2, [r3, #0]
 8005034:	687b      	ldr	r3, [r7, #4]
 8005036:	645a      	str	r2, [r3, #68]	@ 0x44
 8005038:	687b      	ldr	r3, [r7, #4]
 800503a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800503c:	4b1b      	ldr	r3, [pc, #108]	@ (80050ac <prvAddNewTaskToReadyList+0xd4>)
 800503e:	681b      	ldr	r3, [r3, #0]
 8005040:	429a      	cmp	r2, r3
 8005042:	d903      	bls.n	800504c <prvAddNewTaskToReadyList+0x74>
 8005044:	687b      	ldr	r3, [r7, #4]
 8005046:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005048:	4a18      	ldr	r2, [pc, #96]	@ (80050ac <prvAddNewTaskToReadyList+0xd4>)
 800504a:	6013      	str	r3, [r2, #0]
 800504c:	687b      	ldr	r3, [r7, #4]
 800504e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8005050:	4613      	mov	r3, r2
 8005052:	009b      	lsls	r3, r3, #2
 8005054:	4413      	add	r3, r2
 8005056:	009b      	lsls	r3, r3, #2
 8005058:	4a15      	ldr	r2, [pc, #84]	@ (80050b0 <prvAddNewTaskToReadyList+0xd8>)
 800505a:	441a      	add	r2, r3
 800505c:	687b      	ldr	r3, [r7, #4]
 800505e:	3304      	adds	r3, #4
 8005060:	4619      	mov	r1, r3
 8005062:	4610      	mov	r0, r2
 8005064:	f7ff f8e9 	bl	800423a <vListInsertEnd>
 8005068:	f001 fa60 	bl	800652c <vPortExitCritical>
 800506c:	4b0d      	ldr	r3, [pc, #52]	@ (80050a4 <prvAddNewTaskToReadyList+0xcc>)
 800506e:	681b      	ldr	r3, [r3, #0]
 8005070:	2b00      	cmp	r3, #0
 8005072:	d00e      	beq.n	8005092 <prvAddNewTaskToReadyList+0xba>
 8005074:	4b0a      	ldr	r3, [pc, #40]	@ (80050a0 <prvAddNewTaskToReadyList+0xc8>)
 8005076:	681b      	ldr	r3, [r3, #0]
 8005078:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800507a:	687b      	ldr	r3, [r7, #4]
 800507c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800507e:	429a      	cmp	r2, r3
 8005080:	d207      	bcs.n	8005092 <prvAddNewTaskToReadyList+0xba>
 8005082:	4b0c      	ldr	r3, [pc, #48]	@ (80050b4 <prvAddNewTaskToReadyList+0xdc>)
 8005084:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8005088:	601a      	str	r2, [r3, #0]
 800508a:	f3bf 8f4f 	dsb	sy
 800508e:	f3bf 8f6f 	isb	sy
 8005092:	bf00      	nop
 8005094:	3708      	adds	r7, #8
 8005096:	46bd      	mov	sp, r7
 8005098:	bd80      	pop	{r7, pc}
 800509a:	bf00      	nop
 800509c:	20000e6c 	.word	0x20000e6c
 80050a0:	20000998 	.word	0x20000998
 80050a4:	20000e78 	.word	0x20000e78
 80050a8:	20000e88 	.word	0x20000e88
 80050ac:	20000e74 	.word	0x20000e74
 80050b0:	2000099c 	.word	0x2000099c
 80050b4:	e000ed04 	.word	0xe000ed04

080050b8 <vTaskDelay>:
 80050b8:	b580      	push	{r7, lr}
 80050ba:	b084      	sub	sp, #16
 80050bc:	af00      	add	r7, sp, #0
 80050be:	6078      	str	r0, [r7, #4]
 80050c0:	2300      	movs	r3, #0
 80050c2:	60fb      	str	r3, [r7, #12]
 80050c4:	687b      	ldr	r3, [r7, #4]
 80050c6:	2b00      	cmp	r3, #0
 80050c8:	d018      	beq.n	80050fc <vTaskDelay+0x44>
 80050ca:	4b14      	ldr	r3, [pc, #80]	@ (800511c <vTaskDelay+0x64>)
 80050cc:	681b      	ldr	r3, [r3, #0]
 80050ce:	2b00      	cmp	r3, #0
 80050d0:	d00b      	beq.n	80050ea <vTaskDelay+0x32>
 80050d2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80050d6:	f383 8811 	msr	BASEPRI, r3
 80050da:	f3bf 8f6f 	isb	sy
 80050de:	f3bf 8f4f 	dsb	sy
 80050e2:	60bb      	str	r3, [r7, #8]
 80050e4:	bf00      	nop
 80050e6:	bf00      	nop
 80050e8:	e7fd      	b.n	80050e6 <vTaskDelay+0x2e>
 80050ea:	f000 f88b 	bl	8005204 <vTaskSuspendAll>
 80050ee:	2100      	movs	r1, #0
 80050f0:	6878      	ldr	r0, [r7, #4]
 80050f2:	f000 fd09 	bl	8005b08 <prvAddCurrentTaskToDelayedList>
 80050f6:	f000 f893 	bl	8005220 <xTaskResumeAll>
 80050fa:	60f8      	str	r0, [r7, #12]
 80050fc:	68fb      	ldr	r3, [r7, #12]
 80050fe:	2b00      	cmp	r3, #0
 8005100:	d107      	bne.n	8005112 <vTaskDelay+0x5a>
 8005102:	4b07      	ldr	r3, [pc, #28]	@ (8005120 <vTaskDelay+0x68>)
 8005104:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8005108:	601a      	str	r2, [r3, #0]
 800510a:	f3bf 8f4f 	dsb	sy
 800510e:	f3bf 8f6f 	isb	sy
 8005112:	bf00      	nop
 8005114:	3710      	adds	r7, #16
 8005116:	46bd      	mov	sp, r7
 8005118:	bd80      	pop	{r7, pc}
 800511a:	bf00      	nop
 800511c:	20000e94 	.word	0x20000e94
 8005120:	e000ed04 	.word	0xe000ed04

08005124 <vTaskStartScheduler>:
 8005124:	b580      	push	{r7, lr}
 8005126:	b08a      	sub	sp, #40	@ 0x28
 8005128:	af04      	add	r7, sp, #16
 800512a:	2300      	movs	r3, #0
 800512c:	60bb      	str	r3, [r7, #8]
 800512e:	2300      	movs	r3, #0
 8005130:	607b      	str	r3, [r7, #4]
 8005132:	463a      	mov	r2, r7
 8005134:	1d39      	adds	r1, r7, #4
 8005136:	f107 0308 	add.w	r3, r7, #8
 800513a:	4618      	mov	r0, r3
 800513c:	f7ff f81c 	bl	8004178 <vApplicationGetIdleTaskMemory>
 8005140:	6839      	ldr	r1, [r7, #0]
 8005142:	687b      	ldr	r3, [r7, #4]
 8005144:	68ba      	ldr	r2, [r7, #8]
 8005146:	9202      	str	r2, [sp, #8]
 8005148:	9301      	str	r3, [sp, #4]
 800514a:	2300      	movs	r3, #0
 800514c:	9300      	str	r3, [sp, #0]
 800514e:	2300      	movs	r3, #0
 8005150:	460a      	mov	r2, r1
 8005152:	4924      	ldr	r1, [pc, #144]	@ (80051e4 <vTaskStartScheduler+0xc0>)
 8005154:	4824      	ldr	r0, [pc, #144]	@ (80051e8 <vTaskStartScheduler+0xc4>)
 8005156:	f7ff fdf1 	bl	8004d3c <xTaskCreateStatic>
 800515a:	4603      	mov	r3, r0
 800515c:	4a23      	ldr	r2, [pc, #140]	@ (80051ec <vTaskStartScheduler+0xc8>)
 800515e:	6013      	str	r3, [r2, #0]
 8005160:	4b22      	ldr	r3, [pc, #136]	@ (80051ec <vTaskStartScheduler+0xc8>)
 8005162:	681b      	ldr	r3, [r3, #0]
 8005164:	2b00      	cmp	r3, #0
 8005166:	d002      	beq.n	800516e <vTaskStartScheduler+0x4a>
 8005168:	2301      	movs	r3, #1
 800516a:	617b      	str	r3, [r7, #20]
 800516c:	e001      	b.n	8005172 <vTaskStartScheduler+0x4e>
 800516e:	2300      	movs	r3, #0
 8005170:	617b      	str	r3, [r7, #20]
 8005172:	697b      	ldr	r3, [r7, #20]
 8005174:	2b01      	cmp	r3, #1
 8005176:	d102      	bne.n	800517e <vTaskStartScheduler+0x5a>
 8005178:	f000 fd1a 	bl	8005bb0 <xTimerCreateTimerTask>
 800517c:	6178      	str	r0, [r7, #20]
 800517e:	697b      	ldr	r3, [r7, #20]
 8005180:	2b01      	cmp	r3, #1
 8005182:	d11b      	bne.n	80051bc <vTaskStartScheduler+0x98>
 8005184:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005188:	f383 8811 	msr	BASEPRI, r3
 800518c:	f3bf 8f6f 	isb	sy
 8005190:	f3bf 8f4f 	dsb	sy
 8005194:	613b      	str	r3, [r7, #16]
 8005196:	bf00      	nop
 8005198:	4b15      	ldr	r3, [pc, #84]	@ (80051f0 <vTaskStartScheduler+0xcc>)
 800519a:	681b      	ldr	r3, [r3, #0]
 800519c:	3354      	adds	r3, #84	@ 0x54
 800519e:	4a15      	ldr	r2, [pc, #84]	@ (80051f4 <vTaskStartScheduler+0xd0>)
 80051a0:	6013      	str	r3, [r2, #0]
 80051a2:	4b15      	ldr	r3, [pc, #84]	@ (80051f8 <vTaskStartScheduler+0xd4>)
 80051a4:	f04f 32ff 	mov.w	r2, #4294967295
 80051a8:	601a      	str	r2, [r3, #0]
 80051aa:	4b14      	ldr	r3, [pc, #80]	@ (80051fc <vTaskStartScheduler+0xd8>)
 80051ac:	2201      	movs	r2, #1
 80051ae:	601a      	str	r2, [r3, #0]
 80051b0:	4b13      	ldr	r3, [pc, #76]	@ (8005200 <vTaskStartScheduler+0xdc>)
 80051b2:	2200      	movs	r2, #0
 80051b4:	601a      	str	r2, [r3, #0]
 80051b6:	f001 f8e3 	bl	8006380 <xPortStartScheduler>
 80051ba:	e00f      	b.n	80051dc <vTaskStartScheduler+0xb8>
 80051bc:	697b      	ldr	r3, [r7, #20]
 80051be:	f1b3 3fff 	cmp.w	r3, #4294967295
 80051c2:	d10b      	bne.n	80051dc <vTaskStartScheduler+0xb8>
 80051c4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80051c8:	f383 8811 	msr	BASEPRI, r3
 80051cc:	f3bf 8f6f 	isb	sy
 80051d0:	f3bf 8f4f 	dsb	sy
 80051d4:	60fb      	str	r3, [r7, #12]
 80051d6:	bf00      	nop
 80051d8:	bf00      	nop
 80051da:	e7fd      	b.n	80051d8 <vTaskStartScheduler+0xb4>
 80051dc:	bf00      	nop
 80051de:	3718      	adds	r7, #24
 80051e0:	46bd      	mov	sp, r7
 80051e2:	bd80      	pop	{r7, pc}
 80051e4:	08007548 	.word	0x08007548
 80051e8:	08005835 	.word	0x08005835
 80051ec:	20000e90 	.word	0x20000e90
 80051f0:	20000998 	.word	0x20000998
 80051f4:	20000030 	.word	0x20000030
 80051f8:	20000e8c 	.word	0x20000e8c
 80051fc:	20000e78 	.word	0x20000e78
 8005200:	20000e70 	.word	0x20000e70

08005204 <vTaskSuspendAll>:
 8005204:	b480      	push	{r7}
 8005206:	af00      	add	r7, sp, #0
 8005208:	4b04      	ldr	r3, [pc, #16]	@ (800521c <vTaskSuspendAll+0x18>)
 800520a:	681b      	ldr	r3, [r3, #0]
 800520c:	3301      	adds	r3, #1
 800520e:	4a03      	ldr	r2, [pc, #12]	@ (800521c <vTaskSuspendAll+0x18>)
 8005210:	6013      	str	r3, [r2, #0]
 8005212:	bf00      	nop
 8005214:	46bd      	mov	sp, r7
 8005216:	f85d 7b04 	ldr.w	r7, [sp], #4
 800521a:	4770      	bx	lr
 800521c:	20000e94 	.word	0x20000e94

08005220 <xTaskResumeAll>:
 8005220:	b580      	push	{r7, lr}
 8005222:	b084      	sub	sp, #16
 8005224:	af00      	add	r7, sp, #0
 8005226:	2300      	movs	r3, #0
 8005228:	60fb      	str	r3, [r7, #12]
 800522a:	2300      	movs	r3, #0
 800522c:	60bb      	str	r3, [r7, #8]
 800522e:	4b42      	ldr	r3, [pc, #264]	@ (8005338 <xTaskResumeAll+0x118>)
 8005230:	681b      	ldr	r3, [r3, #0]
 8005232:	2b00      	cmp	r3, #0
 8005234:	d10b      	bne.n	800524e <xTaskResumeAll+0x2e>
 8005236:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800523a:	f383 8811 	msr	BASEPRI, r3
 800523e:	f3bf 8f6f 	isb	sy
 8005242:	f3bf 8f4f 	dsb	sy
 8005246:	603b      	str	r3, [r7, #0]
 8005248:	bf00      	nop
 800524a:	bf00      	nop
 800524c:	e7fd      	b.n	800524a <xTaskResumeAll+0x2a>
 800524e:	f001 f93b 	bl	80064c8 <vPortEnterCritical>
 8005252:	4b39      	ldr	r3, [pc, #228]	@ (8005338 <xTaskResumeAll+0x118>)
 8005254:	681b      	ldr	r3, [r3, #0]
 8005256:	3b01      	subs	r3, #1
 8005258:	4a37      	ldr	r2, [pc, #220]	@ (8005338 <xTaskResumeAll+0x118>)
 800525a:	6013      	str	r3, [r2, #0]
 800525c:	4b36      	ldr	r3, [pc, #216]	@ (8005338 <xTaskResumeAll+0x118>)
 800525e:	681b      	ldr	r3, [r3, #0]
 8005260:	2b00      	cmp	r3, #0
 8005262:	d162      	bne.n	800532a <xTaskResumeAll+0x10a>
 8005264:	4b35      	ldr	r3, [pc, #212]	@ (800533c <xTaskResumeAll+0x11c>)
 8005266:	681b      	ldr	r3, [r3, #0]
 8005268:	2b00      	cmp	r3, #0
 800526a:	d05e      	beq.n	800532a <xTaskResumeAll+0x10a>
 800526c:	e02f      	b.n	80052ce <xTaskResumeAll+0xae>
 800526e:	4b34      	ldr	r3, [pc, #208]	@ (8005340 <xTaskResumeAll+0x120>)
 8005270:	68db      	ldr	r3, [r3, #12]
 8005272:	68db      	ldr	r3, [r3, #12]
 8005274:	60fb      	str	r3, [r7, #12]
 8005276:	68fb      	ldr	r3, [r7, #12]
 8005278:	3318      	adds	r3, #24
 800527a:	4618      	mov	r0, r3
 800527c:	f7ff f83a 	bl	80042f4 <uxListRemove>
 8005280:	68fb      	ldr	r3, [r7, #12]
 8005282:	3304      	adds	r3, #4
 8005284:	4618      	mov	r0, r3
 8005286:	f7ff f835 	bl	80042f4 <uxListRemove>
 800528a:	68fb      	ldr	r3, [r7, #12]
 800528c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800528e:	4b2d      	ldr	r3, [pc, #180]	@ (8005344 <xTaskResumeAll+0x124>)
 8005290:	681b      	ldr	r3, [r3, #0]
 8005292:	429a      	cmp	r2, r3
 8005294:	d903      	bls.n	800529e <xTaskResumeAll+0x7e>
 8005296:	68fb      	ldr	r3, [r7, #12]
 8005298:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800529a:	4a2a      	ldr	r2, [pc, #168]	@ (8005344 <xTaskResumeAll+0x124>)
 800529c:	6013      	str	r3, [r2, #0]
 800529e:	68fb      	ldr	r3, [r7, #12]
 80052a0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80052a2:	4613      	mov	r3, r2
 80052a4:	009b      	lsls	r3, r3, #2
 80052a6:	4413      	add	r3, r2
 80052a8:	009b      	lsls	r3, r3, #2
 80052aa:	4a27      	ldr	r2, [pc, #156]	@ (8005348 <xTaskResumeAll+0x128>)
 80052ac:	441a      	add	r2, r3
 80052ae:	68fb      	ldr	r3, [r7, #12]
 80052b0:	3304      	adds	r3, #4
 80052b2:	4619      	mov	r1, r3
 80052b4:	4610      	mov	r0, r2
 80052b6:	f7fe ffc0 	bl	800423a <vListInsertEnd>
 80052ba:	68fb      	ldr	r3, [r7, #12]
 80052bc:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80052be:	4b23      	ldr	r3, [pc, #140]	@ (800534c <xTaskResumeAll+0x12c>)
 80052c0:	681b      	ldr	r3, [r3, #0]
 80052c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80052c4:	429a      	cmp	r2, r3
 80052c6:	d302      	bcc.n	80052ce <xTaskResumeAll+0xae>
 80052c8:	4b21      	ldr	r3, [pc, #132]	@ (8005350 <xTaskResumeAll+0x130>)
 80052ca:	2201      	movs	r2, #1
 80052cc:	601a      	str	r2, [r3, #0]
 80052ce:	4b1c      	ldr	r3, [pc, #112]	@ (8005340 <xTaskResumeAll+0x120>)
 80052d0:	681b      	ldr	r3, [r3, #0]
 80052d2:	2b00      	cmp	r3, #0
 80052d4:	d1cb      	bne.n	800526e <xTaskResumeAll+0x4e>
 80052d6:	68fb      	ldr	r3, [r7, #12]
 80052d8:	2b00      	cmp	r3, #0
 80052da:	d001      	beq.n	80052e0 <xTaskResumeAll+0xc0>
 80052dc:	f000 fb66 	bl	80059ac <prvResetNextTaskUnblockTime>
 80052e0:	4b1c      	ldr	r3, [pc, #112]	@ (8005354 <xTaskResumeAll+0x134>)
 80052e2:	681b      	ldr	r3, [r3, #0]
 80052e4:	607b      	str	r3, [r7, #4]
 80052e6:	687b      	ldr	r3, [r7, #4]
 80052e8:	2b00      	cmp	r3, #0
 80052ea:	d010      	beq.n	800530e <xTaskResumeAll+0xee>
 80052ec:	f000 f846 	bl	800537c <xTaskIncrementTick>
 80052f0:	4603      	mov	r3, r0
 80052f2:	2b00      	cmp	r3, #0
 80052f4:	d002      	beq.n	80052fc <xTaskResumeAll+0xdc>
 80052f6:	4b16      	ldr	r3, [pc, #88]	@ (8005350 <xTaskResumeAll+0x130>)
 80052f8:	2201      	movs	r2, #1
 80052fa:	601a      	str	r2, [r3, #0]
 80052fc:	687b      	ldr	r3, [r7, #4]
 80052fe:	3b01      	subs	r3, #1
 8005300:	607b      	str	r3, [r7, #4]
 8005302:	687b      	ldr	r3, [r7, #4]
 8005304:	2b00      	cmp	r3, #0
 8005306:	d1f1      	bne.n	80052ec <xTaskResumeAll+0xcc>
 8005308:	4b12      	ldr	r3, [pc, #72]	@ (8005354 <xTaskResumeAll+0x134>)
 800530a:	2200      	movs	r2, #0
 800530c:	601a      	str	r2, [r3, #0]
 800530e:	4b10      	ldr	r3, [pc, #64]	@ (8005350 <xTaskResumeAll+0x130>)
 8005310:	681b      	ldr	r3, [r3, #0]
 8005312:	2b00      	cmp	r3, #0
 8005314:	d009      	beq.n	800532a <xTaskResumeAll+0x10a>
 8005316:	2301      	movs	r3, #1
 8005318:	60bb      	str	r3, [r7, #8]
 800531a:	4b0f      	ldr	r3, [pc, #60]	@ (8005358 <xTaskResumeAll+0x138>)
 800531c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8005320:	601a      	str	r2, [r3, #0]
 8005322:	f3bf 8f4f 	dsb	sy
 8005326:	f3bf 8f6f 	isb	sy
 800532a:	f001 f8ff 	bl	800652c <vPortExitCritical>
 800532e:	68bb      	ldr	r3, [r7, #8]
 8005330:	4618      	mov	r0, r3
 8005332:	3710      	adds	r7, #16
 8005334:	46bd      	mov	sp, r7
 8005336:	bd80      	pop	{r7, pc}
 8005338:	20000e94 	.word	0x20000e94
 800533c:	20000e6c 	.word	0x20000e6c
 8005340:	20000e2c 	.word	0x20000e2c
 8005344:	20000e74 	.word	0x20000e74
 8005348:	2000099c 	.word	0x2000099c
 800534c:	20000998 	.word	0x20000998
 8005350:	20000e80 	.word	0x20000e80
 8005354:	20000e7c 	.word	0x20000e7c
 8005358:	e000ed04 	.word	0xe000ed04

0800535c <xTaskGetTickCount>:
 800535c:	b480      	push	{r7}
 800535e:	b083      	sub	sp, #12
 8005360:	af00      	add	r7, sp, #0
 8005362:	4b05      	ldr	r3, [pc, #20]	@ (8005378 <xTaskGetTickCount+0x1c>)
 8005364:	681b      	ldr	r3, [r3, #0]
 8005366:	607b      	str	r3, [r7, #4]
 8005368:	687b      	ldr	r3, [r7, #4]
 800536a:	4618      	mov	r0, r3
 800536c:	370c      	adds	r7, #12
 800536e:	46bd      	mov	sp, r7
 8005370:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005374:	4770      	bx	lr
 8005376:	bf00      	nop
 8005378:	20000e70 	.word	0x20000e70

0800537c <xTaskIncrementTick>:
 800537c:	b580      	push	{r7, lr}
 800537e:	b086      	sub	sp, #24
 8005380:	af00      	add	r7, sp, #0
 8005382:	2300      	movs	r3, #0
 8005384:	617b      	str	r3, [r7, #20]
 8005386:	4b4f      	ldr	r3, [pc, #316]	@ (80054c4 <xTaskIncrementTick+0x148>)
 8005388:	681b      	ldr	r3, [r3, #0]
 800538a:	2b00      	cmp	r3, #0
 800538c:	f040 8090 	bne.w	80054b0 <xTaskIncrementTick+0x134>
 8005390:	4b4d      	ldr	r3, [pc, #308]	@ (80054c8 <xTaskIncrementTick+0x14c>)
 8005392:	681b      	ldr	r3, [r3, #0]
 8005394:	3301      	adds	r3, #1
 8005396:	613b      	str	r3, [r7, #16]
 8005398:	4a4b      	ldr	r2, [pc, #300]	@ (80054c8 <xTaskIncrementTick+0x14c>)
 800539a:	693b      	ldr	r3, [r7, #16]
 800539c:	6013      	str	r3, [r2, #0]
 800539e:	693b      	ldr	r3, [r7, #16]
 80053a0:	2b00      	cmp	r3, #0
 80053a2:	d121      	bne.n	80053e8 <xTaskIncrementTick+0x6c>
 80053a4:	4b49      	ldr	r3, [pc, #292]	@ (80054cc <xTaskIncrementTick+0x150>)
 80053a6:	681b      	ldr	r3, [r3, #0]
 80053a8:	681b      	ldr	r3, [r3, #0]
 80053aa:	2b00      	cmp	r3, #0
 80053ac:	d00b      	beq.n	80053c6 <xTaskIncrementTick+0x4a>
 80053ae:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80053b2:	f383 8811 	msr	BASEPRI, r3
 80053b6:	f3bf 8f6f 	isb	sy
 80053ba:	f3bf 8f4f 	dsb	sy
 80053be:	603b      	str	r3, [r7, #0]
 80053c0:	bf00      	nop
 80053c2:	bf00      	nop
 80053c4:	e7fd      	b.n	80053c2 <xTaskIncrementTick+0x46>
 80053c6:	4b41      	ldr	r3, [pc, #260]	@ (80054cc <xTaskIncrementTick+0x150>)
 80053c8:	681b      	ldr	r3, [r3, #0]
 80053ca:	60fb      	str	r3, [r7, #12]
 80053cc:	4b40      	ldr	r3, [pc, #256]	@ (80054d0 <xTaskIncrementTick+0x154>)
 80053ce:	681b      	ldr	r3, [r3, #0]
 80053d0:	4a3e      	ldr	r2, [pc, #248]	@ (80054cc <xTaskIncrementTick+0x150>)
 80053d2:	6013      	str	r3, [r2, #0]
 80053d4:	4a3e      	ldr	r2, [pc, #248]	@ (80054d0 <xTaskIncrementTick+0x154>)
 80053d6:	68fb      	ldr	r3, [r7, #12]
 80053d8:	6013      	str	r3, [r2, #0]
 80053da:	4b3e      	ldr	r3, [pc, #248]	@ (80054d4 <xTaskIncrementTick+0x158>)
 80053dc:	681b      	ldr	r3, [r3, #0]
 80053de:	3301      	adds	r3, #1
 80053e0:	4a3c      	ldr	r2, [pc, #240]	@ (80054d4 <xTaskIncrementTick+0x158>)
 80053e2:	6013      	str	r3, [r2, #0]
 80053e4:	f000 fae2 	bl	80059ac <prvResetNextTaskUnblockTime>
 80053e8:	4b3b      	ldr	r3, [pc, #236]	@ (80054d8 <xTaskIncrementTick+0x15c>)
 80053ea:	681b      	ldr	r3, [r3, #0]
 80053ec:	693a      	ldr	r2, [r7, #16]
 80053ee:	429a      	cmp	r2, r3
 80053f0:	d349      	bcc.n	8005486 <xTaskIncrementTick+0x10a>
 80053f2:	4b36      	ldr	r3, [pc, #216]	@ (80054cc <xTaskIncrementTick+0x150>)
 80053f4:	681b      	ldr	r3, [r3, #0]
 80053f6:	681b      	ldr	r3, [r3, #0]
 80053f8:	2b00      	cmp	r3, #0
 80053fa:	d104      	bne.n	8005406 <xTaskIncrementTick+0x8a>
 80053fc:	4b36      	ldr	r3, [pc, #216]	@ (80054d8 <xTaskIncrementTick+0x15c>)
 80053fe:	f04f 32ff 	mov.w	r2, #4294967295
 8005402:	601a      	str	r2, [r3, #0]
 8005404:	e03f      	b.n	8005486 <xTaskIncrementTick+0x10a>
 8005406:	4b31      	ldr	r3, [pc, #196]	@ (80054cc <xTaskIncrementTick+0x150>)
 8005408:	681b      	ldr	r3, [r3, #0]
 800540a:	68db      	ldr	r3, [r3, #12]
 800540c:	68db      	ldr	r3, [r3, #12]
 800540e:	60bb      	str	r3, [r7, #8]
 8005410:	68bb      	ldr	r3, [r7, #8]
 8005412:	685b      	ldr	r3, [r3, #4]
 8005414:	607b      	str	r3, [r7, #4]
 8005416:	693a      	ldr	r2, [r7, #16]
 8005418:	687b      	ldr	r3, [r7, #4]
 800541a:	429a      	cmp	r2, r3
 800541c:	d203      	bcs.n	8005426 <xTaskIncrementTick+0xaa>
 800541e:	4a2e      	ldr	r2, [pc, #184]	@ (80054d8 <xTaskIncrementTick+0x15c>)
 8005420:	687b      	ldr	r3, [r7, #4]
 8005422:	6013      	str	r3, [r2, #0]
 8005424:	e02f      	b.n	8005486 <xTaskIncrementTick+0x10a>
 8005426:	68bb      	ldr	r3, [r7, #8]
 8005428:	3304      	adds	r3, #4
 800542a:	4618      	mov	r0, r3
 800542c:	f7fe ff62 	bl	80042f4 <uxListRemove>
 8005430:	68bb      	ldr	r3, [r7, #8]
 8005432:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005434:	2b00      	cmp	r3, #0
 8005436:	d004      	beq.n	8005442 <xTaskIncrementTick+0xc6>
 8005438:	68bb      	ldr	r3, [r7, #8]
 800543a:	3318      	adds	r3, #24
 800543c:	4618      	mov	r0, r3
 800543e:	f7fe ff59 	bl	80042f4 <uxListRemove>
 8005442:	68bb      	ldr	r3, [r7, #8]
 8005444:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8005446:	4b25      	ldr	r3, [pc, #148]	@ (80054dc <xTaskIncrementTick+0x160>)
 8005448:	681b      	ldr	r3, [r3, #0]
 800544a:	429a      	cmp	r2, r3
 800544c:	d903      	bls.n	8005456 <xTaskIncrementTick+0xda>
 800544e:	68bb      	ldr	r3, [r7, #8]
 8005450:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005452:	4a22      	ldr	r2, [pc, #136]	@ (80054dc <xTaskIncrementTick+0x160>)
 8005454:	6013      	str	r3, [r2, #0]
 8005456:	68bb      	ldr	r3, [r7, #8]
 8005458:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800545a:	4613      	mov	r3, r2
 800545c:	009b      	lsls	r3, r3, #2
 800545e:	4413      	add	r3, r2
 8005460:	009b      	lsls	r3, r3, #2
 8005462:	4a1f      	ldr	r2, [pc, #124]	@ (80054e0 <xTaskIncrementTick+0x164>)
 8005464:	441a      	add	r2, r3
 8005466:	68bb      	ldr	r3, [r7, #8]
 8005468:	3304      	adds	r3, #4
 800546a:	4619      	mov	r1, r3
 800546c:	4610      	mov	r0, r2
 800546e:	f7fe fee4 	bl	800423a <vListInsertEnd>
 8005472:	68bb      	ldr	r3, [r7, #8]
 8005474:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8005476:	4b1b      	ldr	r3, [pc, #108]	@ (80054e4 <xTaskIncrementTick+0x168>)
 8005478:	681b      	ldr	r3, [r3, #0]
 800547a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800547c:	429a      	cmp	r2, r3
 800547e:	d3b8      	bcc.n	80053f2 <xTaskIncrementTick+0x76>
 8005480:	2301      	movs	r3, #1
 8005482:	617b      	str	r3, [r7, #20]
 8005484:	e7b5      	b.n	80053f2 <xTaskIncrementTick+0x76>
 8005486:	4b17      	ldr	r3, [pc, #92]	@ (80054e4 <xTaskIncrementTick+0x168>)
 8005488:	681b      	ldr	r3, [r3, #0]
 800548a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800548c:	4914      	ldr	r1, [pc, #80]	@ (80054e0 <xTaskIncrementTick+0x164>)
 800548e:	4613      	mov	r3, r2
 8005490:	009b      	lsls	r3, r3, #2
 8005492:	4413      	add	r3, r2
 8005494:	009b      	lsls	r3, r3, #2
 8005496:	440b      	add	r3, r1
 8005498:	681b      	ldr	r3, [r3, #0]
 800549a:	2b01      	cmp	r3, #1
 800549c:	d901      	bls.n	80054a2 <xTaskIncrementTick+0x126>
 800549e:	2301      	movs	r3, #1
 80054a0:	617b      	str	r3, [r7, #20]
 80054a2:	4b11      	ldr	r3, [pc, #68]	@ (80054e8 <xTaskIncrementTick+0x16c>)
 80054a4:	681b      	ldr	r3, [r3, #0]
 80054a6:	2b00      	cmp	r3, #0
 80054a8:	d007      	beq.n	80054ba <xTaskIncrementTick+0x13e>
 80054aa:	2301      	movs	r3, #1
 80054ac:	617b      	str	r3, [r7, #20]
 80054ae:	e004      	b.n	80054ba <xTaskIncrementTick+0x13e>
 80054b0:	4b0e      	ldr	r3, [pc, #56]	@ (80054ec <xTaskIncrementTick+0x170>)
 80054b2:	681b      	ldr	r3, [r3, #0]
 80054b4:	3301      	adds	r3, #1
 80054b6:	4a0d      	ldr	r2, [pc, #52]	@ (80054ec <xTaskIncrementTick+0x170>)
 80054b8:	6013      	str	r3, [r2, #0]
 80054ba:	697b      	ldr	r3, [r7, #20]
 80054bc:	4618      	mov	r0, r3
 80054be:	3718      	adds	r7, #24
 80054c0:	46bd      	mov	sp, r7
 80054c2:	bd80      	pop	{r7, pc}
 80054c4:	20000e94 	.word	0x20000e94
 80054c8:	20000e70 	.word	0x20000e70
 80054cc:	20000e24 	.word	0x20000e24
 80054d0:	20000e28 	.word	0x20000e28
 80054d4:	20000e84 	.word	0x20000e84
 80054d8:	20000e8c 	.word	0x20000e8c
 80054dc:	20000e74 	.word	0x20000e74
 80054e0:	2000099c 	.word	0x2000099c
 80054e4:	20000998 	.word	0x20000998
 80054e8:	20000e80 	.word	0x20000e80
 80054ec:	20000e7c 	.word	0x20000e7c

080054f0 <vTaskSwitchContext>:
 80054f0:	b480      	push	{r7}
 80054f2:	b085      	sub	sp, #20
 80054f4:	af00      	add	r7, sp, #0
 80054f6:	4b2b      	ldr	r3, [pc, #172]	@ (80055a4 <vTaskSwitchContext+0xb4>)
 80054f8:	681b      	ldr	r3, [r3, #0]
 80054fa:	2b00      	cmp	r3, #0
 80054fc:	d003      	beq.n	8005506 <vTaskSwitchContext+0x16>
 80054fe:	4b2a      	ldr	r3, [pc, #168]	@ (80055a8 <vTaskSwitchContext+0xb8>)
 8005500:	2201      	movs	r2, #1
 8005502:	601a      	str	r2, [r3, #0]
 8005504:	e047      	b.n	8005596 <vTaskSwitchContext+0xa6>
 8005506:	4b28      	ldr	r3, [pc, #160]	@ (80055a8 <vTaskSwitchContext+0xb8>)
 8005508:	2200      	movs	r2, #0
 800550a:	601a      	str	r2, [r3, #0]
 800550c:	4b27      	ldr	r3, [pc, #156]	@ (80055ac <vTaskSwitchContext+0xbc>)
 800550e:	681b      	ldr	r3, [r3, #0]
 8005510:	60fb      	str	r3, [r7, #12]
 8005512:	e011      	b.n	8005538 <vTaskSwitchContext+0x48>
 8005514:	68fb      	ldr	r3, [r7, #12]
 8005516:	2b00      	cmp	r3, #0
 8005518:	d10b      	bne.n	8005532 <vTaskSwitchContext+0x42>
 800551a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800551e:	f383 8811 	msr	BASEPRI, r3
 8005522:	f3bf 8f6f 	isb	sy
 8005526:	f3bf 8f4f 	dsb	sy
 800552a:	607b      	str	r3, [r7, #4]
 800552c:	bf00      	nop
 800552e:	bf00      	nop
 8005530:	e7fd      	b.n	800552e <vTaskSwitchContext+0x3e>
 8005532:	68fb      	ldr	r3, [r7, #12]
 8005534:	3b01      	subs	r3, #1
 8005536:	60fb      	str	r3, [r7, #12]
 8005538:	491d      	ldr	r1, [pc, #116]	@ (80055b0 <vTaskSwitchContext+0xc0>)
 800553a:	68fa      	ldr	r2, [r7, #12]
 800553c:	4613      	mov	r3, r2
 800553e:	009b      	lsls	r3, r3, #2
 8005540:	4413      	add	r3, r2
 8005542:	009b      	lsls	r3, r3, #2
 8005544:	440b      	add	r3, r1
 8005546:	681b      	ldr	r3, [r3, #0]
 8005548:	2b00      	cmp	r3, #0
 800554a:	d0e3      	beq.n	8005514 <vTaskSwitchContext+0x24>
 800554c:	68fa      	ldr	r2, [r7, #12]
 800554e:	4613      	mov	r3, r2
 8005550:	009b      	lsls	r3, r3, #2
 8005552:	4413      	add	r3, r2
 8005554:	009b      	lsls	r3, r3, #2
 8005556:	4a16      	ldr	r2, [pc, #88]	@ (80055b0 <vTaskSwitchContext+0xc0>)
 8005558:	4413      	add	r3, r2
 800555a:	60bb      	str	r3, [r7, #8]
 800555c:	68bb      	ldr	r3, [r7, #8]
 800555e:	685b      	ldr	r3, [r3, #4]
 8005560:	685a      	ldr	r2, [r3, #4]
 8005562:	68bb      	ldr	r3, [r7, #8]
 8005564:	605a      	str	r2, [r3, #4]
 8005566:	68bb      	ldr	r3, [r7, #8]
 8005568:	685a      	ldr	r2, [r3, #4]
 800556a:	68bb      	ldr	r3, [r7, #8]
 800556c:	3308      	adds	r3, #8
 800556e:	429a      	cmp	r2, r3
 8005570:	d104      	bne.n	800557c <vTaskSwitchContext+0x8c>
 8005572:	68bb      	ldr	r3, [r7, #8]
 8005574:	685b      	ldr	r3, [r3, #4]
 8005576:	685a      	ldr	r2, [r3, #4]
 8005578:	68bb      	ldr	r3, [r7, #8]
 800557a:	605a      	str	r2, [r3, #4]
 800557c:	68bb      	ldr	r3, [r7, #8]
 800557e:	685b      	ldr	r3, [r3, #4]
 8005580:	68db      	ldr	r3, [r3, #12]
 8005582:	4a0c      	ldr	r2, [pc, #48]	@ (80055b4 <vTaskSwitchContext+0xc4>)
 8005584:	6013      	str	r3, [r2, #0]
 8005586:	4a09      	ldr	r2, [pc, #36]	@ (80055ac <vTaskSwitchContext+0xbc>)
 8005588:	68fb      	ldr	r3, [r7, #12]
 800558a:	6013      	str	r3, [r2, #0]
 800558c:	4b09      	ldr	r3, [pc, #36]	@ (80055b4 <vTaskSwitchContext+0xc4>)
 800558e:	681b      	ldr	r3, [r3, #0]
 8005590:	3354      	adds	r3, #84	@ 0x54
 8005592:	4a09      	ldr	r2, [pc, #36]	@ (80055b8 <vTaskSwitchContext+0xc8>)
 8005594:	6013      	str	r3, [r2, #0]
 8005596:	bf00      	nop
 8005598:	3714      	adds	r7, #20
 800559a:	46bd      	mov	sp, r7
 800559c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80055a0:	4770      	bx	lr
 80055a2:	bf00      	nop
 80055a4:	20000e94 	.word	0x20000e94
 80055a8:	20000e80 	.word	0x20000e80
 80055ac:	20000e74 	.word	0x20000e74
 80055b0:	2000099c 	.word	0x2000099c
 80055b4:	20000998 	.word	0x20000998
 80055b8:	20000030 	.word	0x20000030

080055bc <vTaskPlaceOnEventList>:
 80055bc:	b580      	push	{r7, lr}
 80055be:	b084      	sub	sp, #16
 80055c0:	af00      	add	r7, sp, #0
 80055c2:	6078      	str	r0, [r7, #4]
 80055c4:	6039      	str	r1, [r7, #0]
 80055c6:	687b      	ldr	r3, [r7, #4]
 80055c8:	2b00      	cmp	r3, #0
 80055ca:	d10b      	bne.n	80055e4 <vTaskPlaceOnEventList+0x28>
 80055cc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80055d0:	f383 8811 	msr	BASEPRI, r3
 80055d4:	f3bf 8f6f 	isb	sy
 80055d8:	f3bf 8f4f 	dsb	sy
 80055dc:	60fb      	str	r3, [r7, #12]
 80055de:	bf00      	nop
 80055e0:	bf00      	nop
 80055e2:	e7fd      	b.n	80055e0 <vTaskPlaceOnEventList+0x24>
 80055e4:	4b07      	ldr	r3, [pc, #28]	@ (8005604 <vTaskPlaceOnEventList+0x48>)
 80055e6:	681b      	ldr	r3, [r3, #0]
 80055e8:	3318      	adds	r3, #24
 80055ea:	4619      	mov	r1, r3
 80055ec:	6878      	ldr	r0, [r7, #4]
 80055ee:	f7fe fe48 	bl	8004282 <vListInsert>
 80055f2:	2101      	movs	r1, #1
 80055f4:	6838      	ldr	r0, [r7, #0]
 80055f6:	f000 fa87 	bl	8005b08 <prvAddCurrentTaskToDelayedList>
 80055fa:	bf00      	nop
 80055fc:	3710      	adds	r7, #16
 80055fe:	46bd      	mov	sp, r7
 8005600:	bd80      	pop	{r7, pc}
 8005602:	bf00      	nop
 8005604:	20000998 	.word	0x20000998

08005608 <vTaskPlaceOnEventListRestricted>:
 8005608:	b580      	push	{r7, lr}
 800560a:	b086      	sub	sp, #24
 800560c:	af00      	add	r7, sp, #0
 800560e:	60f8      	str	r0, [r7, #12]
 8005610:	60b9      	str	r1, [r7, #8]
 8005612:	607a      	str	r2, [r7, #4]
 8005614:	68fb      	ldr	r3, [r7, #12]
 8005616:	2b00      	cmp	r3, #0
 8005618:	d10b      	bne.n	8005632 <vTaskPlaceOnEventListRestricted+0x2a>
 800561a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800561e:	f383 8811 	msr	BASEPRI, r3
 8005622:	f3bf 8f6f 	isb	sy
 8005626:	f3bf 8f4f 	dsb	sy
 800562a:	617b      	str	r3, [r7, #20]
 800562c:	bf00      	nop
 800562e:	bf00      	nop
 8005630:	e7fd      	b.n	800562e <vTaskPlaceOnEventListRestricted+0x26>
 8005632:	4b0a      	ldr	r3, [pc, #40]	@ (800565c <vTaskPlaceOnEventListRestricted+0x54>)
 8005634:	681b      	ldr	r3, [r3, #0]
 8005636:	3318      	adds	r3, #24
 8005638:	4619      	mov	r1, r3
 800563a:	68f8      	ldr	r0, [r7, #12]
 800563c:	f7fe fdfd 	bl	800423a <vListInsertEnd>
 8005640:	687b      	ldr	r3, [r7, #4]
 8005642:	2b00      	cmp	r3, #0
 8005644:	d002      	beq.n	800564c <vTaskPlaceOnEventListRestricted+0x44>
 8005646:	f04f 33ff 	mov.w	r3, #4294967295
 800564a:	60bb      	str	r3, [r7, #8]
 800564c:	6879      	ldr	r1, [r7, #4]
 800564e:	68b8      	ldr	r0, [r7, #8]
 8005650:	f000 fa5a 	bl	8005b08 <prvAddCurrentTaskToDelayedList>
 8005654:	bf00      	nop
 8005656:	3718      	adds	r7, #24
 8005658:	46bd      	mov	sp, r7
 800565a:	bd80      	pop	{r7, pc}
 800565c:	20000998 	.word	0x20000998

08005660 <xTaskRemoveFromEventList>:
 8005660:	b580      	push	{r7, lr}
 8005662:	b086      	sub	sp, #24
 8005664:	af00      	add	r7, sp, #0
 8005666:	6078      	str	r0, [r7, #4]
 8005668:	687b      	ldr	r3, [r7, #4]
 800566a:	68db      	ldr	r3, [r3, #12]
 800566c:	68db      	ldr	r3, [r3, #12]
 800566e:	613b      	str	r3, [r7, #16]
 8005670:	693b      	ldr	r3, [r7, #16]
 8005672:	2b00      	cmp	r3, #0
 8005674:	d10b      	bne.n	800568e <xTaskRemoveFromEventList+0x2e>
 8005676:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800567a:	f383 8811 	msr	BASEPRI, r3
 800567e:	f3bf 8f6f 	isb	sy
 8005682:	f3bf 8f4f 	dsb	sy
 8005686:	60fb      	str	r3, [r7, #12]
 8005688:	bf00      	nop
 800568a:	bf00      	nop
 800568c:	e7fd      	b.n	800568a <xTaskRemoveFromEventList+0x2a>
 800568e:	693b      	ldr	r3, [r7, #16]
 8005690:	3318      	adds	r3, #24
 8005692:	4618      	mov	r0, r3
 8005694:	f7fe fe2e 	bl	80042f4 <uxListRemove>
 8005698:	4b1d      	ldr	r3, [pc, #116]	@ (8005710 <xTaskRemoveFromEventList+0xb0>)
 800569a:	681b      	ldr	r3, [r3, #0]
 800569c:	2b00      	cmp	r3, #0
 800569e:	d11d      	bne.n	80056dc <xTaskRemoveFromEventList+0x7c>
 80056a0:	693b      	ldr	r3, [r7, #16]
 80056a2:	3304      	adds	r3, #4
 80056a4:	4618      	mov	r0, r3
 80056a6:	f7fe fe25 	bl	80042f4 <uxListRemove>
 80056aa:	693b      	ldr	r3, [r7, #16]
 80056ac:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80056ae:	4b19      	ldr	r3, [pc, #100]	@ (8005714 <xTaskRemoveFromEventList+0xb4>)
 80056b0:	681b      	ldr	r3, [r3, #0]
 80056b2:	429a      	cmp	r2, r3
 80056b4:	d903      	bls.n	80056be <xTaskRemoveFromEventList+0x5e>
 80056b6:	693b      	ldr	r3, [r7, #16]
 80056b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80056ba:	4a16      	ldr	r2, [pc, #88]	@ (8005714 <xTaskRemoveFromEventList+0xb4>)
 80056bc:	6013      	str	r3, [r2, #0]
 80056be:	693b      	ldr	r3, [r7, #16]
 80056c0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80056c2:	4613      	mov	r3, r2
 80056c4:	009b      	lsls	r3, r3, #2
 80056c6:	4413      	add	r3, r2
 80056c8:	009b      	lsls	r3, r3, #2
 80056ca:	4a13      	ldr	r2, [pc, #76]	@ (8005718 <xTaskRemoveFromEventList+0xb8>)
 80056cc:	441a      	add	r2, r3
 80056ce:	693b      	ldr	r3, [r7, #16]
 80056d0:	3304      	adds	r3, #4
 80056d2:	4619      	mov	r1, r3
 80056d4:	4610      	mov	r0, r2
 80056d6:	f7fe fdb0 	bl	800423a <vListInsertEnd>
 80056da:	e005      	b.n	80056e8 <xTaskRemoveFromEventList+0x88>
 80056dc:	693b      	ldr	r3, [r7, #16]
 80056de:	3318      	adds	r3, #24
 80056e0:	4619      	mov	r1, r3
 80056e2:	480e      	ldr	r0, [pc, #56]	@ (800571c <xTaskRemoveFromEventList+0xbc>)
 80056e4:	f7fe fda9 	bl	800423a <vListInsertEnd>
 80056e8:	693b      	ldr	r3, [r7, #16]
 80056ea:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80056ec:	4b0c      	ldr	r3, [pc, #48]	@ (8005720 <xTaskRemoveFromEventList+0xc0>)
 80056ee:	681b      	ldr	r3, [r3, #0]
 80056f0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80056f2:	429a      	cmp	r2, r3
 80056f4:	d905      	bls.n	8005702 <xTaskRemoveFromEventList+0xa2>
 80056f6:	2301      	movs	r3, #1
 80056f8:	617b      	str	r3, [r7, #20]
 80056fa:	4b0a      	ldr	r3, [pc, #40]	@ (8005724 <xTaskRemoveFromEventList+0xc4>)
 80056fc:	2201      	movs	r2, #1
 80056fe:	601a      	str	r2, [r3, #0]
 8005700:	e001      	b.n	8005706 <xTaskRemoveFromEventList+0xa6>
 8005702:	2300      	movs	r3, #0
 8005704:	617b      	str	r3, [r7, #20]
 8005706:	697b      	ldr	r3, [r7, #20]
 8005708:	4618      	mov	r0, r3
 800570a:	3718      	adds	r7, #24
 800570c:	46bd      	mov	sp, r7
 800570e:	bd80      	pop	{r7, pc}
 8005710:	20000e94 	.word	0x20000e94
 8005714:	20000e74 	.word	0x20000e74
 8005718:	2000099c 	.word	0x2000099c
 800571c:	20000e2c 	.word	0x20000e2c
 8005720:	20000998 	.word	0x20000998
 8005724:	20000e80 	.word	0x20000e80

08005728 <vTaskInternalSetTimeOutState>:
 8005728:	b480      	push	{r7}
 800572a:	b083      	sub	sp, #12
 800572c:	af00      	add	r7, sp, #0
 800572e:	6078      	str	r0, [r7, #4]
 8005730:	4b06      	ldr	r3, [pc, #24]	@ (800574c <vTaskInternalSetTimeOutState+0x24>)
 8005732:	681a      	ldr	r2, [r3, #0]
 8005734:	687b      	ldr	r3, [r7, #4]
 8005736:	601a      	str	r2, [r3, #0]
 8005738:	4b05      	ldr	r3, [pc, #20]	@ (8005750 <vTaskInternalSetTimeOutState+0x28>)
 800573a:	681a      	ldr	r2, [r3, #0]
 800573c:	687b      	ldr	r3, [r7, #4]
 800573e:	605a      	str	r2, [r3, #4]
 8005740:	bf00      	nop
 8005742:	370c      	adds	r7, #12
 8005744:	46bd      	mov	sp, r7
 8005746:	f85d 7b04 	ldr.w	r7, [sp], #4
 800574a:	4770      	bx	lr
 800574c:	20000e84 	.word	0x20000e84
 8005750:	20000e70 	.word	0x20000e70

08005754 <xTaskCheckForTimeOut>:
 8005754:	b580      	push	{r7, lr}
 8005756:	b088      	sub	sp, #32
 8005758:	af00      	add	r7, sp, #0
 800575a:	6078      	str	r0, [r7, #4]
 800575c:	6039      	str	r1, [r7, #0]
 800575e:	687b      	ldr	r3, [r7, #4]
 8005760:	2b00      	cmp	r3, #0
 8005762:	d10b      	bne.n	800577c <xTaskCheckForTimeOut+0x28>
 8005764:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005768:	f383 8811 	msr	BASEPRI, r3
 800576c:	f3bf 8f6f 	isb	sy
 8005770:	f3bf 8f4f 	dsb	sy
 8005774:	613b      	str	r3, [r7, #16]
 8005776:	bf00      	nop
 8005778:	bf00      	nop
 800577a:	e7fd      	b.n	8005778 <xTaskCheckForTimeOut+0x24>
 800577c:	683b      	ldr	r3, [r7, #0]
 800577e:	2b00      	cmp	r3, #0
 8005780:	d10b      	bne.n	800579a <xTaskCheckForTimeOut+0x46>
 8005782:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005786:	f383 8811 	msr	BASEPRI, r3
 800578a:	f3bf 8f6f 	isb	sy
 800578e:	f3bf 8f4f 	dsb	sy
 8005792:	60fb      	str	r3, [r7, #12]
 8005794:	bf00      	nop
 8005796:	bf00      	nop
 8005798:	e7fd      	b.n	8005796 <xTaskCheckForTimeOut+0x42>
 800579a:	f000 fe95 	bl	80064c8 <vPortEnterCritical>
 800579e:	4b1d      	ldr	r3, [pc, #116]	@ (8005814 <xTaskCheckForTimeOut+0xc0>)
 80057a0:	681b      	ldr	r3, [r3, #0]
 80057a2:	61bb      	str	r3, [r7, #24]
 80057a4:	687b      	ldr	r3, [r7, #4]
 80057a6:	685b      	ldr	r3, [r3, #4]
 80057a8:	69ba      	ldr	r2, [r7, #24]
 80057aa:	1ad3      	subs	r3, r2, r3
 80057ac:	617b      	str	r3, [r7, #20]
 80057ae:	683b      	ldr	r3, [r7, #0]
 80057b0:	681b      	ldr	r3, [r3, #0]
 80057b2:	f1b3 3fff 	cmp.w	r3, #4294967295
 80057b6:	d102      	bne.n	80057be <xTaskCheckForTimeOut+0x6a>
 80057b8:	2300      	movs	r3, #0
 80057ba:	61fb      	str	r3, [r7, #28]
 80057bc:	e023      	b.n	8005806 <xTaskCheckForTimeOut+0xb2>
 80057be:	687b      	ldr	r3, [r7, #4]
 80057c0:	681a      	ldr	r2, [r3, #0]
 80057c2:	4b15      	ldr	r3, [pc, #84]	@ (8005818 <xTaskCheckForTimeOut+0xc4>)
 80057c4:	681b      	ldr	r3, [r3, #0]
 80057c6:	429a      	cmp	r2, r3
 80057c8:	d007      	beq.n	80057da <xTaskCheckForTimeOut+0x86>
 80057ca:	687b      	ldr	r3, [r7, #4]
 80057cc:	685b      	ldr	r3, [r3, #4]
 80057ce:	69ba      	ldr	r2, [r7, #24]
 80057d0:	429a      	cmp	r2, r3
 80057d2:	d302      	bcc.n	80057da <xTaskCheckForTimeOut+0x86>
 80057d4:	2301      	movs	r3, #1
 80057d6:	61fb      	str	r3, [r7, #28]
 80057d8:	e015      	b.n	8005806 <xTaskCheckForTimeOut+0xb2>
 80057da:	683b      	ldr	r3, [r7, #0]
 80057dc:	681b      	ldr	r3, [r3, #0]
 80057de:	697a      	ldr	r2, [r7, #20]
 80057e0:	429a      	cmp	r2, r3
 80057e2:	d20b      	bcs.n	80057fc <xTaskCheckForTimeOut+0xa8>
 80057e4:	683b      	ldr	r3, [r7, #0]
 80057e6:	681a      	ldr	r2, [r3, #0]
 80057e8:	697b      	ldr	r3, [r7, #20]
 80057ea:	1ad2      	subs	r2, r2, r3
 80057ec:	683b      	ldr	r3, [r7, #0]
 80057ee:	601a      	str	r2, [r3, #0]
 80057f0:	6878      	ldr	r0, [r7, #4]
 80057f2:	f7ff ff99 	bl	8005728 <vTaskInternalSetTimeOutState>
 80057f6:	2300      	movs	r3, #0
 80057f8:	61fb      	str	r3, [r7, #28]
 80057fa:	e004      	b.n	8005806 <xTaskCheckForTimeOut+0xb2>
 80057fc:	683b      	ldr	r3, [r7, #0]
 80057fe:	2200      	movs	r2, #0
 8005800:	601a      	str	r2, [r3, #0]
 8005802:	2301      	movs	r3, #1
 8005804:	61fb      	str	r3, [r7, #28]
 8005806:	f000 fe91 	bl	800652c <vPortExitCritical>
 800580a:	69fb      	ldr	r3, [r7, #28]
 800580c:	4618      	mov	r0, r3
 800580e:	3720      	adds	r7, #32
 8005810:	46bd      	mov	sp, r7
 8005812:	bd80      	pop	{r7, pc}
 8005814:	20000e70 	.word	0x20000e70
 8005818:	20000e84 	.word	0x20000e84

0800581c <vTaskMissedYield>:
 800581c:	b480      	push	{r7}
 800581e:	af00      	add	r7, sp, #0
 8005820:	4b03      	ldr	r3, [pc, #12]	@ (8005830 <vTaskMissedYield+0x14>)
 8005822:	2201      	movs	r2, #1
 8005824:	601a      	str	r2, [r3, #0]
 8005826:	bf00      	nop
 8005828:	46bd      	mov	sp, r7
 800582a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800582e:	4770      	bx	lr
 8005830:	20000e80 	.word	0x20000e80

08005834 <prvIdleTask>:
 8005834:	b580      	push	{r7, lr}
 8005836:	b082      	sub	sp, #8
 8005838:	af00      	add	r7, sp, #0
 800583a:	6078      	str	r0, [r7, #4]
 800583c:	f000 f852 	bl	80058e4 <prvCheckTasksWaitingTermination>
 8005840:	4b06      	ldr	r3, [pc, #24]	@ (800585c <prvIdleTask+0x28>)
 8005842:	681b      	ldr	r3, [r3, #0]
 8005844:	2b01      	cmp	r3, #1
 8005846:	d9f9      	bls.n	800583c <prvIdleTask+0x8>
 8005848:	4b05      	ldr	r3, [pc, #20]	@ (8005860 <prvIdleTask+0x2c>)
 800584a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800584e:	601a      	str	r2, [r3, #0]
 8005850:	f3bf 8f4f 	dsb	sy
 8005854:	f3bf 8f6f 	isb	sy
 8005858:	e7f0      	b.n	800583c <prvIdleTask+0x8>
 800585a:	bf00      	nop
 800585c:	2000099c 	.word	0x2000099c
 8005860:	e000ed04 	.word	0xe000ed04

08005864 <prvInitialiseTaskLists>:
 8005864:	b580      	push	{r7, lr}
 8005866:	b082      	sub	sp, #8
 8005868:	af00      	add	r7, sp, #0
 800586a:	2300      	movs	r3, #0
 800586c:	607b      	str	r3, [r7, #4]
 800586e:	e00c      	b.n	800588a <prvInitialiseTaskLists+0x26>
 8005870:	687a      	ldr	r2, [r7, #4]
 8005872:	4613      	mov	r3, r2
 8005874:	009b      	lsls	r3, r3, #2
 8005876:	4413      	add	r3, r2
 8005878:	009b      	lsls	r3, r3, #2
 800587a:	4a12      	ldr	r2, [pc, #72]	@ (80058c4 <prvInitialiseTaskLists+0x60>)
 800587c:	4413      	add	r3, r2
 800587e:	4618      	mov	r0, r3
 8005880:	f7fe fcae 	bl	80041e0 <vListInitialise>
 8005884:	687b      	ldr	r3, [r7, #4]
 8005886:	3301      	adds	r3, #1
 8005888:	607b      	str	r3, [r7, #4]
 800588a:	687b      	ldr	r3, [r7, #4]
 800588c:	2b37      	cmp	r3, #55	@ 0x37
 800588e:	d9ef      	bls.n	8005870 <prvInitialiseTaskLists+0xc>
 8005890:	480d      	ldr	r0, [pc, #52]	@ (80058c8 <prvInitialiseTaskLists+0x64>)
 8005892:	f7fe fca5 	bl	80041e0 <vListInitialise>
 8005896:	480d      	ldr	r0, [pc, #52]	@ (80058cc <prvInitialiseTaskLists+0x68>)
 8005898:	f7fe fca2 	bl	80041e0 <vListInitialise>
 800589c:	480c      	ldr	r0, [pc, #48]	@ (80058d0 <prvInitialiseTaskLists+0x6c>)
 800589e:	f7fe fc9f 	bl	80041e0 <vListInitialise>
 80058a2:	480c      	ldr	r0, [pc, #48]	@ (80058d4 <prvInitialiseTaskLists+0x70>)
 80058a4:	f7fe fc9c 	bl	80041e0 <vListInitialise>
 80058a8:	480b      	ldr	r0, [pc, #44]	@ (80058d8 <prvInitialiseTaskLists+0x74>)
 80058aa:	f7fe fc99 	bl	80041e0 <vListInitialise>
 80058ae:	4b0b      	ldr	r3, [pc, #44]	@ (80058dc <prvInitialiseTaskLists+0x78>)
 80058b0:	4a05      	ldr	r2, [pc, #20]	@ (80058c8 <prvInitialiseTaskLists+0x64>)
 80058b2:	601a      	str	r2, [r3, #0]
 80058b4:	4b0a      	ldr	r3, [pc, #40]	@ (80058e0 <prvInitialiseTaskLists+0x7c>)
 80058b6:	4a05      	ldr	r2, [pc, #20]	@ (80058cc <prvInitialiseTaskLists+0x68>)
 80058b8:	601a      	str	r2, [r3, #0]
 80058ba:	bf00      	nop
 80058bc:	3708      	adds	r7, #8
 80058be:	46bd      	mov	sp, r7
 80058c0:	bd80      	pop	{r7, pc}
 80058c2:	bf00      	nop
 80058c4:	2000099c 	.word	0x2000099c
 80058c8:	20000dfc 	.word	0x20000dfc
 80058cc:	20000e10 	.word	0x20000e10
 80058d0:	20000e2c 	.word	0x20000e2c
 80058d4:	20000e40 	.word	0x20000e40
 80058d8:	20000e58 	.word	0x20000e58
 80058dc:	20000e24 	.word	0x20000e24
 80058e0:	20000e28 	.word	0x20000e28

080058e4 <prvCheckTasksWaitingTermination>:
 80058e4:	b580      	push	{r7, lr}
 80058e6:	b082      	sub	sp, #8
 80058e8:	af00      	add	r7, sp, #0
 80058ea:	e019      	b.n	8005920 <prvCheckTasksWaitingTermination+0x3c>
 80058ec:	f000 fdec 	bl	80064c8 <vPortEnterCritical>
 80058f0:	4b10      	ldr	r3, [pc, #64]	@ (8005934 <prvCheckTasksWaitingTermination+0x50>)
 80058f2:	68db      	ldr	r3, [r3, #12]
 80058f4:	68db      	ldr	r3, [r3, #12]
 80058f6:	607b      	str	r3, [r7, #4]
 80058f8:	687b      	ldr	r3, [r7, #4]
 80058fa:	3304      	adds	r3, #4
 80058fc:	4618      	mov	r0, r3
 80058fe:	f7fe fcf9 	bl	80042f4 <uxListRemove>
 8005902:	4b0d      	ldr	r3, [pc, #52]	@ (8005938 <prvCheckTasksWaitingTermination+0x54>)
 8005904:	681b      	ldr	r3, [r3, #0]
 8005906:	3b01      	subs	r3, #1
 8005908:	4a0b      	ldr	r2, [pc, #44]	@ (8005938 <prvCheckTasksWaitingTermination+0x54>)
 800590a:	6013      	str	r3, [r2, #0]
 800590c:	4b0b      	ldr	r3, [pc, #44]	@ (800593c <prvCheckTasksWaitingTermination+0x58>)
 800590e:	681b      	ldr	r3, [r3, #0]
 8005910:	3b01      	subs	r3, #1
 8005912:	4a0a      	ldr	r2, [pc, #40]	@ (800593c <prvCheckTasksWaitingTermination+0x58>)
 8005914:	6013      	str	r3, [r2, #0]
 8005916:	f000 fe09 	bl	800652c <vPortExitCritical>
 800591a:	6878      	ldr	r0, [r7, #4]
 800591c:	f000 f810 	bl	8005940 <prvDeleteTCB>
 8005920:	4b06      	ldr	r3, [pc, #24]	@ (800593c <prvCheckTasksWaitingTermination+0x58>)
 8005922:	681b      	ldr	r3, [r3, #0]
 8005924:	2b00      	cmp	r3, #0
 8005926:	d1e1      	bne.n	80058ec <prvCheckTasksWaitingTermination+0x8>
 8005928:	bf00      	nop
 800592a:	bf00      	nop
 800592c:	3708      	adds	r7, #8
 800592e:	46bd      	mov	sp, r7
 8005930:	bd80      	pop	{r7, pc}
 8005932:	bf00      	nop
 8005934:	20000e40 	.word	0x20000e40
 8005938:	20000e6c 	.word	0x20000e6c
 800593c:	20000e54 	.word	0x20000e54

08005940 <prvDeleteTCB>:
 8005940:	b580      	push	{r7, lr}
 8005942:	b084      	sub	sp, #16
 8005944:	af00      	add	r7, sp, #0
 8005946:	6078      	str	r0, [r7, #4]
 8005948:	687b      	ldr	r3, [r7, #4]
 800594a:	3354      	adds	r3, #84	@ 0x54
 800594c:	4618      	mov	r0, r3
 800594e:	f001 f9a3 	bl	8006c98 <_reclaim_reent>
 8005952:	687b      	ldr	r3, [r7, #4]
 8005954:	f893 30a5 	ldrb.w	r3, [r3, #165]	@ 0xa5
 8005958:	2b00      	cmp	r3, #0
 800595a:	d108      	bne.n	800596e <prvDeleteTCB+0x2e>
 800595c:	687b      	ldr	r3, [r7, #4]
 800595e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005960:	4618      	mov	r0, r3
 8005962:	f000 ffa1 	bl	80068a8 <vPortFree>
 8005966:	6878      	ldr	r0, [r7, #4]
 8005968:	f000 ff9e 	bl	80068a8 <vPortFree>
 800596c:	e019      	b.n	80059a2 <prvDeleteTCB+0x62>
 800596e:	687b      	ldr	r3, [r7, #4]
 8005970:	f893 30a5 	ldrb.w	r3, [r3, #165]	@ 0xa5
 8005974:	2b01      	cmp	r3, #1
 8005976:	d103      	bne.n	8005980 <prvDeleteTCB+0x40>
 8005978:	6878      	ldr	r0, [r7, #4]
 800597a:	f000 ff95 	bl	80068a8 <vPortFree>
 800597e:	e010      	b.n	80059a2 <prvDeleteTCB+0x62>
 8005980:	687b      	ldr	r3, [r7, #4]
 8005982:	f893 30a5 	ldrb.w	r3, [r3, #165]	@ 0xa5
 8005986:	2b02      	cmp	r3, #2
 8005988:	d00b      	beq.n	80059a2 <prvDeleteTCB+0x62>
 800598a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800598e:	f383 8811 	msr	BASEPRI, r3
 8005992:	f3bf 8f6f 	isb	sy
 8005996:	f3bf 8f4f 	dsb	sy
 800599a:	60fb      	str	r3, [r7, #12]
 800599c:	bf00      	nop
 800599e:	bf00      	nop
 80059a0:	e7fd      	b.n	800599e <prvDeleteTCB+0x5e>
 80059a2:	bf00      	nop
 80059a4:	3710      	adds	r7, #16
 80059a6:	46bd      	mov	sp, r7
 80059a8:	bd80      	pop	{r7, pc}
	...

080059ac <prvResetNextTaskUnblockTime>:
 80059ac:	b480      	push	{r7}
 80059ae:	b083      	sub	sp, #12
 80059b0:	af00      	add	r7, sp, #0
 80059b2:	4b0c      	ldr	r3, [pc, #48]	@ (80059e4 <prvResetNextTaskUnblockTime+0x38>)
 80059b4:	681b      	ldr	r3, [r3, #0]
 80059b6:	681b      	ldr	r3, [r3, #0]
 80059b8:	2b00      	cmp	r3, #0
 80059ba:	d104      	bne.n	80059c6 <prvResetNextTaskUnblockTime+0x1a>
 80059bc:	4b0a      	ldr	r3, [pc, #40]	@ (80059e8 <prvResetNextTaskUnblockTime+0x3c>)
 80059be:	f04f 32ff 	mov.w	r2, #4294967295
 80059c2:	601a      	str	r2, [r3, #0]
 80059c4:	e008      	b.n	80059d8 <prvResetNextTaskUnblockTime+0x2c>
 80059c6:	4b07      	ldr	r3, [pc, #28]	@ (80059e4 <prvResetNextTaskUnblockTime+0x38>)
 80059c8:	681b      	ldr	r3, [r3, #0]
 80059ca:	68db      	ldr	r3, [r3, #12]
 80059cc:	68db      	ldr	r3, [r3, #12]
 80059ce:	607b      	str	r3, [r7, #4]
 80059d0:	687b      	ldr	r3, [r7, #4]
 80059d2:	685b      	ldr	r3, [r3, #4]
 80059d4:	4a04      	ldr	r2, [pc, #16]	@ (80059e8 <prvResetNextTaskUnblockTime+0x3c>)
 80059d6:	6013      	str	r3, [r2, #0]
 80059d8:	bf00      	nop
 80059da:	370c      	adds	r7, #12
 80059dc:	46bd      	mov	sp, r7
 80059de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80059e2:	4770      	bx	lr
 80059e4:	20000e24 	.word	0x20000e24
 80059e8:	20000e8c 	.word	0x20000e8c

080059ec <xTaskGetSchedulerState>:
 80059ec:	b480      	push	{r7}
 80059ee:	b083      	sub	sp, #12
 80059f0:	af00      	add	r7, sp, #0
 80059f2:	4b0b      	ldr	r3, [pc, #44]	@ (8005a20 <xTaskGetSchedulerState+0x34>)
 80059f4:	681b      	ldr	r3, [r3, #0]
 80059f6:	2b00      	cmp	r3, #0
 80059f8:	d102      	bne.n	8005a00 <xTaskGetSchedulerState+0x14>
 80059fa:	2301      	movs	r3, #1
 80059fc:	607b      	str	r3, [r7, #4]
 80059fe:	e008      	b.n	8005a12 <xTaskGetSchedulerState+0x26>
 8005a00:	4b08      	ldr	r3, [pc, #32]	@ (8005a24 <xTaskGetSchedulerState+0x38>)
 8005a02:	681b      	ldr	r3, [r3, #0]
 8005a04:	2b00      	cmp	r3, #0
 8005a06:	d102      	bne.n	8005a0e <xTaskGetSchedulerState+0x22>
 8005a08:	2302      	movs	r3, #2
 8005a0a:	607b      	str	r3, [r7, #4]
 8005a0c:	e001      	b.n	8005a12 <xTaskGetSchedulerState+0x26>
 8005a0e:	2300      	movs	r3, #0
 8005a10:	607b      	str	r3, [r7, #4]
 8005a12:	687b      	ldr	r3, [r7, #4]
 8005a14:	4618      	mov	r0, r3
 8005a16:	370c      	adds	r7, #12
 8005a18:	46bd      	mov	sp, r7
 8005a1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a1e:	4770      	bx	lr
 8005a20:	20000e78 	.word	0x20000e78
 8005a24:	20000e94 	.word	0x20000e94

08005a28 <xTaskPriorityDisinherit>:
 8005a28:	b580      	push	{r7, lr}
 8005a2a:	b086      	sub	sp, #24
 8005a2c:	af00      	add	r7, sp, #0
 8005a2e:	6078      	str	r0, [r7, #4]
 8005a30:	687b      	ldr	r3, [r7, #4]
 8005a32:	613b      	str	r3, [r7, #16]
 8005a34:	2300      	movs	r3, #0
 8005a36:	617b      	str	r3, [r7, #20]
 8005a38:	687b      	ldr	r3, [r7, #4]
 8005a3a:	2b00      	cmp	r3, #0
 8005a3c:	d058      	beq.n	8005af0 <xTaskPriorityDisinherit+0xc8>
 8005a3e:	4b2f      	ldr	r3, [pc, #188]	@ (8005afc <xTaskPriorityDisinherit+0xd4>)
 8005a40:	681b      	ldr	r3, [r3, #0]
 8005a42:	693a      	ldr	r2, [r7, #16]
 8005a44:	429a      	cmp	r2, r3
 8005a46:	d00b      	beq.n	8005a60 <xTaskPriorityDisinherit+0x38>
 8005a48:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005a4c:	f383 8811 	msr	BASEPRI, r3
 8005a50:	f3bf 8f6f 	isb	sy
 8005a54:	f3bf 8f4f 	dsb	sy
 8005a58:	60fb      	str	r3, [r7, #12]
 8005a5a:	bf00      	nop
 8005a5c:	bf00      	nop
 8005a5e:	e7fd      	b.n	8005a5c <xTaskPriorityDisinherit+0x34>
 8005a60:	693b      	ldr	r3, [r7, #16]
 8005a62:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8005a64:	2b00      	cmp	r3, #0
 8005a66:	d10b      	bne.n	8005a80 <xTaskPriorityDisinherit+0x58>
 8005a68:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005a6c:	f383 8811 	msr	BASEPRI, r3
 8005a70:	f3bf 8f6f 	isb	sy
 8005a74:	f3bf 8f4f 	dsb	sy
 8005a78:	60bb      	str	r3, [r7, #8]
 8005a7a:	bf00      	nop
 8005a7c:	bf00      	nop
 8005a7e:	e7fd      	b.n	8005a7c <xTaskPriorityDisinherit+0x54>
 8005a80:	693b      	ldr	r3, [r7, #16]
 8005a82:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8005a84:	1e5a      	subs	r2, r3, #1
 8005a86:	693b      	ldr	r3, [r7, #16]
 8005a88:	651a      	str	r2, [r3, #80]	@ 0x50
 8005a8a:	693b      	ldr	r3, [r7, #16]
 8005a8c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8005a8e:	693b      	ldr	r3, [r7, #16]
 8005a90:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005a92:	429a      	cmp	r2, r3
 8005a94:	d02c      	beq.n	8005af0 <xTaskPriorityDisinherit+0xc8>
 8005a96:	693b      	ldr	r3, [r7, #16]
 8005a98:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8005a9a:	2b00      	cmp	r3, #0
 8005a9c:	d128      	bne.n	8005af0 <xTaskPriorityDisinherit+0xc8>
 8005a9e:	693b      	ldr	r3, [r7, #16]
 8005aa0:	3304      	adds	r3, #4
 8005aa2:	4618      	mov	r0, r3
 8005aa4:	f7fe fc26 	bl	80042f4 <uxListRemove>
 8005aa8:	693b      	ldr	r3, [r7, #16]
 8005aaa:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 8005aac:	693b      	ldr	r3, [r7, #16]
 8005aae:	62da      	str	r2, [r3, #44]	@ 0x2c
 8005ab0:	693b      	ldr	r3, [r7, #16]
 8005ab2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005ab4:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 8005ab8:	693b      	ldr	r3, [r7, #16]
 8005aba:	619a      	str	r2, [r3, #24]
 8005abc:	693b      	ldr	r3, [r7, #16]
 8005abe:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8005ac0:	4b0f      	ldr	r3, [pc, #60]	@ (8005b00 <xTaskPriorityDisinherit+0xd8>)
 8005ac2:	681b      	ldr	r3, [r3, #0]
 8005ac4:	429a      	cmp	r2, r3
 8005ac6:	d903      	bls.n	8005ad0 <xTaskPriorityDisinherit+0xa8>
 8005ac8:	693b      	ldr	r3, [r7, #16]
 8005aca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005acc:	4a0c      	ldr	r2, [pc, #48]	@ (8005b00 <xTaskPriorityDisinherit+0xd8>)
 8005ace:	6013      	str	r3, [r2, #0]
 8005ad0:	693b      	ldr	r3, [r7, #16]
 8005ad2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8005ad4:	4613      	mov	r3, r2
 8005ad6:	009b      	lsls	r3, r3, #2
 8005ad8:	4413      	add	r3, r2
 8005ada:	009b      	lsls	r3, r3, #2
 8005adc:	4a09      	ldr	r2, [pc, #36]	@ (8005b04 <xTaskPriorityDisinherit+0xdc>)
 8005ade:	441a      	add	r2, r3
 8005ae0:	693b      	ldr	r3, [r7, #16]
 8005ae2:	3304      	adds	r3, #4
 8005ae4:	4619      	mov	r1, r3
 8005ae6:	4610      	mov	r0, r2
 8005ae8:	f7fe fba7 	bl	800423a <vListInsertEnd>
 8005aec:	2301      	movs	r3, #1
 8005aee:	617b      	str	r3, [r7, #20]
 8005af0:	697b      	ldr	r3, [r7, #20]
 8005af2:	4618      	mov	r0, r3
 8005af4:	3718      	adds	r7, #24
 8005af6:	46bd      	mov	sp, r7
 8005af8:	bd80      	pop	{r7, pc}
 8005afa:	bf00      	nop
 8005afc:	20000998 	.word	0x20000998
 8005b00:	20000e74 	.word	0x20000e74
 8005b04:	2000099c 	.word	0x2000099c

08005b08 <prvAddCurrentTaskToDelayedList>:
 8005b08:	b580      	push	{r7, lr}
 8005b0a:	b084      	sub	sp, #16
 8005b0c:	af00      	add	r7, sp, #0
 8005b0e:	6078      	str	r0, [r7, #4]
 8005b10:	6039      	str	r1, [r7, #0]
 8005b12:	4b21      	ldr	r3, [pc, #132]	@ (8005b98 <prvAddCurrentTaskToDelayedList+0x90>)
 8005b14:	681b      	ldr	r3, [r3, #0]
 8005b16:	60fb      	str	r3, [r7, #12]
 8005b18:	4b20      	ldr	r3, [pc, #128]	@ (8005b9c <prvAddCurrentTaskToDelayedList+0x94>)
 8005b1a:	681b      	ldr	r3, [r3, #0]
 8005b1c:	3304      	adds	r3, #4
 8005b1e:	4618      	mov	r0, r3
 8005b20:	f7fe fbe8 	bl	80042f4 <uxListRemove>
 8005b24:	687b      	ldr	r3, [r7, #4]
 8005b26:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005b2a:	d10a      	bne.n	8005b42 <prvAddCurrentTaskToDelayedList+0x3a>
 8005b2c:	683b      	ldr	r3, [r7, #0]
 8005b2e:	2b00      	cmp	r3, #0
 8005b30:	d007      	beq.n	8005b42 <prvAddCurrentTaskToDelayedList+0x3a>
 8005b32:	4b1a      	ldr	r3, [pc, #104]	@ (8005b9c <prvAddCurrentTaskToDelayedList+0x94>)
 8005b34:	681b      	ldr	r3, [r3, #0]
 8005b36:	3304      	adds	r3, #4
 8005b38:	4619      	mov	r1, r3
 8005b3a:	4819      	ldr	r0, [pc, #100]	@ (8005ba0 <prvAddCurrentTaskToDelayedList+0x98>)
 8005b3c:	f7fe fb7d 	bl	800423a <vListInsertEnd>
 8005b40:	e026      	b.n	8005b90 <prvAddCurrentTaskToDelayedList+0x88>
 8005b42:	68fa      	ldr	r2, [r7, #12]
 8005b44:	687b      	ldr	r3, [r7, #4]
 8005b46:	4413      	add	r3, r2
 8005b48:	60bb      	str	r3, [r7, #8]
 8005b4a:	4b14      	ldr	r3, [pc, #80]	@ (8005b9c <prvAddCurrentTaskToDelayedList+0x94>)
 8005b4c:	681b      	ldr	r3, [r3, #0]
 8005b4e:	68ba      	ldr	r2, [r7, #8]
 8005b50:	605a      	str	r2, [r3, #4]
 8005b52:	68ba      	ldr	r2, [r7, #8]
 8005b54:	68fb      	ldr	r3, [r7, #12]
 8005b56:	429a      	cmp	r2, r3
 8005b58:	d209      	bcs.n	8005b6e <prvAddCurrentTaskToDelayedList+0x66>
 8005b5a:	4b12      	ldr	r3, [pc, #72]	@ (8005ba4 <prvAddCurrentTaskToDelayedList+0x9c>)
 8005b5c:	681a      	ldr	r2, [r3, #0]
 8005b5e:	4b0f      	ldr	r3, [pc, #60]	@ (8005b9c <prvAddCurrentTaskToDelayedList+0x94>)
 8005b60:	681b      	ldr	r3, [r3, #0]
 8005b62:	3304      	adds	r3, #4
 8005b64:	4619      	mov	r1, r3
 8005b66:	4610      	mov	r0, r2
 8005b68:	f7fe fb8b 	bl	8004282 <vListInsert>
 8005b6c:	e010      	b.n	8005b90 <prvAddCurrentTaskToDelayedList+0x88>
 8005b6e:	4b0e      	ldr	r3, [pc, #56]	@ (8005ba8 <prvAddCurrentTaskToDelayedList+0xa0>)
 8005b70:	681a      	ldr	r2, [r3, #0]
 8005b72:	4b0a      	ldr	r3, [pc, #40]	@ (8005b9c <prvAddCurrentTaskToDelayedList+0x94>)
 8005b74:	681b      	ldr	r3, [r3, #0]
 8005b76:	3304      	adds	r3, #4
 8005b78:	4619      	mov	r1, r3
 8005b7a:	4610      	mov	r0, r2
 8005b7c:	f7fe fb81 	bl	8004282 <vListInsert>
 8005b80:	4b0a      	ldr	r3, [pc, #40]	@ (8005bac <prvAddCurrentTaskToDelayedList+0xa4>)
 8005b82:	681b      	ldr	r3, [r3, #0]
 8005b84:	68ba      	ldr	r2, [r7, #8]
 8005b86:	429a      	cmp	r2, r3
 8005b88:	d202      	bcs.n	8005b90 <prvAddCurrentTaskToDelayedList+0x88>
 8005b8a:	4a08      	ldr	r2, [pc, #32]	@ (8005bac <prvAddCurrentTaskToDelayedList+0xa4>)
 8005b8c:	68bb      	ldr	r3, [r7, #8]
 8005b8e:	6013      	str	r3, [r2, #0]
 8005b90:	bf00      	nop
 8005b92:	3710      	adds	r7, #16
 8005b94:	46bd      	mov	sp, r7
 8005b96:	bd80      	pop	{r7, pc}
 8005b98:	20000e70 	.word	0x20000e70
 8005b9c:	20000998 	.word	0x20000998
 8005ba0:	20000e58 	.word	0x20000e58
 8005ba4:	20000e28 	.word	0x20000e28
 8005ba8:	20000e24 	.word	0x20000e24
 8005bac:	20000e8c 	.word	0x20000e8c

08005bb0 <xTimerCreateTimerTask>:
 8005bb0:	b580      	push	{r7, lr}
 8005bb2:	b08a      	sub	sp, #40	@ 0x28
 8005bb4:	af04      	add	r7, sp, #16
 8005bb6:	2300      	movs	r3, #0
 8005bb8:	617b      	str	r3, [r7, #20]
 8005bba:	f000 fb13 	bl	80061e4 <prvCheckForValidListAndQueue>
 8005bbe:	4b1d      	ldr	r3, [pc, #116]	@ (8005c34 <xTimerCreateTimerTask+0x84>)
 8005bc0:	681b      	ldr	r3, [r3, #0]
 8005bc2:	2b00      	cmp	r3, #0
 8005bc4:	d021      	beq.n	8005c0a <xTimerCreateTimerTask+0x5a>
 8005bc6:	2300      	movs	r3, #0
 8005bc8:	60fb      	str	r3, [r7, #12]
 8005bca:	2300      	movs	r3, #0
 8005bcc:	60bb      	str	r3, [r7, #8]
 8005bce:	1d3a      	adds	r2, r7, #4
 8005bd0:	f107 0108 	add.w	r1, r7, #8
 8005bd4:	f107 030c 	add.w	r3, r7, #12
 8005bd8:	4618      	mov	r0, r3
 8005bda:	f7fe fae7 	bl	80041ac <vApplicationGetTimerTaskMemory>
 8005bde:	6879      	ldr	r1, [r7, #4]
 8005be0:	68bb      	ldr	r3, [r7, #8]
 8005be2:	68fa      	ldr	r2, [r7, #12]
 8005be4:	9202      	str	r2, [sp, #8]
 8005be6:	9301      	str	r3, [sp, #4]
 8005be8:	2302      	movs	r3, #2
 8005bea:	9300      	str	r3, [sp, #0]
 8005bec:	2300      	movs	r3, #0
 8005bee:	460a      	mov	r2, r1
 8005bf0:	4911      	ldr	r1, [pc, #68]	@ (8005c38 <xTimerCreateTimerTask+0x88>)
 8005bf2:	4812      	ldr	r0, [pc, #72]	@ (8005c3c <xTimerCreateTimerTask+0x8c>)
 8005bf4:	f7ff f8a2 	bl	8004d3c <xTaskCreateStatic>
 8005bf8:	4603      	mov	r3, r0
 8005bfa:	4a11      	ldr	r2, [pc, #68]	@ (8005c40 <xTimerCreateTimerTask+0x90>)
 8005bfc:	6013      	str	r3, [r2, #0]
 8005bfe:	4b10      	ldr	r3, [pc, #64]	@ (8005c40 <xTimerCreateTimerTask+0x90>)
 8005c00:	681b      	ldr	r3, [r3, #0]
 8005c02:	2b00      	cmp	r3, #0
 8005c04:	d001      	beq.n	8005c0a <xTimerCreateTimerTask+0x5a>
 8005c06:	2301      	movs	r3, #1
 8005c08:	617b      	str	r3, [r7, #20]
 8005c0a:	697b      	ldr	r3, [r7, #20]
 8005c0c:	2b00      	cmp	r3, #0
 8005c0e:	d10b      	bne.n	8005c28 <xTimerCreateTimerTask+0x78>
 8005c10:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005c14:	f383 8811 	msr	BASEPRI, r3
 8005c18:	f3bf 8f6f 	isb	sy
 8005c1c:	f3bf 8f4f 	dsb	sy
 8005c20:	613b      	str	r3, [r7, #16]
 8005c22:	bf00      	nop
 8005c24:	bf00      	nop
 8005c26:	e7fd      	b.n	8005c24 <xTimerCreateTimerTask+0x74>
 8005c28:	697b      	ldr	r3, [r7, #20]
 8005c2a:	4618      	mov	r0, r3
 8005c2c:	3718      	adds	r7, #24
 8005c2e:	46bd      	mov	sp, r7
 8005c30:	bd80      	pop	{r7, pc}
 8005c32:	bf00      	nop
 8005c34:	20000ec8 	.word	0x20000ec8
 8005c38:	08007550 	.word	0x08007550
 8005c3c:	08005d7d 	.word	0x08005d7d
 8005c40:	20000ecc 	.word	0x20000ecc

08005c44 <xTimerGenericCommand>:
 8005c44:	b580      	push	{r7, lr}
 8005c46:	b08a      	sub	sp, #40	@ 0x28
 8005c48:	af00      	add	r7, sp, #0
 8005c4a:	60f8      	str	r0, [r7, #12]
 8005c4c:	60b9      	str	r1, [r7, #8]
 8005c4e:	607a      	str	r2, [r7, #4]
 8005c50:	603b      	str	r3, [r7, #0]
 8005c52:	2300      	movs	r3, #0
 8005c54:	627b      	str	r3, [r7, #36]	@ 0x24
 8005c56:	68fb      	ldr	r3, [r7, #12]
 8005c58:	2b00      	cmp	r3, #0
 8005c5a:	d10b      	bne.n	8005c74 <xTimerGenericCommand+0x30>
 8005c5c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005c60:	f383 8811 	msr	BASEPRI, r3
 8005c64:	f3bf 8f6f 	isb	sy
 8005c68:	f3bf 8f4f 	dsb	sy
 8005c6c:	623b      	str	r3, [r7, #32]
 8005c6e:	bf00      	nop
 8005c70:	bf00      	nop
 8005c72:	e7fd      	b.n	8005c70 <xTimerGenericCommand+0x2c>
 8005c74:	4b19      	ldr	r3, [pc, #100]	@ (8005cdc <xTimerGenericCommand+0x98>)
 8005c76:	681b      	ldr	r3, [r3, #0]
 8005c78:	2b00      	cmp	r3, #0
 8005c7a:	d02a      	beq.n	8005cd2 <xTimerGenericCommand+0x8e>
 8005c7c:	68bb      	ldr	r3, [r7, #8]
 8005c7e:	613b      	str	r3, [r7, #16]
 8005c80:	687b      	ldr	r3, [r7, #4]
 8005c82:	617b      	str	r3, [r7, #20]
 8005c84:	68fb      	ldr	r3, [r7, #12]
 8005c86:	61bb      	str	r3, [r7, #24]
 8005c88:	68bb      	ldr	r3, [r7, #8]
 8005c8a:	2b05      	cmp	r3, #5
 8005c8c:	dc18      	bgt.n	8005cc0 <xTimerGenericCommand+0x7c>
 8005c8e:	f7ff fead 	bl	80059ec <xTaskGetSchedulerState>
 8005c92:	4603      	mov	r3, r0
 8005c94:	2b02      	cmp	r3, #2
 8005c96:	d109      	bne.n	8005cac <xTimerGenericCommand+0x68>
 8005c98:	4b10      	ldr	r3, [pc, #64]	@ (8005cdc <xTimerGenericCommand+0x98>)
 8005c9a:	6818      	ldr	r0, [r3, #0]
 8005c9c:	f107 0110 	add.w	r1, r7, #16
 8005ca0:	2300      	movs	r3, #0
 8005ca2:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8005ca4:	f7fe fc5a 	bl	800455c <xQueueGenericSend>
 8005ca8:	6278      	str	r0, [r7, #36]	@ 0x24
 8005caa:	e012      	b.n	8005cd2 <xTimerGenericCommand+0x8e>
 8005cac:	4b0b      	ldr	r3, [pc, #44]	@ (8005cdc <xTimerGenericCommand+0x98>)
 8005cae:	6818      	ldr	r0, [r3, #0]
 8005cb0:	f107 0110 	add.w	r1, r7, #16
 8005cb4:	2300      	movs	r3, #0
 8005cb6:	2200      	movs	r2, #0
 8005cb8:	f7fe fc50 	bl	800455c <xQueueGenericSend>
 8005cbc:	6278      	str	r0, [r7, #36]	@ 0x24
 8005cbe:	e008      	b.n	8005cd2 <xTimerGenericCommand+0x8e>
 8005cc0:	4b06      	ldr	r3, [pc, #24]	@ (8005cdc <xTimerGenericCommand+0x98>)
 8005cc2:	6818      	ldr	r0, [r3, #0]
 8005cc4:	f107 0110 	add.w	r1, r7, #16
 8005cc8:	2300      	movs	r3, #0
 8005cca:	683a      	ldr	r2, [r7, #0]
 8005ccc:	f7fe fd48 	bl	8004760 <xQueueGenericSendFromISR>
 8005cd0:	6278      	str	r0, [r7, #36]	@ 0x24
 8005cd2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005cd4:	4618      	mov	r0, r3
 8005cd6:	3728      	adds	r7, #40	@ 0x28
 8005cd8:	46bd      	mov	sp, r7
 8005cda:	bd80      	pop	{r7, pc}
 8005cdc:	20000ec8 	.word	0x20000ec8

08005ce0 <prvProcessExpiredTimer>:
 8005ce0:	b580      	push	{r7, lr}
 8005ce2:	b088      	sub	sp, #32
 8005ce4:	af02      	add	r7, sp, #8
 8005ce6:	6078      	str	r0, [r7, #4]
 8005ce8:	6039      	str	r1, [r7, #0]
 8005cea:	4b23      	ldr	r3, [pc, #140]	@ (8005d78 <prvProcessExpiredTimer+0x98>)
 8005cec:	681b      	ldr	r3, [r3, #0]
 8005cee:	68db      	ldr	r3, [r3, #12]
 8005cf0:	68db      	ldr	r3, [r3, #12]
 8005cf2:	617b      	str	r3, [r7, #20]
 8005cf4:	697b      	ldr	r3, [r7, #20]
 8005cf6:	3304      	adds	r3, #4
 8005cf8:	4618      	mov	r0, r3
 8005cfa:	f7fe fafb 	bl	80042f4 <uxListRemove>
 8005cfe:	697b      	ldr	r3, [r7, #20]
 8005d00:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8005d04:	f003 0304 	and.w	r3, r3, #4
 8005d08:	2b00      	cmp	r3, #0
 8005d0a:	d023      	beq.n	8005d54 <prvProcessExpiredTimer+0x74>
 8005d0c:	697b      	ldr	r3, [r7, #20]
 8005d0e:	699a      	ldr	r2, [r3, #24]
 8005d10:	687b      	ldr	r3, [r7, #4]
 8005d12:	18d1      	adds	r1, r2, r3
 8005d14:	687b      	ldr	r3, [r7, #4]
 8005d16:	683a      	ldr	r2, [r7, #0]
 8005d18:	6978      	ldr	r0, [r7, #20]
 8005d1a:	f000 f8d5 	bl	8005ec8 <prvInsertTimerInActiveList>
 8005d1e:	4603      	mov	r3, r0
 8005d20:	2b00      	cmp	r3, #0
 8005d22:	d020      	beq.n	8005d66 <prvProcessExpiredTimer+0x86>
 8005d24:	2300      	movs	r3, #0
 8005d26:	9300      	str	r3, [sp, #0]
 8005d28:	2300      	movs	r3, #0
 8005d2a:	687a      	ldr	r2, [r7, #4]
 8005d2c:	2100      	movs	r1, #0
 8005d2e:	6978      	ldr	r0, [r7, #20]
 8005d30:	f7ff ff88 	bl	8005c44 <xTimerGenericCommand>
 8005d34:	6138      	str	r0, [r7, #16]
 8005d36:	693b      	ldr	r3, [r7, #16]
 8005d38:	2b00      	cmp	r3, #0
 8005d3a:	d114      	bne.n	8005d66 <prvProcessExpiredTimer+0x86>
 8005d3c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005d40:	f383 8811 	msr	BASEPRI, r3
 8005d44:	f3bf 8f6f 	isb	sy
 8005d48:	f3bf 8f4f 	dsb	sy
 8005d4c:	60fb      	str	r3, [r7, #12]
 8005d4e:	bf00      	nop
 8005d50:	bf00      	nop
 8005d52:	e7fd      	b.n	8005d50 <prvProcessExpiredTimer+0x70>
 8005d54:	697b      	ldr	r3, [r7, #20]
 8005d56:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8005d5a:	f023 0301 	bic.w	r3, r3, #1
 8005d5e:	b2da      	uxtb	r2, r3
 8005d60:	697b      	ldr	r3, [r7, #20]
 8005d62:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 8005d66:	697b      	ldr	r3, [r7, #20]
 8005d68:	6a1b      	ldr	r3, [r3, #32]
 8005d6a:	6978      	ldr	r0, [r7, #20]
 8005d6c:	4798      	blx	r3
 8005d6e:	bf00      	nop
 8005d70:	3718      	adds	r7, #24
 8005d72:	46bd      	mov	sp, r7
 8005d74:	bd80      	pop	{r7, pc}
 8005d76:	bf00      	nop
 8005d78:	20000ec0 	.word	0x20000ec0

08005d7c <prvTimerTask>:
 8005d7c:	b580      	push	{r7, lr}
 8005d7e:	b084      	sub	sp, #16
 8005d80:	af00      	add	r7, sp, #0
 8005d82:	6078      	str	r0, [r7, #4]
 8005d84:	f107 0308 	add.w	r3, r7, #8
 8005d88:	4618      	mov	r0, r3
 8005d8a:	f000 f859 	bl	8005e40 <prvGetNextExpireTime>
 8005d8e:	60f8      	str	r0, [r7, #12]
 8005d90:	68bb      	ldr	r3, [r7, #8]
 8005d92:	4619      	mov	r1, r3
 8005d94:	68f8      	ldr	r0, [r7, #12]
 8005d96:	f000 f805 	bl	8005da4 <prvProcessTimerOrBlockTask>
 8005d9a:	f000 f8d7 	bl	8005f4c <prvProcessReceivedCommands>
 8005d9e:	bf00      	nop
 8005da0:	e7f0      	b.n	8005d84 <prvTimerTask+0x8>
	...

08005da4 <prvProcessTimerOrBlockTask>:
 8005da4:	b580      	push	{r7, lr}
 8005da6:	b084      	sub	sp, #16
 8005da8:	af00      	add	r7, sp, #0
 8005daa:	6078      	str	r0, [r7, #4]
 8005dac:	6039      	str	r1, [r7, #0]
 8005dae:	f7ff fa29 	bl	8005204 <vTaskSuspendAll>
 8005db2:	f107 0308 	add.w	r3, r7, #8
 8005db6:	4618      	mov	r0, r3
 8005db8:	f000 f866 	bl	8005e88 <prvSampleTimeNow>
 8005dbc:	60f8      	str	r0, [r7, #12]
 8005dbe:	68bb      	ldr	r3, [r7, #8]
 8005dc0:	2b00      	cmp	r3, #0
 8005dc2:	d130      	bne.n	8005e26 <prvProcessTimerOrBlockTask+0x82>
 8005dc4:	683b      	ldr	r3, [r7, #0]
 8005dc6:	2b00      	cmp	r3, #0
 8005dc8:	d10a      	bne.n	8005de0 <prvProcessTimerOrBlockTask+0x3c>
 8005dca:	687a      	ldr	r2, [r7, #4]
 8005dcc:	68fb      	ldr	r3, [r7, #12]
 8005dce:	429a      	cmp	r2, r3
 8005dd0:	d806      	bhi.n	8005de0 <prvProcessTimerOrBlockTask+0x3c>
 8005dd2:	f7ff fa25 	bl	8005220 <xTaskResumeAll>
 8005dd6:	68f9      	ldr	r1, [r7, #12]
 8005dd8:	6878      	ldr	r0, [r7, #4]
 8005dda:	f7ff ff81 	bl	8005ce0 <prvProcessExpiredTimer>
 8005dde:	e024      	b.n	8005e2a <prvProcessTimerOrBlockTask+0x86>
 8005de0:	683b      	ldr	r3, [r7, #0]
 8005de2:	2b00      	cmp	r3, #0
 8005de4:	d008      	beq.n	8005df8 <prvProcessTimerOrBlockTask+0x54>
 8005de6:	4b13      	ldr	r3, [pc, #76]	@ (8005e34 <prvProcessTimerOrBlockTask+0x90>)
 8005de8:	681b      	ldr	r3, [r3, #0]
 8005dea:	681b      	ldr	r3, [r3, #0]
 8005dec:	2b00      	cmp	r3, #0
 8005dee:	d101      	bne.n	8005df4 <prvProcessTimerOrBlockTask+0x50>
 8005df0:	2301      	movs	r3, #1
 8005df2:	e000      	b.n	8005df6 <prvProcessTimerOrBlockTask+0x52>
 8005df4:	2300      	movs	r3, #0
 8005df6:	603b      	str	r3, [r7, #0]
 8005df8:	4b0f      	ldr	r3, [pc, #60]	@ (8005e38 <prvProcessTimerOrBlockTask+0x94>)
 8005dfa:	6818      	ldr	r0, [r3, #0]
 8005dfc:	687a      	ldr	r2, [r7, #4]
 8005dfe:	68fb      	ldr	r3, [r7, #12]
 8005e00:	1ad3      	subs	r3, r2, r3
 8005e02:	683a      	ldr	r2, [r7, #0]
 8005e04:	4619      	mov	r1, r3
 8005e06:	f7fe ff65 	bl	8004cd4 <vQueueWaitForMessageRestricted>
 8005e0a:	f7ff fa09 	bl	8005220 <xTaskResumeAll>
 8005e0e:	4603      	mov	r3, r0
 8005e10:	2b00      	cmp	r3, #0
 8005e12:	d10a      	bne.n	8005e2a <prvProcessTimerOrBlockTask+0x86>
 8005e14:	4b09      	ldr	r3, [pc, #36]	@ (8005e3c <prvProcessTimerOrBlockTask+0x98>)
 8005e16:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8005e1a:	601a      	str	r2, [r3, #0]
 8005e1c:	f3bf 8f4f 	dsb	sy
 8005e20:	f3bf 8f6f 	isb	sy
 8005e24:	e001      	b.n	8005e2a <prvProcessTimerOrBlockTask+0x86>
 8005e26:	f7ff f9fb 	bl	8005220 <xTaskResumeAll>
 8005e2a:	bf00      	nop
 8005e2c:	3710      	adds	r7, #16
 8005e2e:	46bd      	mov	sp, r7
 8005e30:	bd80      	pop	{r7, pc}
 8005e32:	bf00      	nop
 8005e34:	20000ec4 	.word	0x20000ec4
 8005e38:	20000ec8 	.word	0x20000ec8
 8005e3c:	e000ed04 	.word	0xe000ed04

08005e40 <prvGetNextExpireTime>:
 8005e40:	b480      	push	{r7}
 8005e42:	b085      	sub	sp, #20
 8005e44:	af00      	add	r7, sp, #0
 8005e46:	6078      	str	r0, [r7, #4]
 8005e48:	4b0e      	ldr	r3, [pc, #56]	@ (8005e84 <prvGetNextExpireTime+0x44>)
 8005e4a:	681b      	ldr	r3, [r3, #0]
 8005e4c:	681b      	ldr	r3, [r3, #0]
 8005e4e:	2b00      	cmp	r3, #0
 8005e50:	d101      	bne.n	8005e56 <prvGetNextExpireTime+0x16>
 8005e52:	2201      	movs	r2, #1
 8005e54:	e000      	b.n	8005e58 <prvGetNextExpireTime+0x18>
 8005e56:	2200      	movs	r2, #0
 8005e58:	687b      	ldr	r3, [r7, #4]
 8005e5a:	601a      	str	r2, [r3, #0]
 8005e5c:	687b      	ldr	r3, [r7, #4]
 8005e5e:	681b      	ldr	r3, [r3, #0]
 8005e60:	2b00      	cmp	r3, #0
 8005e62:	d105      	bne.n	8005e70 <prvGetNextExpireTime+0x30>
 8005e64:	4b07      	ldr	r3, [pc, #28]	@ (8005e84 <prvGetNextExpireTime+0x44>)
 8005e66:	681b      	ldr	r3, [r3, #0]
 8005e68:	68db      	ldr	r3, [r3, #12]
 8005e6a:	681b      	ldr	r3, [r3, #0]
 8005e6c:	60fb      	str	r3, [r7, #12]
 8005e6e:	e001      	b.n	8005e74 <prvGetNextExpireTime+0x34>
 8005e70:	2300      	movs	r3, #0
 8005e72:	60fb      	str	r3, [r7, #12]
 8005e74:	68fb      	ldr	r3, [r7, #12]
 8005e76:	4618      	mov	r0, r3
 8005e78:	3714      	adds	r7, #20
 8005e7a:	46bd      	mov	sp, r7
 8005e7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e80:	4770      	bx	lr
 8005e82:	bf00      	nop
 8005e84:	20000ec0 	.word	0x20000ec0

08005e88 <prvSampleTimeNow>:
 8005e88:	b580      	push	{r7, lr}
 8005e8a:	b084      	sub	sp, #16
 8005e8c:	af00      	add	r7, sp, #0
 8005e8e:	6078      	str	r0, [r7, #4]
 8005e90:	f7ff fa64 	bl	800535c <xTaskGetTickCount>
 8005e94:	60f8      	str	r0, [r7, #12]
 8005e96:	4b0b      	ldr	r3, [pc, #44]	@ (8005ec4 <prvSampleTimeNow+0x3c>)
 8005e98:	681b      	ldr	r3, [r3, #0]
 8005e9a:	68fa      	ldr	r2, [r7, #12]
 8005e9c:	429a      	cmp	r2, r3
 8005e9e:	d205      	bcs.n	8005eac <prvSampleTimeNow+0x24>
 8005ea0:	f000 f93a 	bl	8006118 <prvSwitchTimerLists>
 8005ea4:	687b      	ldr	r3, [r7, #4]
 8005ea6:	2201      	movs	r2, #1
 8005ea8:	601a      	str	r2, [r3, #0]
 8005eaa:	e002      	b.n	8005eb2 <prvSampleTimeNow+0x2a>
 8005eac:	687b      	ldr	r3, [r7, #4]
 8005eae:	2200      	movs	r2, #0
 8005eb0:	601a      	str	r2, [r3, #0]
 8005eb2:	4a04      	ldr	r2, [pc, #16]	@ (8005ec4 <prvSampleTimeNow+0x3c>)
 8005eb4:	68fb      	ldr	r3, [r7, #12]
 8005eb6:	6013      	str	r3, [r2, #0]
 8005eb8:	68fb      	ldr	r3, [r7, #12]
 8005eba:	4618      	mov	r0, r3
 8005ebc:	3710      	adds	r7, #16
 8005ebe:	46bd      	mov	sp, r7
 8005ec0:	bd80      	pop	{r7, pc}
 8005ec2:	bf00      	nop
 8005ec4:	20000ed0 	.word	0x20000ed0

08005ec8 <prvInsertTimerInActiveList>:
 8005ec8:	b580      	push	{r7, lr}
 8005eca:	b086      	sub	sp, #24
 8005ecc:	af00      	add	r7, sp, #0
 8005ece:	60f8      	str	r0, [r7, #12]
 8005ed0:	60b9      	str	r1, [r7, #8]
 8005ed2:	607a      	str	r2, [r7, #4]
 8005ed4:	603b      	str	r3, [r7, #0]
 8005ed6:	2300      	movs	r3, #0
 8005ed8:	617b      	str	r3, [r7, #20]
 8005eda:	68fb      	ldr	r3, [r7, #12]
 8005edc:	68ba      	ldr	r2, [r7, #8]
 8005ede:	605a      	str	r2, [r3, #4]
 8005ee0:	68fb      	ldr	r3, [r7, #12]
 8005ee2:	68fa      	ldr	r2, [r7, #12]
 8005ee4:	611a      	str	r2, [r3, #16]
 8005ee6:	68ba      	ldr	r2, [r7, #8]
 8005ee8:	687b      	ldr	r3, [r7, #4]
 8005eea:	429a      	cmp	r2, r3
 8005eec:	d812      	bhi.n	8005f14 <prvInsertTimerInActiveList+0x4c>
 8005eee:	687a      	ldr	r2, [r7, #4]
 8005ef0:	683b      	ldr	r3, [r7, #0]
 8005ef2:	1ad2      	subs	r2, r2, r3
 8005ef4:	68fb      	ldr	r3, [r7, #12]
 8005ef6:	699b      	ldr	r3, [r3, #24]
 8005ef8:	429a      	cmp	r2, r3
 8005efa:	d302      	bcc.n	8005f02 <prvInsertTimerInActiveList+0x3a>
 8005efc:	2301      	movs	r3, #1
 8005efe:	617b      	str	r3, [r7, #20]
 8005f00:	e01b      	b.n	8005f3a <prvInsertTimerInActiveList+0x72>
 8005f02:	4b10      	ldr	r3, [pc, #64]	@ (8005f44 <prvInsertTimerInActiveList+0x7c>)
 8005f04:	681a      	ldr	r2, [r3, #0]
 8005f06:	68fb      	ldr	r3, [r7, #12]
 8005f08:	3304      	adds	r3, #4
 8005f0a:	4619      	mov	r1, r3
 8005f0c:	4610      	mov	r0, r2
 8005f0e:	f7fe f9b8 	bl	8004282 <vListInsert>
 8005f12:	e012      	b.n	8005f3a <prvInsertTimerInActiveList+0x72>
 8005f14:	687a      	ldr	r2, [r7, #4]
 8005f16:	683b      	ldr	r3, [r7, #0]
 8005f18:	429a      	cmp	r2, r3
 8005f1a:	d206      	bcs.n	8005f2a <prvInsertTimerInActiveList+0x62>
 8005f1c:	68ba      	ldr	r2, [r7, #8]
 8005f1e:	683b      	ldr	r3, [r7, #0]
 8005f20:	429a      	cmp	r2, r3
 8005f22:	d302      	bcc.n	8005f2a <prvInsertTimerInActiveList+0x62>
 8005f24:	2301      	movs	r3, #1
 8005f26:	617b      	str	r3, [r7, #20]
 8005f28:	e007      	b.n	8005f3a <prvInsertTimerInActiveList+0x72>
 8005f2a:	4b07      	ldr	r3, [pc, #28]	@ (8005f48 <prvInsertTimerInActiveList+0x80>)
 8005f2c:	681a      	ldr	r2, [r3, #0]
 8005f2e:	68fb      	ldr	r3, [r7, #12]
 8005f30:	3304      	adds	r3, #4
 8005f32:	4619      	mov	r1, r3
 8005f34:	4610      	mov	r0, r2
 8005f36:	f7fe f9a4 	bl	8004282 <vListInsert>
 8005f3a:	697b      	ldr	r3, [r7, #20]
 8005f3c:	4618      	mov	r0, r3
 8005f3e:	3718      	adds	r7, #24
 8005f40:	46bd      	mov	sp, r7
 8005f42:	bd80      	pop	{r7, pc}
 8005f44:	20000ec4 	.word	0x20000ec4
 8005f48:	20000ec0 	.word	0x20000ec0

08005f4c <prvProcessReceivedCommands>:
 8005f4c:	b580      	push	{r7, lr}
 8005f4e:	b08e      	sub	sp, #56	@ 0x38
 8005f50:	af02      	add	r7, sp, #8
 8005f52:	e0ce      	b.n	80060f2 <prvProcessReceivedCommands+0x1a6>
 8005f54:	687b      	ldr	r3, [r7, #4]
 8005f56:	2b00      	cmp	r3, #0
 8005f58:	da19      	bge.n	8005f8e <prvProcessReceivedCommands+0x42>
 8005f5a:	1d3b      	adds	r3, r7, #4
 8005f5c:	3304      	adds	r3, #4
 8005f5e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005f60:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005f62:	2b00      	cmp	r3, #0
 8005f64:	d10b      	bne.n	8005f7e <prvProcessReceivedCommands+0x32>
 8005f66:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005f6a:	f383 8811 	msr	BASEPRI, r3
 8005f6e:	f3bf 8f6f 	isb	sy
 8005f72:	f3bf 8f4f 	dsb	sy
 8005f76:	61fb      	str	r3, [r7, #28]
 8005f78:	bf00      	nop
 8005f7a:	bf00      	nop
 8005f7c:	e7fd      	b.n	8005f7a <prvProcessReceivedCommands+0x2e>
 8005f7e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005f80:	681b      	ldr	r3, [r3, #0]
 8005f82:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8005f84:	6850      	ldr	r0, [r2, #4]
 8005f86:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8005f88:	6892      	ldr	r2, [r2, #8]
 8005f8a:	4611      	mov	r1, r2
 8005f8c:	4798      	blx	r3
 8005f8e:	687b      	ldr	r3, [r7, #4]
 8005f90:	2b00      	cmp	r3, #0
 8005f92:	f2c0 80ae 	blt.w	80060f2 <prvProcessReceivedCommands+0x1a6>
 8005f96:	68fb      	ldr	r3, [r7, #12]
 8005f98:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005f9a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005f9c:	695b      	ldr	r3, [r3, #20]
 8005f9e:	2b00      	cmp	r3, #0
 8005fa0:	d004      	beq.n	8005fac <prvProcessReceivedCommands+0x60>
 8005fa2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005fa4:	3304      	adds	r3, #4
 8005fa6:	4618      	mov	r0, r3
 8005fa8:	f7fe f9a4 	bl	80042f4 <uxListRemove>
 8005fac:	463b      	mov	r3, r7
 8005fae:	4618      	mov	r0, r3
 8005fb0:	f7ff ff6a 	bl	8005e88 <prvSampleTimeNow>
 8005fb4:	6278      	str	r0, [r7, #36]	@ 0x24
 8005fb6:	687b      	ldr	r3, [r7, #4]
 8005fb8:	2b09      	cmp	r3, #9
 8005fba:	f200 8097 	bhi.w	80060ec <prvProcessReceivedCommands+0x1a0>
 8005fbe:	a201      	add	r2, pc, #4	@ (adr r2, 8005fc4 <prvProcessReceivedCommands+0x78>)
 8005fc0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005fc4:	08005fed 	.word	0x08005fed
 8005fc8:	08005fed 	.word	0x08005fed
 8005fcc:	08005fed 	.word	0x08005fed
 8005fd0:	08006063 	.word	0x08006063
 8005fd4:	08006077 	.word	0x08006077
 8005fd8:	080060c3 	.word	0x080060c3
 8005fdc:	08005fed 	.word	0x08005fed
 8005fe0:	08005fed 	.word	0x08005fed
 8005fe4:	08006063 	.word	0x08006063
 8005fe8:	08006077 	.word	0x08006077
 8005fec:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005fee:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8005ff2:	f043 0301 	orr.w	r3, r3, #1
 8005ff6:	b2da      	uxtb	r2, r3
 8005ff8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005ffa:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 8005ffe:	68ba      	ldr	r2, [r7, #8]
 8006000:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006002:	699b      	ldr	r3, [r3, #24]
 8006004:	18d1      	adds	r1, r2, r3
 8006006:	68bb      	ldr	r3, [r7, #8]
 8006008:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800600a:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800600c:	f7ff ff5c 	bl	8005ec8 <prvInsertTimerInActiveList>
 8006010:	4603      	mov	r3, r0
 8006012:	2b00      	cmp	r3, #0
 8006014:	d06c      	beq.n	80060f0 <prvProcessReceivedCommands+0x1a4>
 8006016:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006018:	6a1b      	ldr	r3, [r3, #32]
 800601a:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800601c:	4798      	blx	r3
 800601e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006020:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8006024:	f003 0304 	and.w	r3, r3, #4
 8006028:	2b00      	cmp	r3, #0
 800602a:	d061      	beq.n	80060f0 <prvProcessReceivedCommands+0x1a4>
 800602c:	68ba      	ldr	r2, [r7, #8]
 800602e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006030:	699b      	ldr	r3, [r3, #24]
 8006032:	441a      	add	r2, r3
 8006034:	2300      	movs	r3, #0
 8006036:	9300      	str	r3, [sp, #0]
 8006038:	2300      	movs	r3, #0
 800603a:	2100      	movs	r1, #0
 800603c:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800603e:	f7ff fe01 	bl	8005c44 <xTimerGenericCommand>
 8006042:	6238      	str	r0, [r7, #32]
 8006044:	6a3b      	ldr	r3, [r7, #32]
 8006046:	2b00      	cmp	r3, #0
 8006048:	d152      	bne.n	80060f0 <prvProcessReceivedCommands+0x1a4>
 800604a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800604e:	f383 8811 	msr	BASEPRI, r3
 8006052:	f3bf 8f6f 	isb	sy
 8006056:	f3bf 8f4f 	dsb	sy
 800605a:	61bb      	str	r3, [r7, #24]
 800605c:	bf00      	nop
 800605e:	bf00      	nop
 8006060:	e7fd      	b.n	800605e <prvProcessReceivedCommands+0x112>
 8006062:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006064:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8006068:	f023 0301 	bic.w	r3, r3, #1
 800606c:	b2da      	uxtb	r2, r3
 800606e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006070:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 8006074:	e03d      	b.n	80060f2 <prvProcessReceivedCommands+0x1a6>
 8006076:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006078:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800607c:	f043 0301 	orr.w	r3, r3, #1
 8006080:	b2da      	uxtb	r2, r3
 8006082:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006084:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 8006088:	68ba      	ldr	r2, [r7, #8]
 800608a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800608c:	619a      	str	r2, [r3, #24]
 800608e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006090:	699b      	ldr	r3, [r3, #24]
 8006092:	2b00      	cmp	r3, #0
 8006094:	d10b      	bne.n	80060ae <prvProcessReceivedCommands+0x162>
 8006096:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800609a:	f383 8811 	msr	BASEPRI, r3
 800609e:	f3bf 8f6f 	isb	sy
 80060a2:	f3bf 8f4f 	dsb	sy
 80060a6:	617b      	str	r3, [r7, #20]
 80060a8:	bf00      	nop
 80060aa:	bf00      	nop
 80060ac:	e7fd      	b.n	80060aa <prvProcessReceivedCommands+0x15e>
 80060ae:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80060b0:	699a      	ldr	r2, [r3, #24]
 80060b2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80060b4:	18d1      	adds	r1, r2, r3
 80060b6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80060b8:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80060ba:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 80060bc:	f7ff ff04 	bl	8005ec8 <prvInsertTimerInActiveList>
 80060c0:	e017      	b.n	80060f2 <prvProcessReceivedCommands+0x1a6>
 80060c2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80060c4:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 80060c8:	f003 0302 	and.w	r3, r3, #2
 80060cc:	2b00      	cmp	r3, #0
 80060ce:	d103      	bne.n	80060d8 <prvProcessReceivedCommands+0x18c>
 80060d0:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 80060d2:	f000 fbe9 	bl	80068a8 <vPortFree>
 80060d6:	e00c      	b.n	80060f2 <prvProcessReceivedCommands+0x1a6>
 80060d8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80060da:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 80060de:	f023 0301 	bic.w	r3, r3, #1
 80060e2:	b2da      	uxtb	r2, r3
 80060e4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80060e6:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 80060ea:	e002      	b.n	80060f2 <prvProcessReceivedCommands+0x1a6>
 80060ec:	bf00      	nop
 80060ee:	e000      	b.n	80060f2 <prvProcessReceivedCommands+0x1a6>
 80060f0:	bf00      	nop
 80060f2:	4b08      	ldr	r3, [pc, #32]	@ (8006114 <prvProcessReceivedCommands+0x1c8>)
 80060f4:	681b      	ldr	r3, [r3, #0]
 80060f6:	1d39      	adds	r1, r7, #4
 80060f8:	2200      	movs	r2, #0
 80060fa:	4618      	mov	r0, r3
 80060fc:	f7fe fbce 	bl	800489c <xQueueReceive>
 8006100:	4603      	mov	r3, r0
 8006102:	2b00      	cmp	r3, #0
 8006104:	f47f af26 	bne.w	8005f54 <prvProcessReceivedCommands+0x8>
 8006108:	bf00      	nop
 800610a:	bf00      	nop
 800610c:	3730      	adds	r7, #48	@ 0x30
 800610e:	46bd      	mov	sp, r7
 8006110:	bd80      	pop	{r7, pc}
 8006112:	bf00      	nop
 8006114:	20000ec8 	.word	0x20000ec8

08006118 <prvSwitchTimerLists>:
 8006118:	b580      	push	{r7, lr}
 800611a:	b088      	sub	sp, #32
 800611c:	af02      	add	r7, sp, #8
 800611e:	e049      	b.n	80061b4 <prvSwitchTimerLists+0x9c>
 8006120:	4b2e      	ldr	r3, [pc, #184]	@ (80061dc <prvSwitchTimerLists+0xc4>)
 8006122:	681b      	ldr	r3, [r3, #0]
 8006124:	68db      	ldr	r3, [r3, #12]
 8006126:	681b      	ldr	r3, [r3, #0]
 8006128:	613b      	str	r3, [r7, #16]
 800612a:	4b2c      	ldr	r3, [pc, #176]	@ (80061dc <prvSwitchTimerLists+0xc4>)
 800612c:	681b      	ldr	r3, [r3, #0]
 800612e:	68db      	ldr	r3, [r3, #12]
 8006130:	68db      	ldr	r3, [r3, #12]
 8006132:	60fb      	str	r3, [r7, #12]
 8006134:	68fb      	ldr	r3, [r7, #12]
 8006136:	3304      	adds	r3, #4
 8006138:	4618      	mov	r0, r3
 800613a:	f7fe f8db 	bl	80042f4 <uxListRemove>
 800613e:	68fb      	ldr	r3, [r7, #12]
 8006140:	6a1b      	ldr	r3, [r3, #32]
 8006142:	68f8      	ldr	r0, [r7, #12]
 8006144:	4798      	blx	r3
 8006146:	68fb      	ldr	r3, [r7, #12]
 8006148:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800614c:	f003 0304 	and.w	r3, r3, #4
 8006150:	2b00      	cmp	r3, #0
 8006152:	d02f      	beq.n	80061b4 <prvSwitchTimerLists+0x9c>
 8006154:	68fb      	ldr	r3, [r7, #12]
 8006156:	699b      	ldr	r3, [r3, #24]
 8006158:	693a      	ldr	r2, [r7, #16]
 800615a:	4413      	add	r3, r2
 800615c:	60bb      	str	r3, [r7, #8]
 800615e:	68ba      	ldr	r2, [r7, #8]
 8006160:	693b      	ldr	r3, [r7, #16]
 8006162:	429a      	cmp	r2, r3
 8006164:	d90e      	bls.n	8006184 <prvSwitchTimerLists+0x6c>
 8006166:	68fb      	ldr	r3, [r7, #12]
 8006168:	68ba      	ldr	r2, [r7, #8]
 800616a:	605a      	str	r2, [r3, #4]
 800616c:	68fb      	ldr	r3, [r7, #12]
 800616e:	68fa      	ldr	r2, [r7, #12]
 8006170:	611a      	str	r2, [r3, #16]
 8006172:	4b1a      	ldr	r3, [pc, #104]	@ (80061dc <prvSwitchTimerLists+0xc4>)
 8006174:	681a      	ldr	r2, [r3, #0]
 8006176:	68fb      	ldr	r3, [r7, #12]
 8006178:	3304      	adds	r3, #4
 800617a:	4619      	mov	r1, r3
 800617c:	4610      	mov	r0, r2
 800617e:	f7fe f880 	bl	8004282 <vListInsert>
 8006182:	e017      	b.n	80061b4 <prvSwitchTimerLists+0x9c>
 8006184:	2300      	movs	r3, #0
 8006186:	9300      	str	r3, [sp, #0]
 8006188:	2300      	movs	r3, #0
 800618a:	693a      	ldr	r2, [r7, #16]
 800618c:	2100      	movs	r1, #0
 800618e:	68f8      	ldr	r0, [r7, #12]
 8006190:	f7ff fd58 	bl	8005c44 <xTimerGenericCommand>
 8006194:	6078      	str	r0, [r7, #4]
 8006196:	687b      	ldr	r3, [r7, #4]
 8006198:	2b00      	cmp	r3, #0
 800619a:	d10b      	bne.n	80061b4 <prvSwitchTimerLists+0x9c>
 800619c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80061a0:	f383 8811 	msr	BASEPRI, r3
 80061a4:	f3bf 8f6f 	isb	sy
 80061a8:	f3bf 8f4f 	dsb	sy
 80061ac:	603b      	str	r3, [r7, #0]
 80061ae:	bf00      	nop
 80061b0:	bf00      	nop
 80061b2:	e7fd      	b.n	80061b0 <prvSwitchTimerLists+0x98>
 80061b4:	4b09      	ldr	r3, [pc, #36]	@ (80061dc <prvSwitchTimerLists+0xc4>)
 80061b6:	681b      	ldr	r3, [r3, #0]
 80061b8:	681b      	ldr	r3, [r3, #0]
 80061ba:	2b00      	cmp	r3, #0
 80061bc:	d1b0      	bne.n	8006120 <prvSwitchTimerLists+0x8>
 80061be:	4b07      	ldr	r3, [pc, #28]	@ (80061dc <prvSwitchTimerLists+0xc4>)
 80061c0:	681b      	ldr	r3, [r3, #0]
 80061c2:	617b      	str	r3, [r7, #20]
 80061c4:	4b06      	ldr	r3, [pc, #24]	@ (80061e0 <prvSwitchTimerLists+0xc8>)
 80061c6:	681b      	ldr	r3, [r3, #0]
 80061c8:	4a04      	ldr	r2, [pc, #16]	@ (80061dc <prvSwitchTimerLists+0xc4>)
 80061ca:	6013      	str	r3, [r2, #0]
 80061cc:	4a04      	ldr	r2, [pc, #16]	@ (80061e0 <prvSwitchTimerLists+0xc8>)
 80061ce:	697b      	ldr	r3, [r7, #20]
 80061d0:	6013      	str	r3, [r2, #0]
 80061d2:	bf00      	nop
 80061d4:	3718      	adds	r7, #24
 80061d6:	46bd      	mov	sp, r7
 80061d8:	bd80      	pop	{r7, pc}
 80061da:	bf00      	nop
 80061dc:	20000ec0 	.word	0x20000ec0
 80061e0:	20000ec4 	.word	0x20000ec4

080061e4 <prvCheckForValidListAndQueue>:
 80061e4:	b580      	push	{r7, lr}
 80061e6:	b082      	sub	sp, #8
 80061e8:	af02      	add	r7, sp, #8
 80061ea:	f000 f96d 	bl	80064c8 <vPortEnterCritical>
 80061ee:	4b15      	ldr	r3, [pc, #84]	@ (8006244 <prvCheckForValidListAndQueue+0x60>)
 80061f0:	681b      	ldr	r3, [r3, #0]
 80061f2:	2b00      	cmp	r3, #0
 80061f4:	d120      	bne.n	8006238 <prvCheckForValidListAndQueue+0x54>
 80061f6:	4814      	ldr	r0, [pc, #80]	@ (8006248 <prvCheckForValidListAndQueue+0x64>)
 80061f8:	f7fd fff2 	bl	80041e0 <vListInitialise>
 80061fc:	4813      	ldr	r0, [pc, #76]	@ (800624c <prvCheckForValidListAndQueue+0x68>)
 80061fe:	f7fd ffef 	bl	80041e0 <vListInitialise>
 8006202:	4b13      	ldr	r3, [pc, #76]	@ (8006250 <prvCheckForValidListAndQueue+0x6c>)
 8006204:	4a10      	ldr	r2, [pc, #64]	@ (8006248 <prvCheckForValidListAndQueue+0x64>)
 8006206:	601a      	str	r2, [r3, #0]
 8006208:	4b12      	ldr	r3, [pc, #72]	@ (8006254 <prvCheckForValidListAndQueue+0x70>)
 800620a:	4a10      	ldr	r2, [pc, #64]	@ (800624c <prvCheckForValidListAndQueue+0x68>)
 800620c:	601a      	str	r2, [r3, #0]
 800620e:	2300      	movs	r3, #0
 8006210:	9300      	str	r3, [sp, #0]
 8006212:	4b11      	ldr	r3, [pc, #68]	@ (8006258 <prvCheckForValidListAndQueue+0x74>)
 8006214:	4a11      	ldr	r2, [pc, #68]	@ (800625c <prvCheckForValidListAndQueue+0x78>)
 8006216:	2110      	movs	r1, #16
 8006218:	200a      	movs	r0, #10
 800621a:	f7fe f8ff 	bl	800441c <xQueueGenericCreateStatic>
 800621e:	4603      	mov	r3, r0
 8006220:	4a08      	ldr	r2, [pc, #32]	@ (8006244 <prvCheckForValidListAndQueue+0x60>)
 8006222:	6013      	str	r3, [r2, #0]
 8006224:	4b07      	ldr	r3, [pc, #28]	@ (8006244 <prvCheckForValidListAndQueue+0x60>)
 8006226:	681b      	ldr	r3, [r3, #0]
 8006228:	2b00      	cmp	r3, #0
 800622a:	d005      	beq.n	8006238 <prvCheckForValidListAndQueue+0x54>
 800622c:	4b05      	ldr	r3, [pc, #20]	@ (8006244 <prvCheckForValidListAndQueue+0x60>)
 800622e:	681b      	ldr	r3, [r3, #0]
 8006230:	490b      	ldr	r1, [pc, #44]	@ (8006260 <prvCheckForValidListAndQueue+0x7c>)
 8006232:	4618      	mov	r0, r3
 8006234:	f7fe fd24 	bl	8004c80 <vQueueAddToRegistry>
 8006238:	f000 f978 	bl	800652c <vPortExitCritical>
 800623c:	bf00      	nop
 800623e:	46bd      	mov	sp, r7
 8006240:	bd80      	pop	{r7, pc}
 8006242:	bf00      	nop
 8006244:	20000ec8 	.word	0x20000ec8
 8006248:	20000e98 	.word	0x20000e98
 800624c:	20000eac 	.word	0x20000eac
 8006250:	20000ec0 	.word	0x20000ec0
 8006254:	20000ec4 	.word	0x20000ec4
 8006258:	20000f74 	.word	0x20000f74
 800625c:	20000ed4 	.word	0x20000ed4
 8006260:	08007558 	.word	0x08007558

08006264 <pxPortInitialiseStack>:
 8006264:	b480      	push	{r7}
 8006266:	b085      	sub	sp, #20
 8006268:	af00      	add	r7, sp, #0
 800626a:	60f8      	str	r0, [r7, #12]
 800626c:	60b9      	str	r1, [r7, #8]
 800626e:	607a      	str	r2, [r7, #4]
 8006270:	68fb      	ldr	r3, [r7, #12]
 8006272:	3b04      	subs	r3, #4
 8006274:	60fb      	str	r3, [r7, #12]
 8006276:	68fb      	ldr	r3, [r7, #12]
 8006278:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800627c:	601a      	str	r2, [r3, #0]
 800627e:	68fb      	ldr	r3, [r7, #12]
 8006280:	3b04      	subs	r3, #4
 8006282:	60fb      	str	r3, [r7, #12]
 8006284:	68bb      	ldr	r3, [r7, #8]
 8006286:	f023 0201 	bic.w	r2, r3, #1
 800628a:	68fb      	ldr	r3, [r7, #12]
 800628c:	601a      	str	r2, [r3, #0]
 800628e:	68fb      	ldr	r3, [r7, #12]
 8006290:	3b04      	subs	r3, #4
 8006292:	60fb      	str	r3, [r7, #12]
 8006294:	4a0c      	ldr	r2, [pc, #48]	@ (80062c8 <pxPortInitialiseStack+0x64>)
 8006296:	68fb      	ldr	r3, [r7, #12]
 8006298:	601a      	str	r2, [r3, #0]
 800629a:	68fb      	ldr	r3, [r7, #12]
 800629c:	3b14      	subs	r3, #20
 800629e:	60fb      	str	r3, [r7, #12]
 80062a0:	687a      	ldr	r2, [r7, #4]
 80062a2:	68fb      	ldr	r3, [r7, #12]
 80062a4:	601a      	str	r2, [r3, #0]
 80062a6:	68fb      	ldr	r3, [r7, #12]
 80062a8:	3b04      	subs	r3, #4
 80062aa:	60fb      	str	r3, [r7, #12]
 80062ac:	68fb      	ldr	r3, [r7, #12]
 80062ae:	f06f 0202 	mvn.w	r2, #2
 80062b2:	601a      	str	r2, [r3, #0]
 80062b4:	68fb      	ldr	r3, [r7, #12]
 80062b6:	3b20      	subs	r3, #32
 80062b8:	60fb      	str	r3, [r7, #12]
 80062ba:	68fb      	ldr	r3, [r7, #12]
 80062bc:	4618      	mov	r0, r3
 80062be:	3714      	adds	r7, #20
 80062c0:	46bd      	mov	sp, r7
 80062c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80062c6:	4770      	bx	lr
 80062c8:	080062cd 	.word	0x080062cd

080062cc <prvTaskExitError>:
 80062cc:	b480      	push	{r7}
 80062ce:	b085      	sub	sp, #20
 80062d0:	af00      	add	r7, sp, #0
 80062d2:	2300      	movs	r3, #0
 80062d4:	607b      	str	r3, [r7, #4]
 80062d6:	4b13      	ldr	r3, [pc, #76]	@ (8006324 <prvTaskExitError+0x58>)
 80062d8:	681b      	ldr	r3, [r3, #0]
 80062da:	f1b3 3fff 	cmp.w	r3, #4294967295
 80062de:	d00b      	beq.n	80062f8 <prvTaskExitError+0x2c>
 80062e0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80062e4:	f383 8811 	msr	BASEPRI, r3
 80062e8:	f3bf 8f6f 	isb	sy
 80062ec:	f3bf 8f4f 	dsb	sy
 80062f0:	60fb      	str	r3, [r7, #12]
 80062f2:	bf00      	nop
 80062f4:	bf00      	nop
 80062f6:	e7fd      	b.n	80062f4 <prvTaskExitError+0x28>
 80062f8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80062fc:	f383 8811 	msr	BASEPRI, r3
 8006300:	f3bf 8f6f 	isb	sy
 8006304:	f3bf 8f4f 	dsb	sy
 8006308:	60bb      	str	r3, [r7, #8]
 800630a:	bf00      	nop
 800630c:	bf00      	nop
 800630e:	687b      	ldr	r3, [r7, #4]
 8006310:	2b00      	cmp	r3, #0
 8006312:	d0fc      	beq.n	800630e <prvTaskExitError+0x42>
 8006314:	bf00      	nop
 8006316:	bf00      	nop
 8006318:	3714      	adds	r7, #20
 800631a:	46bd      	mov	sp, r7
 800631c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006320:	4770      	bx	lr
 8006322:	bf00      	nop
 8006324:	2000002c 	.word	0x2000002c
	...

08006330 <SVC_Handler>:
 8006330:	4b07      	ldr	r3, [pc, #28]	@ (8006350 <pxCurrentTCBConst2>)
 8006332:	6819      	ldr	r1, [r3, #0]
 8006334:	6808      	ldr	r0, [r1, #0]
 8006336:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800633a:	f380 8809 	msr	PSP, r0
 800633e:	f3bf 8f6f 	isb	sy
 8006342:	f04f 0000 	mov.w	r0, #0
 8006346:	f380 8811 	msr	BASEPRI, r0
 800634a:	4770      	bx	lr
 800634c:	f3af 8000 	nop.w

08006350 <pxCurrentTCBConst2>:
 8006350:	20000998 	.word	0x20000998
 8006354:	bf00      	nop
 8006356:	bf00      	nop

08006358 <prvPortStartFirstTask>:
 8006358:	4808      	ldr	r0, [pc, #32]	@ (800637c <prvPortStartFirstTask+0x24>)
 800635a:	6800      	ldr	r0, [r0, #0]
 800635c:	6800      	ldr	r0, [r0, #0]
 800635e:	f380 8808 	msr	MSP, r0
 8006362:	f04f 0000 	mov.w	r0, #0
 8006366:	f380 8814 	msr	CONTROL, r0
 800636a:	b662      	cpsie	i
 800636c:	b661      	cpsie	f
 800636e:	f3bf 8f4f 	dsb	sy
 8006372:	f3bf 8f6f 	isb	sy
 8006376:	df00      	svc	0
 8006378:	bf00      	nop
 800637a:	bf00      	nop
 800637c:	e000ed08 	.word	0xe000ed08

08006380 <xPortStartScheduler>:
 8006380:	b580      	push	{r7, lr}
 8006382:	b086      	sub	sp, #24
 8006384:	af00      	add	r7, sp, #0
 8006386:	4b47      	ldr	r3, [pc, #284]	@ (80064a4 <xPortStartScheduler+0x124>)
 8006388:	681b      	ldr	r3, [r3, #0]
 800638a:	4a47      	ldr	r2, [pc, #284]	@ (80064a8 <xPortStartScheduler+0x128>)
 800638c:	4293      	cmp	r3, r2
 800638e:	d10b      	bne.n	80063a8 <xPortStartScheduler+0x28>
 8006390:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006394:	f383 8811 	msr	BASEPRI, r3
 8006398:	f3bf 8f6f 	isb	sy
 800639c:	f3bf 8f4f 	dsb	sy
 80063a0:	60fb      	str	r3, [r7, #12]
 80063a2:	bf00      	nop
 80063a4:	bf00      	nop
 80063a6:	e7fd      	b.n	80063a4 <xPortStartScheduler+0x24>
 80063a8:	4b3e      	ldr	r3, [pc, #248]	@ (80064a4 <xPortStartScheduler+0x124>)
 80063aa:	681b      	ldr	r3, [r3, #0]
 80063ac:	4a3f      	ldr	r2, [pc, #252]	@ (80064ac <xPortStartScheduler+0x12c>)
 80063ae:	4293      	cmp	r3, r2
 80063b0:	d10b      	bne.n	80063ca <xPortStartScheduler+0x4a>
 80063b2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80063b6:	f383 8811 	msr	BASEPRI, r3
 80063ba:	f3bf 8f6f 	isb	sy
 80063be:	f3bf 8f4f 	dsb	sy
 80063c2:	613b      	str	r3, [r7, #16]
 80063c4:	bf00      	nop
 80063c6:	bf00      	nop
 80063c8:	e7fd      	b.n	80063c6 <xPortStartScheduler+0x46>
 80063ca:	4b39      	ldr	r3, [pc, #228]	@ (80064b0 <xPortStartScheduler+0x130>)
 80063cc:	617b      	str	r3, [r7, #20]
 80063ce:	697b      	ldr	r3, [r7, #20]
 80063d0:	781b      	ldrb	r3, [r3, #0]
 80063d2:	b2db      	uxtb	r3, r3
 80063d4:	607b      	str	r3, [r7, #4]
 80063d6:	697b      	ldr	r3, [r7, #20]
 80063d8:	22ff      	movs	r2, #255	@ 0xff
 80063da:	701a      	strb	r2, [r3, #0]
 80063dc:	697b      	ldr	r3, [r7, #20]
 80063de:	781b      	ldrb	r3, [r3, #0]
 80063e0:	b2db      	uxtb	r3, r3
 80063e2:	70fb      	strb	r3, [r7, #3]
 80063e4:	78fb      	ldrb	r3, [r7, #3]
 80063e6:	b2db      	uxtb	r3, r3
 80063e8:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 80063ec:	b2da      	uxtb	r2, r3
 80063ee:	4b31      	ldr	r3, [pc, #196]	@ (80064b4 <xPortStartScheduler+0x134>)
 80063f0:	701a      	strb	r2, [r3, #0]
 80063f2:	4b31      	ldr	r3, [pc, #196]	@ (80064b8 <xPortStartScheduler+0x138>)
 80063f4:	2207      	movs	r2, #7
 80063f6:	601a      	str	r2, [r3, #0]
 80063f8:	e009      	b.n	800640e <xPortStartScheduler+0x8e>
 80063fa:	4b2f      	ldr	r3, [pc, #188]	@ (80064b8 <xPortStartScheduler+0x138>)
 80063fc:	681b      	ldr	r3, [r3, #0]
 80063fe:	3b01      	subs	r3, #1
 8006400:	4a2d      	ldr	r2, [pc, #180]	@ (80064b8 <xPortStartScheduler+0x138>)
 8006402:	6013      	str	r3, [r2, #0]
 8006404:	78fb      	ldrb	r3, [r7, #3]
 8006406:	b2db      	uxtb	r3, r3
 8006408:	005b      	lsls	r3, r3, #1
 800640a:	b2db      	uxtb	r3, r3
 800640c:	70fb      	strb	r3, [r7, #3]
 800640e:	78fb      	ldrb	r3, [r7, #3]
 8006410:	b2db      	uxtb	r3, r3
 8006412:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006416:	2b80      	cmp	r3, #128	@ 0x80
 8006418:	d0ef      	beq.n	80063fa <xPortStartScheduler+0x7a>
 800641a:	4b27      	ldr	r3, [pc, #156]	@ (80064b8 <xPortStartScheduler+0x138>)
 800641c:	681b      	ldr	r3, [r3, #0]
 800641e:	f1c3 0307 	rsb	r3, r3, #7
 8006422:	2b04      	cmp	r3, #4
 8006424:	d00b      	beq.n	800643e <xPortStartScheduler+0xbe>
 8006426:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800642a:	f383 8811 	msr	BASEPRI, r3
 800642e:	f3bf 8f6f 	isb	sy
 8006432:	f3bf 8f4f 	dsb	sy
 8006436:	60bb      	str	r3, [r7, #8]
 8006438:	bf00      	nop
 800643a:	bf00      	nop
 800643c:	e7fd      	b.n	800643a <xPortStartScheduler+0xba>
 800643e:	4b1e      	ldr	r3, [pc, #120]	@ (80064b8 <xPortStartScheduler+0x138>)
 8006440:	681b      	ldr	r3, [r3, #0]
 8006442:	021b      	lsls	r3, r3, #8
 8006444:	4a1c      	ldr	r2, [pc, #112]	@ (80064b8 <xPortStartScheduler+0x138>)
 8006446:	6013      	str	r3, [r2, #0]
 8006448:	4b1b      	ldr	r3, [pc, #108]	@ (80064b8 <xPortStartScheduler+0x138>)
 800644a:	681b      	ldr	r3, [r3, #0]
 800644c:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8006450:	4a19      	ldr	r2, [pc, #100]	@ (80064b8 <xPortStartScheduler+0x138>)
 8006452:	6013      	str	r3, [r2, #0]
 8006454:	687b      	ldr	r3, [r7, #4]
 8006456:	b2da      	uxtb	r2, r3
 8006458:	697b      	ldr	r3, [r7, #20]
 800645a:	701a      	strb	r2, [r3, #0]
 800645c:	4b17      	ldr	r3, [pc, #92]	@ (80064bc <xPortStartScheduler+0x13c>)
 800645e:	681b      	ldr	r3, [r3, #0]
 8006460:	4a16      	ldr	r2, [pc, #88]	@ (80064bc <xPortStartScheduler+0x13c>)
 8006462:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8006466:	6013      	str	r3, [r2, #0]
 8006468:	4b14      	ldr	r3, [pc, #80]	@ (80064bc <xPortStartScheduler+0x13c>)
 800646a:	681b      	ldr	r3, [r3, #0]
 800646c:	4a13      	ldr	r2, [pc, #76]	@ (80064bc <xPortStartScheduler+0x13c>)
 800646e:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 8006472:	6013      	str	r3, [r2, #0]
 8006474:	f000 f8da 	bl	800662c <vPortSetupTimerInterrupt>
 8006478:	4b11      	ldr	r3, [pc, #68]	@ (80064c0 <xPortStartScheduler+0x140>)
 800647a:	2200      	movs	r2, #0
 800647c:	601a      	str	r2, [r3, #0]
 800647e:	f000 f8f9 	bl	8006674 <vPortEnableVFP>
 8006482:	4b10      	ldr	r3, [pc, #64]	@ (80064c4 <xPortStartScheduler+0x144>)
 8006484:	681b      	ldr	r3, [r3, #0]
 8006486:	4a0f      	ldr	r2, [pc, #60]	@ (80064c4 <xPortStartScheduler+0x144>)
 8006488:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 800648c:	6013      	str	r3, [r2, #0]
 800648e:	f7ff ff63 	bl	8006358 <prvPortStartFirstTask>
 8006492:	f7ff f82d 	bl	80054f0 <vTaskSwitchContext>
 8006496:	f7ff ff19 	bl	80062cc <prvTaskExitError>
 800649a:	2300      	movs	r3, #0
 800649c:	4618      	mov	r0, r3
 800649e:	3718      	adds	r7, #24
 80064a0:	46bd      	mov	sp, r7
 80064a2:	bd80      	pop	{r7, pc}
 80064a4:	e000ed00 	.word	0xe000ed00
 80064a8:	410fc271 	.word	0x410fc271
 80064ac:	410fc270 	.word	0x410fc270
 80064b0:	e000e400 	.word	0xe000e400
 80064b4:	20000fc4 	.word	0x20000fc4
 80064b8:	20000fc8 	.word	0x20000fc8
 80064bc:	e000ed20 	.word	0xe000ed20
 80064c0:	2000002c 	.word	0x2000002c
 80064c4:	e000ef34 	.word	0xe000ef34

080064c8 <vPortEnterCritical>:
 80064c8:	b480      	push	{r7}
 80064ca:	b083      	sub	sp, #12
 80064cc:	af00      	add	r7, sp, #0
 80064ce:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80064d2:	f383 8811 	msr	BASEPRI, r3
 80064d6:	f3bf 8f6f 	isb	sy
 80064da:	f3bf 8f4f 	dsb	sy
 80064de:	607b      	str	r3, [r7, #4]
 80064e0:	bf00      	nop
 80064e2:	4b10      	ldr	r3, [pc, #64]	@ (8006524 <vPortEnterCritical+0x5c>)
 80064e4:	681b      	ldr	r3, [r3, #0]
 80064e6:	3301      	adds	r3, #1
 80064e8:	4a0e      	ldr	r2, [pc, #56]	@ (8006524 <vPortEnterCritical+0x5c>)
 80064ea:	6013      	str	r3, [r2, #0]
 80064ec:	4b0d      	ldr	r3, [pc, #52]	@ (8006524 <vPortEnterCritical+0x5c>)
 80064ee:	681b      	ldr	r3, [r3, #0]
 80064f0:	2b01      	cmp	r3, #1
 80064f2:	d110      	bne.n	8006516 <vPortEnterCritical+0x4e>
 80064f4:	4b0c      	ldr	r3, [pc, #48]	@ (8006528 <vPortEnterCritical+0x60>)
 80064f6:	681b      	ldr	r3, [r3, #0]
 80064f8:	b2db      	uxtb	r3, r3
 80064fa:	2b00      	cmp	r3, #0
 80064fc:	d00b      	beq.n	8006516 <vPortEnterCritical+0x4e>
 80064fe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006502:	f383 8811 	msr	BASEPRI, r3
 8006506:	f3bf 8f6f 	isb	sy
 800650a:	f3bf 8f4f 	dsb	sy
 800650e:	603b      	str	r3, [r7, #0]
 8006510:	bf00      	nop
 8006512:	bf00      	nop
 8006514:	e7fd      	b.n	8006512 <vPortEnterCritical+0x4a>
 8006516:	bf00      	nop
 8006518:	370c      	adds	r7, #12
 800651a:	46bd      	mov	sp, r7
 800651c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006520:	4770      	bx	lr
 8006522:	bf00      	nop
 8006524:	2000002c 	.word	0x2000002c
 8006528:	e000ed04 	.word	0xe000ed04

0800652c <vPortExitCritical>:
 800652c:	b480      	push	{r7}
 800652e:	b083      	sub	sp, #12
 8006530:	af00      	add	r7, sp, #0
 8006532:	4b12      	ldr	r3, [pc, #72]	@ (800657c <vPortExitCritical+0x50>)
 8006534:	681b      	ldr	r3, [r3, #0]
 8006536:	2b00      	cmp	r3, #0
 8006538:	d10b      	bne.n	8006552 <vPortExitCritical+0x26>
 800653a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800653e:	f383 8811 	msr	BASEPRI, r3
 8006542:	f3bf 8f6f 	isb	sy
 8006546:	f3bf 8f4f 	dsb	sy
 800654a:	607b      	str	r3, [r7, #4]
 800654c:	bf00      	nop
 800654e:	bf00      	nop
 8006550:	e7fd      	b.n	800654e <vPortExitCritical+0x22>
 8006552:	4b0a      	ldr	r3, [pc, #40]	@ (800657c <vPortExitCritical+0x50>)
 8006554:	681b      	ldr	r3, [r3, #0]
 8006556:	3b01      	subs	r3, #1
 8006558:	4a08      	ldr	r2, [pc, #32]	@ (800657c <vPortExitCritical+0x50>)
 800655a:	6013      	str	r3, [r2, #0]
 800655c:	4b07      	ldr	r3, [pc, #28]	@ (800657c <vPortExitCritical+0x50>)
 800655e:	681b      	ldr	r3, [r3, #0]
 8006560:	2b00      	cmp	r3, #0
 8006562:	d105      	bne.n	8006570 <vPortExitCritical+0x44>
 8006564:	2300      	movs	r3, #0
 8006566:	603b      	str	r3, [r7, #0]
 8006568:	683b      	ldr	r3, [r7, #0]
 800656a:	f383 8811 	msr	BASEPRI, r3
 800656e:	bf00      	nop
 8006570:	bf00      	nop
 8006572:	370c      	adds	r7, #12
 8006574:	46bd      	mov	sp, r7
 8006576:	f85d 7b04 	ldr.w	r7, [sp], #4
 800657a:	4770      	bx	lr
 800657c:	2000002c 	.word	0x2000002c

08006580 <PendSV_Handler>:
 8006580:	f3ef 8009 	mrs	r0, PSP
 8006584:	f3bf 8f6f 	isb	sy
 8006588:	4b15      	ldr	r3, [pc, #84]	@ (80065e0 <pxCurrentTCBConst>)
 800658a:	681a      	ldr	r2, [r3, #0]
 800658c:	f01e 0f10 	tst.w	lr, #16
 8006590:	bf08      	it	eq
 8006592:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8006596:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800659a:	6010      	str	r0, [r2, #0]
 800659c:	e92d 0009 	stmdb	sp!, {r0, r3}
 80065a0:	f04f 0050 	mov.w	r0, #80	@ 0x50
 80065a4:	f380 8811 	msr	BASEPRI, r0
 80065a8:	f3bf 8f4f 	dsb	sy
 80065ac:	f3bf 8f6f 	isb	sy
 80065b0:	f7fe ff9e 	bl	80054f0 <vTaskSwitchContext>
 80065b4:	f04f 0000 	mov.w	r0, #0
 80065b8:	f380 8811 	msr	BASEPRI, r0
 80065bc:	bc09      	pop	{r0, r3}
 80065be:	6819      	ldr	r1, [r3, #0]
 80065c0:	6808      	ldr	r0, [r1, #0]
 80065c2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80065c6:	f01e 0f10 	tst.w	lr, #16
 80065ca:	bf08      	it	eq
 80065cc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80065d0:	f380 8809 	msr	PSP, r0
 80065d4:	f3bf 8f6f 	isb	sy
 80065d8:	4770      	bx	lr
 80065da:	bf00      	nop
 80065dc:	f3af 8000 	nop.w

080065e0 <pxCurrentTCBConst>:
 80065e0:	20000998 	.word	0x20000998
 80065e4:	bf00      	nop
 80065e6:	bf00      	nop

080065e8 <xPortSysTickHandler>:
 80065e8:	b580      	push	{r7, lr}
 80065ea:	b082      	sub	sp, #8
 80065ec:	af00      	add	r7, sp, #0
 80065ee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80065f2:	f383 8811 	msr	BASEPRI, r3
 80065f6:	f3bf 8f6f 	isb	sy
 80065fa:	f3bf 8f4f 	dsb	sy
 80065fe:	607b      	str	r3, [r7, #4]
 8006600:	bf00      	nop
 8006602:	f7fe febb 	bl	800537c <xTaskIncrementTick>
 8006606:	4603      	mov	r3, r0
 8006608:	2b00      	cmp	r3, #0
 800660a:	d003      	beq.n	8006614 <xPortSysTickHandler+0x2c>
 800660c:	4b06      	ldr	r3, [pc, #24]	@ (8006628 <xPortSysTickHandler+0x40>)
 800660e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8006612:	601a      	str	r2, [r3, #0]
 8006614:	2300      	movs	r3, #0
 8006616:	603b      	str	r3, [r7, #0]
 8006618:	683b      	ldr	r3, [r7, #0]
 800661a:	f383 8811 	msr	BASEPRI, r3
 800661e:	bf00      	nop
 8006620:	bf00      	nop
 8006622:	3708      	adds	r7, #8
 8006624:	46bd      	mov	sp, r7
 8006626:	bd80      	pop	{r7, pc}
 8006628:	e000ed04 	.word	0xe000ed04

0800662c <vPortSetupTimerInterrupt>:
 800662c:	b480      	push	{r7}
 800662e:	af00      	add	r7, sp, #0
 8006630:	4b0b      	ldr	r3, [pc, #44]	@ (8006660 <vPortSetupTimerInterrupt+0x34>)
 8006632:	2200      	movs	r2, #0
 8006634:	601a      	str	r2, [r3, #0]
 8006636:	4b0b      	ldr	r3, [pc, #44]	@ (8006664 <vPortSetupTimerInterrupt+0x38>)
 8006638:	2200      	movs	r2, #0
 800663a:	601a      	str	r2, [r3, #0]
 800663c:	4b0a      	ldr	r3, [pc, #40]	@ (8006668 <vPortSetupTimerInterrupt+0x3c>)
 800663e:	681b      	ldr	r3, [r3, #0]
 8006640:	4a0a      	ldr	r2, [pc, #40]	@ (800666c <vPortSetupTimerInterrupt+0x40>)
 8006642:	fba2 2303 	umull	r2, r3, r2, r3
 8006646:	099b      	lsrs	r3, r3, #6
 8006648:	4a09      	ldr	r2, [pc, #36]	@ (8006670 <vPortSetupTimerInterrupt+0x44>)
 800664a:	3b01      	subs	r3, #1
 800664c:	6013      	str	r3, [r2, #0]
 800664e:	4b04      	ldr	r3, [pc, #16]	@ (8006660 <vPortSetupTimerInterrupt+0x34>)
 8006650:	2207      	movs	r2, #7
 8006652:	601a      	str	r2, [r3, #0]
 8006654:	bf00      	nop
 8006656:	46bd      	mov	sp, r7
 8006658:	f85d 7b04 	ldr.w	r7, [sp], #4
 800665c:	4770      	bx	lr
 800665e:	bf00      	nop
 8006660:	e000e010 	.word	0xe000e010
 8006664:	e000e018 	.word	0xe000e018
 8006668:	20000020 	.word	0x20000020
 800666c:	10624dd3 	.word	0x10624dd3
 8006670:	e000e014 	.word	0xe000e014

08006674 <vPortEnableVFP>:
 8006674:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 8006684 <vPortEnableVFP+0x10>
 8006678:	6801      	ldr	r1, [r0, #0]
 800667a:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800667e:	6001      	str	r1, [r0, #0]
 8006680:	4770      	bx	lr
 8006682:	bf00      	nop
 8006684:	e000ed88 	.word	0xe000ed88

08006688 <vPortValidateInterruptPriority>:
 8006688:	b480      	push	{r7}
 800668a:	b085      	sub	sp, #20
 800668c:	af00      	add	r7, sp, #0
 800668e:	f3ef 8305 	mrs	r3, IPSR
 8006692:	60fb      	str	r3, [r7, #12]
 8006694:	68fb      	ldr	r3, [r7, #12]
 8006696:	2b0f      	cmp	r3, #15
 8006698:	d915      	bls.n	80066c6 <vPortValidateInterruptPriority+0x3e>
 800669a:	4a18      	ldr	r2, [pc, #96]	@ (80066fc <vPortValidateInterruptPriority+0x74>)
 800669c:	68fb      	ldr	r3, [r7, #12]
 800669e:	4413      	add	r3, r2
 80066a0:	781b      	ldrb	r3, [r3, #0]
 80066a2:	72fb      	strb	r3, [r7, #11]
 80066a4:	4b16      	ldr	r3, [pc, #88]	@ (8006700 <vPortValidateInterruptPriority+0x78>)
 80066a6:	781b      	ldrb	r3, [r3, #0]
 80066a8:	7afa      	ldrb	r2, [r7, #11]
 80066aa:	429a      	cmp	r2, r3
 80066ac:	d20b      	bcs.n	80066c6 <vPortValidateInterruptPriority+0x3e>
 80066ae:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80066b2:	f383 8811 	msr	BASEPRI, r3
 80066b6:	f3bf 8f6f 	isb	sy
 80066ba:	f3bf 8f4f 	dsb	sy
 80066be:	607b      	str	r3, [r7, #4]
 80066c0:	bf00      	nop
 80066c2:	bf00      	nop
 80066c4:	e7fd      	b.n	80066c2 <vPortValidateInterruptPriority+0x3a>
 80066c6:	4b0f      	ldr	r3, [pc, #60]	@ (8006704 <vPortValidateInterruptPriority+0x7c>)
 80066c8:	681b      	ldr	r3, [r3, #0]
 80066ca:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 80066ce:	4b0e      	ldr	r3, [pc, #56]	@ (8006708 <vPortValidateInterruptPriority+0x80>)
 80066d0:	681b      	ldr	r3, [r3, #0]
 80066d2:	429a      	cmp	r2, r3
 80066d4:	d90b      	bls.n	80066ee <vPortValidateInterruptPriority+0x66>
 80066d6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80066da:	f383 8811 	msr	BASEPRI, r3
 80066de:	f3bf 8f6f 	isb	sy
 80066e2:	f3bf 8f4f 	dsb	sy
 80066e6:	603b      	str	r3, [r7, #0]
 80066e8:	bf00      	nop
 80066ea:	bf00      	nop
 80066ec:	e7fd      	b.n	80066ea <vPortValidateInterruptPriority+0x62>
 80066ee:	bf00      	nop
 80066f0:	3714      	adds	r7, #20
 80066f2:	46bd      	mov	sp, r7
 80066f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066f8:	4770      	bx	lr
 80066fa:	bf00      	nop
 80066fc:	e000e3f0 	.word	0xe000e3f0
 8006700:	20000fc4 	.word	0x20000fc4
 8006704:	e000ed0c 	.word	0xe000ed0c
 8006708:	20000fc8 	.word	0x20000fc8

0800670c <pvPortMalloc>:
 800670c:	b580      	push	{r7, lr}
 800670e:	b08a      	sub	sp, #40	@ 0x28
 8006710:	af00      	add	r7, sp, #0
 8006712:	6078      	str	r0, [r7, #4]
 8006714:	2300      	movs	r3, #0
 8006716:	61fb      	str	r3, [r7, #28]
 8006718:	f7fe fd74 	bl	8005204 <vTaskSuspendAll>
 800671c:	4b5c      	ldr	r3, [pc, #368]	@ (8006890 <pvPortMalloc+0x184>)
 800671e:	681b      	ldr	r3, [r3, #0]
 8006720:	2b00      	cmp	r3, #0
 8006722:	d101      	bne.n	8006728 <pvPortMalloc+0x1c>
 8006724:	f000 f924 	bl	8006970 <prvHeapInit>
 8006728:	4b5a      	ldr	r3, [pc, #360]	@ (8006894 <pvPortMalloc+0x188>)
 800672a:	681a      	ldr	r2, [r3, #0]
 800672c:	687b      	ldr	r3, [r7, #4]
 800672e:	4013      	ands	r3, r2
 8006730:	2b00      	cmp	r3, #0
 8006732:	f040 8095 	bne.w	8006860 <pvPortMalloc+0x154>
 8006736:	687b      	ldr	r3, [r7, #4]
 8006738:	2b00      	cmp	r3, #0
 800673a:	d01e      	beq.n	800677a <pvPortMalloc+0x6e>
 800673c:	2208      	movs	r2, #8
 800673e:	687b      	ldr	r3, [r7, #4]
 8006740:	4413      	add	r3, r2
 8006742:	607b      	str	r3, [r7, #4]
 8006744:	687b      	ldr	r3, [r7, #4]
 8006746:	f003 0307 	and.w	r3, r3, #7
 800674a:	2b00      	cmp	r3, #0
 800674c:	d015      	beq.n	800677a <pvPortMalloc+0x6e>
 800674e:	687b      	ldr	r3, [r7, #4]
 8006750:	f023 0307 	bic.w	r3, r3, #7
 8006754:	3308      	adds	r3, #8
 8006756:	607b      	str	r3, [r7, #4]
 8006758:	687b      	ldr	r3, [r7, #4]
 800675a:	f003 0307 	and.w	r3, r3, #7
 800675e:	2b00      	cmp	r3, #0
 8006760:	d00b      	beq.n	800677a <pvPortMalloc+0x6e>
 8006762:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006766:	f383 8811 	msr	BASEPRI, r3
 800676a:	f3bf 8f6f 	isb	sy
 800676e:	f3bf 8f4f 	dsb	sy
 8006772:	617b      	str	r3, [r7, #20]
 8006774:	bf00      	nop
 8006776:	bf00      	nop
 8006778:	e7fd      	b.n	8006776 <pvPortMalloc+0x6a>
 800677a:	687b      	ldr	r3, [r7, #4]
 800677c:	2b00      	cmp	r3, #0
 800677e:	d06f      	beq.n	8006860 <pvPortMalloc+0x154>
 8006780:	4b45      	ldr	r3, [pc, #276]	@ (8006898 <pvPortMalloc+0x18c>)
 8006782:	681b      	ldr	r3, [r3, #0]
 8006784:	687a      	ldr	r2, [r7, #4]
 8006786:	429a      	cmp	r2, r3
 8006788:	d86a      	bhi.n	8006860 <pvPortMalloc+0x154>
 800678a:	4b44      	ldr	r3, [pc, #272]	@ (800689c <pvPortMalloc+0x190>)
 800678c:	623b      	str	r3, [r7, #32]
 800678e:	4b43      	ldr	r3, [pc, #268]	@ (800689c <pvPortMalloc+0x190>)
 8006790:	681b      	ldr	r3, [r3, #0]
 8006792:	627b      	str	r3, [r7, #36]	@ 0x24
 8006794:	e004      	b.n	80067a0 <pvPortMalloc+0x94>
 8006796:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006798:	623b      	str	r3, [r7, #32]
 800679a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800679c:	681b      	ldr	r3, [r3, #0]
 800679e:	627b      	str	r3, [r7, #36]	@ 0x24
 80067a0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80067a2:	685b      	ldr	r3, [r3, #4]
 80067a4:	687a      	ldr	r2, [r7, #4]
 80067a6:	429a      	cmp	r2, r3
 80067a8:	d903      	bls.n	80067b2 <pvPortMalloc+0xa6>
 80067aa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80067ac:	681b      	ldr	r3, [r3, #0]
 80067ae:	2b00      	cmp	r3, #0
 80067b0:	d1f1      	bne.n	8006796 <pvPortMalloc+0x8a>
 80067b2:	4b37      	ldr	r3, [pc, #220]	@ (8006890 <pvPortMalloc+0x184>)
 80067b4:	681b      	ldr	r3, [r3, #0]
 80067b6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80067b8:	429a      	cmp	r2, r3
 80067ba:	d051      	beq.n	8006860 <pvPortMalloc+0x154>
 80067bc:	6a3b      	ldr	r3, [r7, #32]
 80067be:	681b      	ldr	r3, [r3, #0]
 80067c0:	2208      	movs	r2, #8
 80067c2:	4413      	add	r3, r2
 80067c4:	61fb      	str	r3, [r7, #28]
 80067c6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80067c8:	681a      	ldr	r2, [r3, #0]
 80067ca:	6a3b      	ldr	r3, [r7, #32]
 80067cc:	601a      	str	r2, [r3, #0]
 80067ce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80067d0:	685a      	ldr	r2, [r3, #4]
 80067d2:	687b      	ldr	r3, [r7, #4]
 80067d4:	1ad2      	subs	r2, r2, r3
 80067d6:	2308      	movs	r3, #8
 80067d8:	005b      	lsls	r3, r3, #1
 80067da:	429a      	cmp	r2, r3
 80067dc:	d920      	bls.n	8006820 <pvPortMalloc+0x114>
 80067de:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80067e0:	687b      	ldr	r3, [r7, #4]
 80067e2:	4413      	add	r3, r2
 80067e4:	61bb      	str	r3, [r7, #24]
 80067e6:	69bb      	ldr	r3, [r7, #24]
 80067e8:	f003 0307 	and.w	r3, r3, #7
 80067ec:	2b00      	cmp	r3, #0
 80067ee:	d00b      	beq.n	8006808 <pvPortMalloc+0xfc>
 80067f0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80067f4:	f383 8811 	msr	BASEPRI, r3
 80067f8:	f3bf 8f6f 	isb	sy
 80067fc:	f3bf 8f4f 	dsb	sy
 8006800:	613b      	str	r3, [r7, #16]
 8006802:	bf00      	nop
 8006804:	bf00      	nop
 8006806:	e7fd      	b.n	8006804 <pvPortMalloc+0xf8>
 8006808:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800680a:	685a      	ldr	r2, [r3, #4]
 800680c:	687b      	ldr	r3, [r7, #4]
 800680e:	1ad2      	subs	r2, r2, r3
 8006810:	69bb      	ldr	r3, [r7, #24]
 8006812:	605a      	str	r2, [r3, #4]
 8006814:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006816:	687a      	ldr	r2, [r7, #4]
 8006818:	605a      	str	r2, [r3, #4]
 800681a:	69b8      	ldr	r0, [r7, #24]
 800681c:	f000 f90a 	bl	8006a34 <prvInsertBlockIntoFreeList>
 8006820:	4b1d      	ldr	r3, [pc, #116]	@ (8006898 <pvPortMalloc+0x18c>)
 8006822:	681a      	ldr	r2, [r3, #0]
 8006824:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006826:	685b      	ldr	r3, [r3, #4]
 8006828:	1ad3      	subs	r3, r2, r3
 800682a:	4a1b      	ldr	r2, [pc, #108]	@ (8006898 <pvPortMalloc+0x18c>)
 800682c:	6013      	str	r3, [r2, #0]
 800682e:	4b1a      	ldr	r3, [pc, #104]	@ (8006898 <pvPortMalloc+0x18c>)
 8006830:	681a      	ldr	r2, [r3, #0]
 8006832:	4b1b      	ldr	r3, [pc, #108]	@ (80068a0 <pvPortMalloc+0x194>)
 8006834:	681b      	ldr	r3, [r3, #0]
 8006836:	429a      	cmp	r2, r3
 8006838:	d203      	bcs.n	8006842 <pvPortMalloc+0x136>
 800683a:	4b17      	ldr	r3, [pc, #92]	@ (8006898 <pvPortMalloc+0x18c>)
 800683c:	681b      	ldr	r3, [r3, #0]
 800683e:	4a18      	ldr	r2, [pc, #96]	@ (80068a0 <pvPortMalloc+0x194>)
 8006840:	6013      	str	r3, [r2, #0]
 8006842:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006844:	685a      	ldr	r2, [r3, #4]
 8006846:	4b13      	ldr	r3, [pc, #76]	@ (8006894 <pvPortMalloc+0x188>)
 8006848:	681b      	ldr	r3, [r3, #0]
 800684a:	431a      	orrs	r2, r3
 800684c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800684e:	605a      	str	r2, [r3, #4]
 8006850:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006852:	2200      	movs	r2, #0
 8006854:	601a      	str	r2, [r3, #0]
 8006856:	4b13      	ldr	r3, [pc, #76]	@ (80068a4 <pvPortMalloc+0x198>)
 8006858:	681b      	ldr	r3, [r3, #0]
 800685a:	3301      	adds	r3, #1
 800685c:	4a11      	ldr	r2, [pc, #68]	@ (80068a4 <pvPortMalloc+0x198>)
 800685e:	6013      	str	r3, [r2, #0]
 8006860:	f7fe fcde 	bl	8005220 <xTaskResumeAll>
 8006864:	69fb      	ldr	r3, [r7, #28]
 8006866:	f003 0307 	and.w	r3, r3, #7
 800686a:	2b00      	cmp	r3, #0
 800686c:	d00b      	beq.n	8006886 <pvPortMalloc+0x17a>
 800686e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006872:	f383 8811 	msr	BASEPRI, r3
 8006876:	f3bf 8f6f 	isb	sy
 800687a:	f3bf 8f4f 	dsb	sy
 800687e:	60fb      	str	r3, [r7, #12]
 8006880:	bf00      	nop
 8006882:	bf00      	nop
 8006884:	e7fd      	b.n	8006882 <pvPortMalloc+0x176>
 8006886:	69fb      	ldr	r3, [r7, #28]
 8006888:	4618      	mov	r0, r3
 800688a:	3728      	adds	r7, #40	@ 0x28
 800688c:	46bd      	mov	sp, r7
 800688e:	bd80      	pop	{r7, pc}
 8006890:	20004bd4 	.word	0x20004bd4
 8006894:	20004be8 	.word	0x20004be8
 8006898:	20004bd8 	.word	0x20004bd8
 800689c:	20004bcc 	.word	0x20004bcc
 80068a0:	20004bdc 	.word	0x20004bdc
 80068a4:	20004be0 	.word	0x20004be0

080068a8 <vPortFree>:
 80068a8:	b580      	push	{r7, lr}
 80068aa:	b086      	sub	sp, #24
 80068ac:	af00      	add	r7, sp, #0
 80068ae:	6078      	str	r0, [r7, #4]
 80068b0:	687b      	ldr	r3, [r7, #4]
 80068b2:	617b      	str	r3, [r7, #20]
 80068b4:	687b      	ldr	r3, [r7, #4]
 80068b6:	2b00      	cmp	r3, #0
 80068b8:	d04f      	beq.n	800695a <vPortFree+0xb2>
 80068ba:	2308      	movs	r3, #8
 80068bc:	425b      	negs	r3, r3
 80068be:	697a      	ldr	r2, [r7, #20]
 80068c0:	4413      	add	r3, r2
 80068c2:	617b      	str	r3, [r7, #20]
 80068c4:	697b      	ldr	r3, [r7, #20]
 80068c6:	613b      	str	r3, [r7, #16]
 80068c8:	693b      	ldr	r3, [r7, #16]
 80068ca:	685a      	ldr	r2, [r3, #4]
 80068cc:	4b25      	ldr	r3, [pc, #148]	@ (8006964 <vPortFree+0xbc>)
 80068ce:	681b      	ldr	r3, [r3, #0]
 80068d0:	4013      	ands	r3, r2
 80068d2:	2b00      	cmp	r3, #0
 80068d4:	d10b      	bne.n	80068ee <vPortFree+0x46>
 80068d6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80068da:	f383 8811 	msr	BASEPRI, r3
 80068de:	f3bf 8f6f 	isb	sy
 80068e2:	f3bf 8f4f 	dsb	sy
 80068e6:	60fb      	str	r3, [r7, #12]
 80068e8:	bf00      	nop
 80068ea:	bf00      	nop
 80068ec:	e7fd      	b.n	80068ea <vPortFree+0x42>
 80068ee:	693b      	ldr	r3, [r7, #16]
 80068f0:	681b      	ldr	r3, [r3, #0]
 80068f2:	2b00      	cmp	r3, #0
 80068f4:	d00b      	beq.n	800690e <vPortFree+0x66>
 80068f6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80068fa:	f383 8811 	msr	BASEPRI, r3
 80068fe:	f3bf 8f6f 	isb	sy
 8006902:	f3bf 8f4f 	dsb	sy
 8006906:	60bb      	str	r3, [r7, #8]
 8006908:	bf00      	nop
 800690a:	bf00      	nop
 800690c:	e7fd      	b.n	800690a <vPortFree+0x62>
 800690e:	693b      	ldr	r3, [r7, #16]
 8006910:	685a      	ldr	r2, [r3, #4]
 8006912:	4b14      	ldr	r3, [pc, #80]	@ (8006964 <vPortFree+0xbc>)
 8006914:	681b      	ldr	r3, [r3, #0]
 8006916:	4013      	ands	r3, r2
 8006918:	2b00      	cmp	r3, #0
 800691a:	d01e      	beq.n	800695a <vPortFree+0xb2>
 800691c:	693b      	ldr	r3, [r7, #16]
 800691e:	681b      	ldr	r3, [r3, #0]
 8006920:	2b00      	cmp	r3, #0
 8006922:	d11a      	bne.n	800695a <vPortFree+0xb2>
 8006924:	693b      	ldr	r3, [r7, #16]
 8006926:	685a      	ldr	r2, [r3, #4]
 8006928:	4b0e      	ldr	r3, [pc, #56]	@ (8006964 <vPortFree+0xbc>)
 800692a:	681b      	ldr	r3, [r3, #0]
 800692c:	43db      	mvns	r3, r3
 800692e:	401a      	ands	r2, r3
 8006930:	693b      	ldr	r3, [r7, #16]
 8006932:	605a      	str	r2, [r3, #4]
 8006934:	f7fe fc66 	bl	8005204 <vTaskSuspendAll>
 8006938:	693b      	ldr	r3, [r7, #16]
 800693a:	685a      	ldr	r2, [r3, #4]
 800693c:	4b0a      	ldr	r3, [pc, #40]	@ (8006968 <vPortFree+0xc0>)
 800693e:	681b      	ldr	r3, [r3, #0]
 8006940:	4413      	add	r3, r2
 8006942:	4a09      	ldr	r2, [pc, #36]	@ (8006968 <vPortFree+0xc0>)
 8006944:	6013      	str	r3, [r2, #0]
 8006946:	6938      	ldr	r0, [r7, #16]
 8006948:	f000 f874 	bl	8006a34 <prvInsertBlockIntoFreeList>
 800694c:	4b07      	ldr	r3, [pc, #28]	@ (800696c <vPortFree+0xc4>)
 800694e:	681b      	ldr	r3, [r3, #0]
 8006950:	3301      	adds	r3, #1
 8006952:	4a06      	ldr	r2, [pc, #24]	@ (800696c <vPortFree+0xc4>)
 8006954:	6013      	str	r3, [r2, #0]
 8006956:	f7fe fc63 	bl	8005220 <xTaskResumeAll>
 800695a:	bf00      	nop
 800695c:	3718      	adds	r7, #24
 800695e:	46bd      	mov	sp, r7
 8006960:	bd80      	pop	{r7, pc}
 8006962:	bf00      	nop
 8006964:	20004be8 	.word	0x20004be8
 8006968:	20004bd8 	.word	0x20004bd8
 800696c:	20004be4 	.word	0x20004be4

08006970 <prvHeapInit>:
 8006970:	b480      	push	{r7}
 8006972:	b085      	sub	sp, #20
 8006974:	af00      	add	r7, sp, #0
 8006976:	f44f 5370 	mov.w	r3, #15360	@ 0x3c00
 800697a:	60bb      	str	r3, [r7, #8]
 800697c:	4b27      	ldr	r3, [pc, #156]	@ (8006a1c <prvHeapInit+0xac>)
 800697e:	60fb      	str	r3, [r7, #12]
 8006980:	68fb      	ldr	r3, [r7, #12]
 8006982:	f003 0307 	and.w	r3, r3, #7
 8006986:	2b00      	cmp	r3, #0
 8006988:	d00c      	beq.n	80069a4 <prvHeapInit+0x34>
 800698a:	68fb      	ldr	r3, [r7, #12]
 800698c:	3307      	adds	r3, #7
 800698e:	60fb      	str	r3, [r7, #12]
 8006990:	68fb      	ldr	r3, [r7, #12]
 8006992:	f023 0307 	bic.w	r3, r3, #7
 8006996:	60fb      	str	r3, [r7, #12]
 8006998:	68ba      	ldr	r2, [r7, #8]
 800699a:	68fb      	ldr	r3, [r7, #12]
 800699c:	1ad3      	subs	r3, r2, r3
 800699e:	4a1f      	ldr	r2, [pc, #124]	@ (8006a1c <prvHeapInit+0xac>)
 80069a0:	4413      	add	r3, r2
 80069a2:	60bb      	str	r3, [r7, #8]
 80069a4:	68fb      	ldr	r3, [r7, #12]
 80069a6:	607b      	str	r3, [r7, #4]
 80069a8:	4a1d      	ldr	r2, [pc, #116]	@ (8006a20 <prvHeapInit+0xb0>)
 80069aa:	687b      	ldr	r3, [r7, #4]
 80069ac:	6013      	str	r3, [r2, #0]
 80069ae:	4b1c      	ldr	r3, [pc, #112]	@ (8006a20 <prvHeapInit+0xb0>)
 80069b0:	2200      	movs	r2, #0
 80069b2:	605a      	str	r2, [r3, #4]
 80069b4:	687b      	ldr	r3, [r7, #4]
 80069b6:	68ba      	ldr	r2, [r7, #8]
 80069b8:	4413      	add	r3, r2
 80069ba:	60fb      	str	r3, [r7, #12]
 80069bc:	2208      	movs	r2, #8
 80069be:	68fb      	ldr	r3, [r7, #12]
 80069c0:	1a9b      	subs	r3, r3, r2
 80069c2:	60fb      	str	r3, [r7, #12]
 80069c4:	68fb      	ldr	r3, [r7, #12]
 80069c6:	f023 0307 	bic.w	r3, r3, #7
 80069ca:	60fb      	str	r3, [r7, #12]
 80069cc:	68fb      	ldr	r3, [r7, #12]
 80069ce:	4a15      	ldr	r2, [pc, #84]	@ (8006a24 <prvHeapInit+0xb4>)
 80069d0:	6013      	str	r3, [r2, #0]
 80069d2:	4b14      	ldr	r3, [pc, #80]	@ (8006a24 <prvHeapInit+0xb4>)
 80069d4:	681b      	ldr	r3, [r3, #0]
 80069d6:	2200      	movs	r2, #0
 80069d8:	605a      	str	r2, [r3, #4]
 80069da:	4b12      	ldr	r3, [pc, #72]	@ (8006a24 <prvHeapInit+0xb4>)
 80069dc:	681b      	ldr	r3, [r3, #0]
 80069de:	2200      	movs	r2, #0
 80069e0:	601a      	str	r2, [r3, #0]
 80069e2:	687b      	ldr	r3, [r7, #4]
 80069e4:	603b      	str	r3, [r7, #0]
 80069e6:	683b      	ldr	r3, [r7, #0]
 80069e8:	68fa      	ldr	r2, [r7, #12]
 80069ea:	1ad2      	subs	r2, r2, r3
 80069ec:	683b      	ldr	r3, [r7, #0]
 80069ee:	605a      	str	r2, [r3, #4]
 80069f0:	4b0c      	ldr	r3, [pc, #48]	@ (8006a24 <prvHeapInit+0xb4>)
 80069f2:	681a      	ldr	r2, [r3, #0]
 80069f4:	683b      	ldr	r3, [r7, #0]
 80069f6:	601a      	str	r2, [r3, #0]
 80069f8:	683b      	ldr	r3, [r7, #0]
 80069fa:	685b      	ldr	r3, [r3, #4]
 80069fc:	4a0a      	ldr	r2, [pc, #40]	@ (8006a28 <prvHeapInit+0xb8>)
 80069fe:	6013      	str	r3, [r2, #0]
 8006a00:	683b      	ldr	r3, [r7, #0]
 8006a02:	685b      	ldr	r3, [r3, #4]
 8006a04:	4a09      	ldr	r2, [pc, #36]	@ (8006a2c <prvHeapInit+0xbc>)
 8006a06:	6013      	str	r3, [r2, #0]
 8006a08:	4b09      	ldr	r3, [pc, #36]	@ (8006a30 <prvHeapInit+0xc0>)
 8006a0a:	f04f 4200 	mov.w	r2, #2147483648	@ 0x80000000
 8006a0e:	601a      	str	r2, [r3, #0]
 8006a10:	bf00      	nop
 8006a12:	3714      	adds	r7, #20
 8006a14:	46bd      	mov	sp, r7
 8006a16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a1a:	4770      	bx	lr
 8006a1c:	20000fcc 	.word	0x20000fcc
 8006a20:	20004bcc 	.word	0x20004bcc
 8006a24:	20004bd4 	.word	0x20004bd4
 8006a28:	20004bdc 	.word	0x20004bdc
 8006a2c:	20004bd8 	.word	0x20004bd8
 8006a30:	20004be8 	.word	0x20004be8

08006a34 <prvInsertBlockIntoFreeList>:
 8006a34:	b480      	push	{r7}
 8006a36:	b085      	sub	sp, #20
 8006a38:	af00      	add	r7, sp, #0
 8006a3a:	6078      	str	r0, [r7, #4]
 8006a3c:	4b28      	ldr	r3, [pc, #160]	@ (8006ae0 <prvInsertBlockIntoFreeList+0xac>)
 8006a3e:	60fb      	str	r3, [r7, #12]
 8006a40:	e002      	b.n	8006a48 <prvInsertBlockIntoFreeList+0x14>
 8006a42:	68fb      	ldr	r3, [r7, #12]
 8006a44:	681b      	ldr	r3, [r3, #0]
 8006a46:	60fb      	str	r3, [r7, #12]
 8006a48:	68fb      	ldr	r3, [r7, #12]
 8006a4a:	681b      	ldr	r3, [r3, #0]
 8006a4c:	687a      	ldr	r2, [r7, #4]
 8006a4e:	429a      	cmp	r2, r3
 8006a50:	d8f7      	bhi.n	8006a42 <prvInsertBlockIntoFreeList+0xe>
 8006a52:	68fb      	ldr	r3, [r7, #12]
 8006a54:	60bb      	str	r3, [r7, #8]
 8006a56:	68fb      	ldr	r3, [r7, #12]
 8006a58:	685b      	ldr	r3, [r3, #4]
 8006a5a:	68ba      	ldr	r2, [r7, #8]
 8006a5c:	4413      	add	r3, r2
 8006a5e:	687a      	ldr	r2, [r7, #4]
 8006a60:	429a      	cmp	r2, r3
 8006a62:	d108      	bne.n	8006a76 <prvInsertBlockIntoFreeList+0x42>
 8006a64:	68fb      	ldr	r3, [r7, #12]
 8006a66:	685a      	ldr	r2, [r3, #4]
 8006a68:	687b      	ldr	r3, [r7, #4]
 8006a6a:	685b      	ldr	r3, [r3, #4]
 8006a6c:	441a      	add	r2, r3
 8006a6e:	68fb      	ldr	r3, [r7, #12]
 8006a70:	605a      	str	r2, [r3, #4]
 8006a72:	68fb      	ldr	r3, [r7, #12]
 8006a74:	607b      	str	r3, [r7, #4]
 8006a76:	687b      	ldr	r3, [r7, #4]
 8006a78:	60bb      	str	r3, [r7, #8]
 8006a7a:	687b      	ldr	r3, [r7, #4]
 8006a7c:	685b      	ldr	r3, [r3, #4]
 8006a7e:	68ba      	ldr	r2, [r7, #8]
 8006a80:	441a      	add	r2, r3
 8006a82:	68fb      	ldr	r3, [r7, #12]
 8006a84:	681b      	ldr	r3, [r3, #0]
 8006a86:	429a      	cmp	r2, r3
 8006a88:	d118      	bne.n	8006abc <prvInsertBlockIntoFreeList+0x88>
 8006a8a:	68fb      	ldr	r3, [r7, #12]
 8006a8c:	681a      	ldr	r2, [r3, #0]
 8006a8e:	4b15      	ldr	r3, [pc, #84]	@ (8006ae4 <prvInsertBlockIntoFreeList+0xb0>)
 8006a90:	681b      	ldr	r3, [r3, #0]
 8006a92:	429a      	cmp	r2, r3
 8006a94:	d00d      	beq.n	8006ab2 <prvInsertBlockIntoFreeList+0x7e>
 8006a96:	687b      	ldr	r3, [r7, #4]
 8006a98:	685a      	ldr	r2, [r3, #4]
 8006a9a:	68fb      	ldr	r3, [r7, #12]
 8006a9c:	681b      	ldr	r3, [r3, #0]
 8006a9e:	685b      	ldr	r3, [r3, #4]
 8006aa0:	441a      	add	r2, r3
 8006aa2:	687b      	ldr	r3, [r7, #4]
 8006aa4:	605a      	str	r2, [r3, #4]
 8006aa6:	68fb      	ldr	r3, [r7, #12]
 8006aa8:	681b      	ldr	r3, [r3, #0]
 8006aaa:	681a      	ldr	r2, [r3, #0]
 8006aac:	687b      	ldr	r3, [r7, #4]
 8006aae:	601a      	str	r2, [r3, #0]
 8006ab0:	e008      	b.n	8006ac4 <prvInsertBlockIntoFreeList+0x90>
 8006ab2:	4b0c      	ldr	r3, [pc, #48]	@ (8006ae4 <prvInsertBlockIntoFreeList+0xb0>)
 8006ab4:	681a      	ldr	r2, [r3, #0]
 8006ab6:	687b      	ldr	r3, [r7, #4]
 8006ab8:	601a      	str	r2, [r3, #0]
 8006aba:	e003      	b.n	8006ac4 <prvInsertBlockIntoFreeList+0x90>
 8006abc:	68fb      	ldr	r3, [r7, #12]
 8006abe:	681a      	ldr	r2, [r3, #0]
 8006ac0:	687b      	ldr	r3, [r7, #4]
 8006ac2:	601a      	str	r2, [r3, #0]
 8006ac4:	68fa      	ldr	r2, [r7, #12]
 8006ac6:	687b      	ldr	r3, [r7, #4]
 8006ac8:	429a      	cmp	r2, r3
 8006aca:	d002      	beq.n	8006ad2 <prvInsertBlockIntoFreeList+0x9e>
 8006acc:	68fb      	ldr	r3, [r7, #12]
 8006ace:	687a      	ldr	r2, [r7, #4]
 8006ad0:	601a      	str	r2, [r3, #0]
 8006ad2:	bf00      	nop
 8006ad4:	3714      	adds	r7, #20
 8006ad6:	46bd      	mov	sp, r7
 8006ad8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006adc:	4770      	bx	lr
 8006ade:	bf00      	nop
 8006ae0:	20004bcc 	.word	0x20004bcc
 8006ae4:	20004bd4 	.word	0x20004bd4

08006ae8 <sbrk_aligned>:
 8006ae8:	b570      	push	{r4, r5, r6, lr}
 8006aea:	4e0f      	ldr	r6, [pc, #60]	@ (8006b28 <sbrk_aligned+0x40>)
 8006aec:	460c      	mov	r4, r1
 8006aee:	6831      	ldr	r1, [r6, #0]
 8006af0:	4605      	mov	r5, r0
 8006af2:	b911      	cbnz	r1, 8006afa <sbrk_aligned+0x12>
 8006af4:	f000 f92e 	bl	8006d54 <_sbrk_r>
 8006af8:	6030      	str	r0, [r6, #0]
 8006afa:	4621      	mov	r1, r4
 8006afc:	4628      	mov	r0, r5
 8006afe:	f000 f929 	bl	8006d54 <_sbrk_r>
 8006b02:	1c43      	adds	r3, r0, #1
 8006b04:	d103      	bne.n	8006b0e <sbrk_aligned+0x26>
 8006b06:	f04f 34ff 	mov.w	r4, #4294967295
 8006b0a:	4620      	mov	r0, r4
 8006b0c:	bd70      	pop	{r4, r5, r6, pc}
 8006b0e:	1cc4      	adds	r4, r0, #3
 8006b10:	f024 0403 	bic.w	r4, r4, #3
 8006b14:	42a0      	cmp	r0, r4
 8006b16:	d0f8      	beq.n	8006b0a <sbrk_aligned+0x22>
 8006b18:	1a21      	subs	r1, r4, r0
 8006b1a:	4628      	mov	r0, r5
 8006b1c:	f000 f91a 	bl	8006d54 <_sbrk_r>
 8006b20:	3001      	adds	r0, #1
 8006b22:	d1f2      	bne.n	8006b0a <sbrk_aligned+0x22>
 8006b24:	e7ef      	b.n	8006b06 <sbrk_aligned+0x1e>
 8006b26:	bf00      	nop
 8006b28:	20004bec 	.word	0x20004bec

08006b2c <_malloc_r>:
 8006b2c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006b30:	1ccd      	adds	r5, r1, #3
 8006b32:	f025 0503 	bic.w	r5, r5, #3
 8006b36:	3508      	adds	r5, #8
 8006b38:	2d0c      	cmp	r5, #12
 8006b3a:	bf38      	it	cc
 8006b3c:	250c      	movcc	r5, #12
 8006b3e:	2d00      	cmp	r5, #0
 8006b40:	4606      	mov	r6, r0
 8006b42:	db01      	blt.n	8006b48 <_malloc_r+0x1c>
 8006b44:	42a9      	cmp	r1, r5
 8006b46:	d904      	bls.n	8006b52 <_malloc_r+0x26>
 8006b48:	230c      	movs	r3, #12
 8006b4a:	6033      	str	r3, [r6, #0]
 8006b4c:	2000      	movs	r0, #0
 8006b4e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006b52:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8006c28 <_malloc_r+0xfc>
 8006b56:	f000 f869 	bl	8006c2c <__malloc_lock>
 8006b5a:	f8d8 3000 	ldr.w	r3, [r8]
 8006b5e:	461c      	mov	r4, r3
 8006b60:	bb44      	cbnz	r4, 8006bb4 <_malloc_r+0x88>
 8006b62:	4629      	mov	r1, r5
 8006b64:	4630      	mov	r0, r6
 8006b66:	f7ff ffbf 	bl	8006ae8 <sbrk_aligned>
 8006b6a:	1c43      	adds	r3, r0, #1
 8006b6c:	4604      	mov	r4, r0
 8006b6e:	d158      	bne.n	8006c22 <_malloc_r+0xf6>
 8006b70:	f8d8 4000 	ldr.w	r4, [r8]
 8006b74:	4627      	mov	r7, r4
 8006b76:	2f00      	cmp	r7, #0
 8006b78:	d143      	bne.n	8006c02 <_malloc_r+0xd6>
 8006b7a:	2c00      	cmp	r4, #0
 8006b7c:	d04b      	beq.n	8006c16 <_malloc_r+0xea>
 8006b7e:	6823      	ldr	r3, [r4, #0]
 8006b80:	4639      	mov	r1, r7
 8006b82:	4630      	mov	r0, r6
 8006b84:	eb04 0903 	add.w	r9, r4, r3
 8006b88:	f000 f8e4 	bl	8006d54 <_sbrk_r>
 8006b8c:	4581      	cmp	r9, r0
 8006b8e:	d142      	bne.n	8006c16 <_malloc_r+0xea>
 8006b90:	6821      	ldr	r1, [r4, #0]
 8006b92:	1a6d      	subs	r5, r5, r1
 8006b94:	4629      	mov	r1, r5
 8006b96:	4630      	mov	r0, r6
 8006b98:	f7ff ffa6 	bl	8006ae8 <sbrk_aligned>
 8006b9c:	3001      	adds	r0, #1
 8006b9e:	d03a      	beq.n	8006c16 <_malloc_r+0xea>
 8006ba0:	6823      	ldr	r3, [r4, #0]
 8006ba2:	442b      	add	r3, r5
 8006ba4:	6023      	str	r3, [r4, #0]
 8006ba6:	f8d8 3000 	ldr.w	r3, [r8]
 8006baa:	685a      	ldr	r2, [r3, #4]
 8006bac:	bb62      	cbnz	r2, 8006c08 <_malloc_r+0xdc>
 8006bae:	f8c8 7000 	str.w	r7, [r8]
 8006bb2:	e00f      	b.n	8006bd4 <_malloc_r+0xa8>
 8006bb4:	6822      	ldr	r2, [r4, #0]
 8006bb6:	1b52      	subs	r2, r2, r5
 8006bb8:	d420      	bmi.n	8006bfc <_malloc_r+0xd0>
 8006bba:	2a0b      	cmp	r2, #11
 8006bbc:	d917      	bls.n	8006bee <_malloc_r+0xc2>
 8006bbe:	1961      	adds	r1, r4, r5
 8006bc0:	42a3      	cmp	r3, r4
 8006bc2:	6025      	str	r5, [r4, #0]
 8006bc4:	bf18      	it	ne
 8006bc6:	6059      	strne	r1, [r3, #4]
 8006bc8:	6863      	ldr	r3, [r4, #4]
 8006bca:	bf08      	it	eq
 8006bcc:	f8c8 1000 	streq.w	r1, [r8]
 8006bd0:	5162      	str	r2, [r4, r5]
 8006bd2:	604b      	str	r3, [r1, #4]
 8006bd4:	4630      	mov	r0, r6
 8006bd6:	f000 f82f 	bl	8006c38 <__malloc_unlock>
 8006bda:	f104 000b 	add.w	r0, r4, #11
 8006bde:	1d23      	adds	r3, r4, #4
 8006be0:	f020 0007 	bic.w	r0, r0, #7
 8006be4:	1ac2      	subs	r2, r0, r3
 8006be6:	bf1c      	itt	ne
 8006be8:	1a1b      	subne	r3, r3, r0
 8006bea:	50a3      	strne	r3, [r4, r2]
 8006bec:	e7af      	b.n	8006b4e <_malloc_r+0x22>
 8006bee:	6862      	ldr	r2, [r4, #4]
 8006bf0:	42a3      	cmp	r3, r4
 8006bf2:	bf0c      	ite	eq
 8006bf4:	f8c8 2000 	streq.w	r2, [r8]
 8006bf8:	605a      	strne	r2, [r3, #4]
 8006bfa:	e7eb      	b.n	8006bd4 <_malloc_r+0xa8>
 8006bfc:	4623      	mov	r3, r4
 8006bfe:	6864      	ldr	r4, [r4, #4]
 8006c00:	e7ae      	b.n	8006b60 <_malloc_r+0x34>
 8006c02:	463c      	mov	r4, r7
 8006c04:	687f      	ldr	r7, [r7, #4]
 8006c06:	e7b6      	b.n	8006b76 <_malloc_r+0x4a>
 8006c08:	461a      	mov	r2, r3
 8006c0a:	685b      	ldr	r3, [r3, #4]
 8006c0c:	42a3      	cmp	r3, r4
 8006c0e:	d1fb      	bne.n	8006c08 <_malloc_r+0xdc>
 8006c10:	2300      	movs	r3, #0
 8006c12:	6053      	str	r3, [r2, #4]
 8006c14:	e7de      	b.n	8006bd4 <_malloc_r+0xa8>
 8006c16:	230c      	movs	r3, #12
 8006c18:	6033      	str	r3, [r6, #0]
 8006c1a:	4630      	mov	r0, r6
 8006c1c:	f000 f80c 	bl	8006c38 <__malloc_unlock>
 8006c20:	e794      	b.n	8006b4c <_malloc_r+0x20>
 8006c22:	6005      	str	r5, [r0, #0]
 8006c24:	e7d6      	b.n	8006bd4 <_malloc_r+0xa8>
 8006c26:	bf00      	nop
 8006c28:	20004bf0 	.word	0x20004bf0

08006c2c <__malloc_lock>:
 8006c2c:	4801      	ldr	r0, [pc, #4]	@ (8006c34 <__malloc_lock+0x8>)
 8006c2e:	f000 b8cb 	b.w	8006dc8 <__retarget_lock_acquire_recursive>
 8006c32:	bf00      	nop
 8006c34:	20004d30 	.word	0x20004d30

08006c38 <__malloc_unlock>:
 8006c38:	4801      	ldr	r0, [pc, #4]	@ (8006c40 <__malloc_unlock+0x8>)
 8006c3a:	f000 b8c6 	b.w	8006dca <__retarget_lock_release_recursive>
 8006c3e:	bf00      	nop
 8006c40:	20004d30 	.word	0x20004d30

08006c44 <siprintf>:
 8006c44:	b40e      	push	{r1, r2, r3}
 8006c46:	b510      	push	{r4, lr}
 8006c48:	b09d      	sub	sp, #116	@ 0x74
 8006c4a:	ab1f      	add	r3, sp, #124	@ 0x7c
 8006c4c:	9002      	str	r0, [sp, #8]
 8006c4e:	9006      	str	r0, [sp, #24]
 8006c50:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8006c54:	480a      	ldr	r0, [pc, #40]	@ (8006c80 <siprintf+0x3c>)
 8006c56:	9107      	str	r1, [sp, #28]
 8006c58:	9104      	str	r1, [sp, #16]
 8006c5a:	490a      	ldr	r1, [pc, #40]	@ (8006c84 <siprintf+0x40>)
 8006c5c:	f853 2b04 	ldr.w	r2, [r3], #4
 8006c60:	9105      	str	r1, [sp, #20]
 8006c62:	2400      	movs	r4, #0
 8006c64:	a902      	add	r1, sp, #8
 8006c66:	6800      	ldr	r0, [r0, #0]
 8006c68:	9301      	str	r3, [sp, #4]
 8006c6a:	941b      	str	r4, [sp, #108]	@ 0x6c
 8006c6c:	f000 f962 	bl	8006f34 <_svfiprintf_r>
 8006c70:	9b02      	ldr	r3, [sp, #8]
 8006c72:	701c      	strb	r4, [r3, #0]
 8006c74:	b01d      	add	sp, #116	@ 0x74
 8006c76:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006c7a:	b003      	add	sp, #12
 8006c7c:	4770      	bx	lr
 8006c7e:	bf00      	nop
 8006c80:	20000030 	.word	0x20000030
 8006c84:	ffff0208 	.word	0xffff0208

08006c88 <memset>:
 8006c88:	4402      	add	r2, r0
 8006c8a:	4603      	mov	r3, r0
 8006c8c:	4293      	cmp	r3, r2
 8006c8e:	d100      	bne.n	8006c92 <memset+0xa>
 8006c90:	4770      	bx	lr
 8006c92:	f803 1b01 	strb.w	r1, [r3], #1
 8006c96:	e7f9      	b.n	8006c8c <memset+0x4>

08006c98 <_reclaim_reent>:
 8006c98:	4b2d      	ldr	r3, [pc, #180]	@ (8006d50 <_reclaim_reent+0xb8>)
 8006c9a:	681b      	ldr	r3, [r3, #0]
 8006c9c:	4283      	cmp	r3, r0
 8006c9e:	b570      	push	{r4, r5, r6, lr}
 8006ca0:	4604      	mov	r4, r0
 8006ca2:	d053      	beq.n	8006d4c <_reclaim_reent+0xb4>
 8006ca4:	69c3      	ldr	r3, [r0, #28]
 8006ca6:	b31b      	cbz	r3, 8006cf0 <_reclaim_reent+0x58>
 8006ca8:	68db      	ldr	r3, [r3, #12]
 8006caa:	b163      	cbz	r3, 8006cc6 <_reclaim_reent+0x2e>
 8006cac:	2500      	movs	r5, #0
 8006cae:	69e3      	ldr	r3, [r4, #28]
 8006cb0:	68db      	ldr	r3, [r3, #12]
 8006cb2:	5959      	ldr	r1, [r3, r5]
 8006cb4:	b9b1      	cbnz	r1, 8006ce4 <_reclaim_reent+0x4c>
 8006cb6:	3504      	adds	r5, #4
 8006cb8:	2d80      	cmp	r5, #128	@ 0x80
 8006cba:	d1f8      	bne.n	8006cae <_reclaim_reent+0x16>
 8006cbc:	69e3      	ldr	r3, [r4, #28]
 8006cbe:	4620      	mov	r0, r4
 8006cc0:	68d9      	ldr	r1, [r3, #12]
 8006cc2:	f000 f891 	bl	8006de8 <_free_r>
 8006cc6:	69e3      	ldr	r3, [r4, #28]
 8006cc8:	6819      	ldr	r1, [r3, #0]
 8006cca:	b111      	cbz	r1, 8006cd2 <_reclaim_reent+0x3a>
 8006ccc:	4620      	mov	r0, r4
 8006cce:	f000 f88b 	bl	8006de8 <_free_r>
 8006cd2:	69e3      	ldr	r3, [r4, #28]
 8006cd4:	689d      	ldr	r5, [r3, #8]
 8006cd6:	b15d      	cbz	r5, 8006cf0 <_reclaim_reent+0x58>
 8006cd8:	4629      	mov	r1, r5
 8006cda:	4620      	mov	r0, r4
 8006cdc:	682d      	ldr	r5, [r5, #0]
 8006cde:	f000 f883 	bl	8006de8 <_free_r>
 8006ce2:	e7f8      	b.n	8006cd6 <_reclaim_reent+0x3e>
 8006ce4:	680e      	ldr	r6, [r1, #0]
 8006ce6:	4620      	mov	r0, r4
 8006ce8:	f000 f87e 	bl	8006de8 <_free_r>
 8006cec:	4631      	mov	r1, r6
 8006cee:	e7e1      	b.n	8006cb4 <_reclaim_reent+0x1c>
 8006cf0:	6961      	ldr	r1, [r4, #20]
 8006cf2:	b111      	cbz	r1, 8006cfa <_reclaim_reent+0x62>
 8006cf4:	4620      	mov	r0, r4
 8006cf6:	f000 f877 	bl	8006de8 <_free_r>
 8006cfa:	69e1      	ldr	r1, [r4, #28]
 8006cfc:	b111      	cbz	r1, 8006d04 <_reclaim_reent+0x6c>
 8006cfe:	4620      	mov	r0, r4
 8006d00:	f000 f872 	bl	8006de8 <_free_r>
 8006d04:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8006d06:	b111      	cbz	r1, 8006d0e <_reclaim_reent+0x76>
 8006d08:	4620      	mov	r0, r4
 8006d0a:	f000 f86d 	bl	8006de8 <_free_r>
 8006d0e:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8006d10:	b111      	cbz	r1, 8006d18 <_reclaim_reent+0x80>
 8006d12:	4620      	mov	r0, r4
 8006d14:	f000 f868 	bl	8006de8 <_free_r>
 8006d18:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8006d1a:	b111      	cbz	r1, 8006d22 <_reclaim_reent+0x8a>
 8006d1c:	4620      	mov	r0, r4
 8006d1e:	f000 f863 	bl	8006de8 <_free_r>
 8006d22:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 8006d24:	b111      	cbz	r1, 8006d2c <_reclaim_reent+0x94>
 8006d26:	4620      	mov	r0, r4
 8006d28:	f000 f85e 	bl	8006de8 <_free_r>
 8006d2c:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 8006d2e:	b111      	cbz	r1, 8006d36 <_reclaim_reent+0x9e>
 8006d30:	4620      	mov	r0, r4
 8006d32:	f000 f859 	bl	8006de8 <_free_r>
 8006d36:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8006d38:	b111      	cbz	r1, 8006d40 <_reclaim_reent+0xa8>
 8006d3a:	4620      	mov	r0, r4
 8006d3c:	f000 f854 	bl	8006de8 <_free_r>
 8006d40:	6a23      	ldr	r3, [r4, #32]
 8006d42:	b11b      	cbz	r3, 8006d4c <_reclaim_reent+0xb4>
 8006d44:	4620      	mov	r0, r4
 8006d46:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8006d4a:	4718      	bx	r3
 8006d4c:	bd70      	pop	{r4, r5, r6, pc}
 8006d4e:	bf00      	nop
 8006d50:	20000030 	.word	0x20000030

08006d54 <_sbrk_r>:
 8006d54:	b538      	push	{r3, r4, r5, lr}
 8006d56:	4d06      	ldr	r5, [pc, #24]	@ (8006d70 <_sbrk_r+0x1c>)
 8006d58:	2300      	movs	r3, #0
 8006d5a:	4604      	mov	r4, r0
 8006d5c:	4608      	mov	r0, r1
 8006d5e:	602b      	str	r3, [r5, #0]
 8006d60:	f7fa fc4a 	bl	80015f8 <_sbrk>
 8006d64:	1c43      	adds	r3, r0, #1
 8006d66:	d102      	bne.n	8006d6e <_sbrk_r+0x1a>
 8006d68:	682b      	ldr	r3, [r5, #0]
 8006d6a:	b103      	cbz	r3, 8006d6e <_sbrk_r+0x1a>
 8006d6c:	6023      	str	r3, [r4, #0]
 8006d6e:	bd38      	pop	{r3, r4, r5, pc}
 8006d70:	20004d2c 	.word	0x20004d2c

08006d74 <__errno>:
 8006d74:	4b01      	ldr	r3, [pc, #4]	@ (8006d7c <__errno+0x8>)
 8006d76:	6818      	ldr	r0, [r3, #0]
 8006d78:	4770      	bx	lr
 8006d7a:	bf00      	nop
 8006d7c:	20000030 	.word	0x20000030

08006d80 <__libc_init_array>:
 8006d80:	b570      	push	{r4, r5, r6, lr}
 8006d82:	4d0d      	ldr	r5, [pc, #52]	@ (8006db8 <__libc_init_array+0x38>)
 8006d84:	4c0d      	ldr	r4, [pc, #52]	@ (8006dbc <__libc_init_array+0x3c>)
 8006d86:	1b64      	subs	r4, r4, r5
 8006d88:	10a4      	asrs	r4, r4, #2
 8006d8a:	2600      	movs	r6, #0
 8006d8c:	42a6      	cmp	r6, r4
 8006d8e:	d109      	bne.n	8006da4 <__libc_init_array+0x24>
 8006d90:	4d0b      	ldr	r5, [pc, #44]	@ (8006dc0 <__libc_init_array+0x40>)
 8006d92:	4c0c      	ldr	r4, [pc, #48]	@ (8006dc4 <__libc_init_array+0x44>)
 8006d94:	f000 fba6 	bl	80074e4 <_init>
 8006d98:	1b64      	subs	r4, r4, r5
 8006d9a:	10a4      	asrs	r4, r4, #2
 8006d9c:	2600      	movs	r6, #0
 8006d9e:	42a6      	cmp	r6, r4
 8006da0:	d105      	bne.n	8006dae <__libc_init_array+0x2e>
 8006da2:	bd70      	pop	{r4, r5, r6, pc}
 8006da4:	f855 3b04 	ldr.w	r3, [r5], #4
 8006da8:	4798      	blx	r3
 8006daa:	3601      	adds	r6, #1
 8006dac:	e7ee      	b.n	8006d8c <__libc_init_array+0xc>
 8006dae:	f855 3b04 	ldr.w	r3, [r5], #4
 8006db2:	4798      	blx	r3
 8006db4:	3601      	adds	r6, #1
 8006db6:	e7f2      	b.n	8006d9e <__libc_init_array+0x1e>
 8006db8:	08008324 	.word	0x08008324
 8006dbc:	08008324 	.word	0x08008324
 8006dc0:	08008324 	.word	0x08008324
 8006dc4:	08008328 	.word	0x08008328

08006dc8 <__retarget_lock_acquire_recursive>:
 8006dc8:	4770      	bx	lr

08006dca <__retarget_lock_release_recursive>:
 8006dca:	4770      	bx	lr

08006dcc <memcpy>:
 8006dcc:	440a      	add	r2, r1
 8006dce:	4291      	cmp	r1, r2
 8006dd0:	f100 33ff 	add.w	r3, r0, #4294967295
 8006dd4:	d100      	bne.n	8006dd8 <memcpy+0xc>
 8006dd6:	4770      	bx	lr
 8006dd8:	b510      	push	{r4, lr}
 8006dda:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006dde:	f803 4f01 	strb.w	r4, [r3, #1]!
 8006de2:	4291      	cmp	r1, r2
 8006de4:	d1f9      	bne.n	8006dda <memcpy+0xe>
 8006de6:	bd10      	pop	{r4, pc}

08006de8 <_free_r>:
 8006de8:	b538      	push	{r3, r4, r5, lr}
 8006dea:	4605      	mov	r5, r0
 8006dec:	2900      	cmp	r1, #0
 8006dee:	d041      	beq.n	8006e74 <_free_r+0x8c>
 8006df0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006df4:	1f0c      	subs	r4, r1, #4
 8006df6:	2b00      	cmp	r3, #0
 8006df8:	bfb8      	it	lt
 8006dfa:	18e4      	addlt	r4, r4, r3
 8006dfc:	f7ff ff16 	bl	8006c2c <__malloc_lock>
 8006e00:	4a1d      	ldr	r2, [pc, #116]	@ (8006e78 <_free_r+0x90>)
 8006e02:	6813      	ldr	r3, [r2, #0]
 8006e04:	b933      	cbnz	r3, 8006e14 <_free_r+0x2c>
 8006e06:	6063      	str	r3, [r4, #4]
 8006e08:	6014      	str	r4, [r2, #0]
 8006e0a:	4628      	mov	r0, r5
 8006e0c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006e10:	f7ff bf12 	b.w	8006c38 <__malloc_unlock>
 8006e14:	42a3      	cmp	r3, r4
 8006e16:	d908      	bls.n	8006e2a <_free_r+0x42>
 8006e18:	6820      	ldr	r0, [r4, #0]
 8006e1a:	1821      	adds	r1, r4, r0
 8006e1c:	428b      	cmp	r3, r1
 8006e1e:	bf01      	itttt	eq
 8006e20:	6819      	ldreq	r1, [r3, #0]
 8006e22:	685b      	ldreq	r3, [r3, #4]
 8006e24:	1809      	addeq	r1, r1, r0
 8006e26:	6021      	streq	r1, [r4, #0]
 8006e28:	e7ed      	b.n	8006e06 <_free_r+0x1e>
 8006e2a:	461a      	mov	r2, r3
 8006e2c:	685b      	ldr	r3, [r3, #4]
 8006e2e:	b10b      	cbz	r3, 8006e34 <_free_r+0x4c>
 8006e30:	42a3      	cmp	r3, r4
 8006e32:	d9fa      	bls.n	8006e2a <_free_r+0x42>
 8006e34:	6811      	ldr	r1, [r2, #0]
 8006e36:	1850      	adds	r0, r2, r1
 8006e38:	42a0      	cmp	r0, r4
 8006e3a:	d10b      	bne.n	8006e54 <_free_r+0x6c>
 8006e3c:	6820      	ldr	r0, [r4, #0]
 8006e3e:	4401      	add	r1, r0
 8006e40:	1850      	adds	r0, r2, r1
 8006e42:	4283      	cmp	r3, r0
 8006e44:	6011      	str	r1, [r2, #0]
 8006e46:	d1e0      	bne.n	8006e0a <_free_r+0x22>
 8006e48:	6818      	ldr	r0, [r3, #0]
 8006e4a:	685b      	ldr	r3, [r3, #4]
 8006e4c:	6053      	str	r3, [r2, #4]
 8006e4e:	4408      	add	r0, r1
 8006e50:	6010      	str	r0, [r2, #0]
 8006e52:	e7da      	b.n	8006e0a <_free_r+0x22>
 8006e54:	d902      	bls.n	8006e5c <_free_r+0x74>
 8006e56:	230c      	movs	r3, #12
 8006e58:	602b      	str	r3, [r5, #0]
 8006e5a:	e7d6      	b.n	8006e0a <_free_r+0x22>
 8006e5c:	6820      	ldr	r0, [r4, #0]
 8006e5e:	1821      	adds	r1, r4, r0
 8006e60:	428b      	cmp	r3, r1
 8006e62:	bf04      	itt	eq
 8006e64:	6819      	ldreq	r1, [r3, #0]
 8006e66:	685b      	ldreq	r3, [r3, #4]
 8006e68:	6063      	str	r3, [r4, #4]
 8006e6a:	bf04      	itt	eq
 8006e6c:	1809      	addeq	r1, r1, r0
 8006e6e:	6021      	streq	r1, [r4, #0]
 8006e70:	6054      	str	r4, [r2, #4]
 8006e72:	e7ca      	b.n	8006e0a <_free_r+0x22>
 8006e74:	bd38      	pop	{r3, r4, r5, pc}
 8006e76:	bf00      	nop
 8006e78:	20004bf0 	.word	0x20004bf0

08006e7c <__ssputs_r>:
 8006e7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006e80:	688e      	ldr	r6, [r1, #8]
 8006e82:	461f      	mov	r7, r3
 8006e84:	42be      	cmp	r6, r7
 8006e86:	680b      	ldr	r3, [r1, #0]
 8006e88:	4682      	mov	sl, r0
 8006e8a:	460c      	mov	r4, r1
 8006e8c:	4690      	mov	r8, r2
 8006e8e:	d82d      	bhi.n	8006eec <__ssputs_r+0x70>
 8006e90:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8006e94:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8006e98:	d026      	beq.n	8006ee8 <__ssputs_r+0x6c>
 8006e9a:	6965      	ldr	r5, [r4, #20]
 8006e9c:	6909      	ldr	r1, [r1, #16]
 8006e9e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006ea2:	eba3 0901 	sub.w	r9, r3, r1
 8006ea6:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8006eaa:	1c7b      	adds	r3, r7, #1
 8006eac:	444b      	add	r3, r9
 8006eae:	106d      	asrs	r5, r5, #1
 8006eb0:	429d      	cmp	r5, r3
 8006eb2:	bf38      	it	cc
 8006eb4:	461d      	movcc	r5, r3
 8006eb6:	0553      	lsls	r3, r2, #21
 8006eb8:	d527      	bpl.n	8006f0a <__ssputs_r+0x8e>
 8006eba:	4629      	mov	r1, r5
 8006ebc:	f7ff fe36 	bl	8006b2c <_malloc_r>
 8006ec0:	4606      	mov	r6, r0
 8006ec2:	b360      	cbz	r0, 8006f1e <__ssputs_r+0xa2>
 8006ec4:	6921      	ldr	r1, [r4, #16]
 8006ec6:	464a      	mov	r2, r9
 8006ec8:	f7ff ff80 	bl	8006dcc <memcpy>
 8006ecc:	89a3      	ldrh	r3, [r4, #12]
 8006ece:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8006ed2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8006ed6:	81a3      	strh	r3, [r4, #12]
 8006ed8:	6126      	str	r6, [r4, #16]
 8006eda:	6165      	str	r5, [r4, #20]
 8006edc:	444e      	add	r6, r9
 8006ede:	eba5 0509 	sub.w	r5, r5, r9
 8006ee2:	6026      	str	r6, [r4, #0]
 8006ee4:	60a5      	str	r5, [r4, #8]
 8006ee6:	463e      	mov	r6, r7
 8006ee8:	42be      	cmp	r6, r7
 8006eea:	d900      	bls.n	8006eee <__ssputs_r+0x72>
 8006eec:	463e      	mov	r6, r7
 8006eee:	6820      	ldr	r0, [r4, #0]
 8006ef0:	4632      	mov	r2, r6
 8006ef2:	4641      	mov	r1, r8
 8006ef4:	f000 faa6 	bl	8007444 <memmove>
 8006ef8:	68a3      	ldr	r3, [r4, #8]
 8006efa:	1b9b      	subs	r3, r3, r6
 8006efc:	60a3      	str	r3, [r4, #8]
 8006efe:	6823      	ldr	r3, [r4, #0]
 8006f00:	4433      	add	r3, r6
 8006f02:	6023      	str	r3, [r4, #0]
 8006f04:	2000      	movs	r0, #0
 8006f06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006f0a:	462a      	mov	r2, r5
 8006f0c:	f000 fab4 	bl	8007478 <_realloc_r>
 8006f10:	4606      	mov	r6, r0
 8006f12:	2800      	cmp	r0, #0
 8006f14:	d1e0      	bne.n	8006ed8 <__ssputs_r+0x5c>
 8006f16:	6921      	ldr	r1, [r4, #16]
 8006f18:	4650      	mov	r0, sl
 8006f1a:	f7ff ff65 	bl	8006de8 <_free_r>
 8006f1e:	230c      	movs	r3, #12
 8006f20:	f8ca 3000 	str.w	r3, [sl]
 8006f24:	89a3      	ldrh	r3, [r4, #12]
 8006f26:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006f2a:	81a3      	strh	r3, [r4, #12]
 8006f2c:	f04f 30ff 	mov.w	r0, #4294967295
 8006f30:	e7e9      	b.n	8006f06 <__ssputs_r+0x8a>
	...

08006f34 <_svfiprintf_r>:
 8006f34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006f38:	4698      	mov	r8, r3
 8006f3a:	898b      	ldrh	r3, [r1, #12]
 8006f3c:	061b      	lsls	r3, r3, #24
 8006f3e:	b09d      	sub	sp, #116	@ 0x74
 8006f40:	4607      	mov	r7, r0
 8006f42:	460d      	mov	r5, r1
 8006f44:	4614      	mov	r4, r2
 8006f46:	d510      	bpl.n	8006f6a <_svfiprintf_r+0x36>
 8006f48:	690b      	ldr	r3, [r1, #16]
 8006f4a:	b973      	cbnz	r3, 8006f6a <_svfiprintf_r+0x36>
 8006f4c:	2140      	movs	r1, #64	@ 0x40
 8006f4e:	f7ff fded 	bl	8006b2c <_malloc_r>
 8006f52:	6028      	str	r0, [r5, #0]
 8006f54:	6128      	str	r0, [r5, #16]
 8006f56:	b930      	cbnz	r0, 8006f66 <_svfiprintf_r+0x32>
 8006f58:	230c      	movs	r3, #12
 8006f5a:	603b      	str	r3, [r7, #0]
 8006f5c:	f04f 30ff 	mov.w	r0, #4294967295
 8006f60:	b01d      	add	sp, #116	@ 0x74
 8006f62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006f66:	2340      	movs	r3, #64	@ 0x40
 8006f68:	616b      	str	r3, [r5, #20]
 8006f6a:	2300      	movs	r3, #0
 8006f6c:	9309      	str	r3, [sp, #36]	@ 0x24
 8006f6e:	2320      	movs	r3, #32
 8006f70:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8006f74:	f8cd 800c 	str.w	r8, [sp, #12]
 8006f78:	2330      	movs	r3, #48	@ 0x30
 8006f7a:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8007118 <_svfiprintf_r+0x1e4>
 8006f7e:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8006f82:	f04f 0901 	mov.w	r9, #1
 8006f86:	4623      	mov	r3, r4
 8006f88:	469a      	mov	sl, r3
 8006f8a:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006f8e:	b10a      	cbz	r2, 8006f94 <_svfiprintf_r+0x60>
 8006f90:	2a25      	cmp	r2, #37	@ 0x25
 8006f92:	d1f9      	bne.n	8006f88 <_svfiprintf_r+0x54>
 8006f94:	ebba 0b04 	subs.w	fp, sl, r4
 8006f98:	d00b      	beq.n	8006fb2 <_svfiprintf_r+0x7e>
 8006f9a:	465b      	mov	r3, fp
 8006f9c:	4622      	mov	r2, r4
 8006f9e:	4629      	mov	r1, r5
 8006fa0:	4638      	mov	r0, r7
 8006fa2:	f7ff ff6b 	bl	8006e7c <__ssputs_r>
 8006fa6:	3001      	adds	r0, #1
 8006fa8:	f000 80a7 	beq.w	80070fa <_svfiprintf_r+0x1c6>
 8006fac:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8006fae:	445a      	add	r2, fp
 8006fb0:	9209      	str	r2, [sp, #36]	@ 0x24
 8006fb2:	f89a 3000 	ldrb.w	r3, [sl]
 8006fb6:	2b00      	cmp	r3, #0
 8006fb8:	f000 809f 	beq.w	80070fa <_svfiprintf_r+0x1c6>
 8006fbc:	2300      	movs	r3, #0
 8006fbe:	f04f 32ff 	mov.w	r2, #4294967295
 8006fc2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8006fc6:	f10a 0a01 	add.w	sl, sl, #1
 8006fca:	9304      	str	r3, [sp, #16]
 8006fcc:	9307      	str	r3, [sp, #28]
 8006fce:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8006fd2:	931a      	str	r3, [sp, #104]	@ 0x68
 8006fd4:	4654      	mov	r4, sl
 8006fd6:	2205      	movs	r2, #5
 8006fd8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006fdc:	484e      	ldr	r0, [pc, #312]	@ (8007118 <_svfiprintf_r+0x1e4>)
 8006fde:	f7f9 f8ff 	bl	80001e0 <memchr>
 8006fe2:	9a04      	ldr	r2, [sp, #16]
 8006fe4:	b9d8      	cbnz	r0, 800701e <_svfiprintf_r+0xea>
 8006fe6:	06d0      	lsls	r0, r2, #27
 8006fe8:	bf44      	itt	mi
 8006fea:	2320      	movmi	r3, #32
 8006fec:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006ff0:	0711      	lsls	r1, r2, #28
 8006ff2:	bf44      	itt	mi
 8006ff4:	232b      	movmi	r3, #43	@ 0x2b
 8006ff6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006ffa:	f89a 3000 	ldrb.w	r3, [sl]
 8006ffe:	2b2a      	cmp	r3, #42	@ 0x2a
 8007000:	d015      	beq.n	800702e <_svfiprintf_r+0xfa>
 8007002:	9a07      	ldr	r2, [sp, #28]
 8007004:	4654      	mov	r4, sl
 8007006:	2000      	movs	r0, #0
 8007008:	f04f 0c0a 	mov.w	ip, #10
 800700c:	4621      	mov	r1, r4
 800700e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8007012:	3b30      	subs	r3, #48	@ 0x30
 8007014:	2b09      	cmp	r3, #9
 8007016:	d94b      	bls.n	80070b0 <_svfiprintf_r+0x17c>
 8007018:	b1b0      	cbz	r0, 8007048 <_svfiprintf_r+0x114>
 800701a:	9207      	str	r2, [sp, #28]
 800701c:	e014      	b.n	8007048 <_svfiprintf_r+0x114>
 800701e:	eba0 0308 	sub.w	r3, r0, r8
 8007022:	fa09 f303 	lsl.w	r3, r9, r3
 8007026:	4313      	orrs	r3, r2
 8007028:	9304      	str	r3, [sp, #16]
 800702a:	46a2      	mov	sl, r4
 800702c:	e7d2      	b.n	8006fd4 <_svfiprintf_r+0xa0>
 800702e:	9b03      	ldr	r3, [sp, #12]
 8007030:	1d19      	adds	r1, r3, #4
 8007032:	681b      	ldr	r3, [r3, #0]
 8007034:	9103      	str	r1, [sp, #12]
 8007036:	2b00      	cmp	r3, #0
 8007038:	bfbb      	ittet	lt
 800703a:	425b      	neglt	r3, r3
 800703c:	f042 0202 	orrlt.w	r2, r2, #2
 8007040:	9307      	strge	r3, [sp, #28]
 8007042:	9307      	strlt	r3, [sp, #28]
 8007044:	bfb8      	it	lt
 8007046:	9204      	strlt	r2, [sp, #16]
 8007048:	7823      	ldrb	r3, [r4, #0]
 800704a:	2b2e      	cmp	r3, #46	@ 0x2e
 800704c:	d10a      	bne.n	8007064 <_svfiprintf_r+0x130>
 800704e:	7863      	ldrb	r3, [r4, #1]
 8007050:	2b2a      	cmp	r3, #42	@ 0x2a
 8007052:	d132      	bne.n	80070ba <_svfiprintf_r+0x186>
 8007054:	9b03      	ldr	r3, [sp, #12]
 8007056:	1d1a      	adds	r2, r3, #4
 8007058:	681b      	ldr	r3, [r3, #0]
 800705a:	9203      	str	r2, [sp, #12]
 800705c:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8007060:	3402      	adds	r4, #2
 8007062:	9305      	str	r3, [sp, #20]
 8007064:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8007128 <_svfiprintf_r+0x1f4>
 8007068:	7821      	ldrb	r1, [r4, #0]
 800706a:	2203      	movs	r2, #3
 800706c:	4650      	mov	r0, sl
 800706e:	f7f9 f8b7 	bl	80001e0 <memchr>
 8007072:	b138      	cbz	r0, 8007084 <_svfiprintf_r+0x150>
 8007074:	9b04      	ldr	r3, [sp, #16]
 8007076:	eba0 000a 	sub.w	r0, r0, sl
 800707a:	2240      	movs	r2, #64	@ 0x40
 800707c:	4082      	lsls	r2, r0
 800707e:	4313      	orrs	r3, r2
 8007080:	3401      	adds	r4, #1
 8007082:	9304      	str	r3, [sp, #16]
 8007084:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007088:	4824      	ldr	r0, [pc, #144]	@ (800711c <_svfiprintf_r+0x1e8>)
 800708a:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800708e:	2206      	movs	r2, #6
 8007090:	f7f9 f8a6 	bl	80001e0 <memchr>
 8007094:	2800      	cmp	r0, #0
 8007096:	d036      	beq.n	8007106 <_svfiprintf_r+0x1d2>
 8007098:	4b21      	ldr	r3, [pc, #132]	@ (8007120 <_svfiprintf_r+0x1ec>)
 800709a:	bb1b      	cbnz	r3, 80070e4 <_svfiprintf_r+0x1b0>
 800709c:	9b03      	ldr	r3, [sp, #12]
 800709e:	3307      	adds	r3, #7
 80070a0:	f023 0307 	bic.w	r3, r3, #7
 80070a4:	3308      	adds	r3, #8
 80070a6:	9303      	str	r3, [sp, #12]
 80070a8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80070aa:	4433      	add	r3, r6
 80070ac:	9309      	str	r3, [sp, #36]	@ 0x24
 80070ae:	e76a      	b.n	8006f86 <_svfiprintf_r+0x52>
 80070b0:	fb0c 3202 	mla	r2, ip, r2, r3
 80070b4:	460c      	mov	r4, r1
 80070b6:	2001      	movs	r0, #1
 80070b8:	e7a8      	b.n	800700c <_svfiprintf_r+0xd8>
 80070ba:	2300      	movs	r3, #0
 80070bc:	3401      	adds	r4, #1
 80070be:	9305      	str	r3, [sp, #20]
 80070c0:	4619      	mov	r1, r3
 80070c2:	f04f 0c0a 	mov.w	ip, #10
 80070c6:	4620      	mov	r0, r4
 80070c8:	f810 2b01 	ldrb.w	r2, [r0], #1
 80070cc:	3a30      	subs	r2, #48	@ 0x30
 80070ce:	2a09      	cmp	r2, #9
 80070d0:	d903      	bls.n	80070da <_svfiprintf_r+0x1a6>
 80070d2:	2b00      	cmp	r3, #0
 80070d4:	d0c6      	beq.n	8007064 <_svfiprintf_r+0x130>
 80070d6:	9105      	str	r1, [sp, #20]
 80070d8:	e7c4      	b.n	8007064 <_svfiprintf_r+0x130>
 80070da:	fb0c 2101 	mla	r1, ip, r1, r2
 80070de:	4604      	mov	r4, r0
 80070e0:	2301      	movs	r3, #1
 80070e2:	e7f0      	b.n	80070c6 <_svfiprintf_r+0x192>
 80070e4:	ab03      	add	r3, sp, #12
 80070e6:	9300      	str	r3, [sp, #0]
 80070e8:	462a      	mov	r2, r5
 80070ea:	4b0e      	ldr	r3, [pc, #56]	@ (8007124 <_svfiprintf_r+0x1f0>)
 80070ec:	a904      	add	r1, sp, #16
 80070ee:	4638      	mov	r0, r7
 80070f0:	f3af 8000 	nop.w
 80070f4:	1c42      	adds	r2, r0, #1
 80070f6:	4606      	mov	r6, r0
 80070f8:	d1d6      	bne.n	80070a8 <_svfiprintf_r+0x174>
 80070fa:	89ab      	ldrh	r3, [r5, #12]
 80070fc:	065b      	lsls	r3, r3, #25
 80070fe:	f53f af2d 	bmi.w	8006f5c <_svfiprintf_r+0x28>
 8007102:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8007104:	e72c      	b.n	8006f60 <_svfiprintf_r+0x2c>
 8007106:	ab03      	add	r3, sp, #12
 8007108:	9300      	str	r3, [sp, #0]
 800710a:	462a      	mov	r2, r5
 800710c:	4b05      	ldr	r3, [pc, #20]	@ (8007124 <_svfiprintf_r+0x1f0>)
 800710e:	a904      	add	r1, sp, #16
 8007110:	4638      	mov	r0, r7
 8007112:	f000 f879 	bl	8007208 <_printf_i>
 8007116:	e7ed      	b.n	80070f4 <_svfiprintf_r+0x1c0>
 8007118:	080082e8 	.word	0x080082e8
 800711c:	080082f2 	.word	0x080082f2
 8007120:	00000000 	.word	0x00000000
 8007124:	08006e7d 	.word	0x08006e7d
 8007128:	080082ee 	.word	0x080082ee

0800712c <_printf_common>:
 800712c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007130:	4616      	mov	r6, r2
 8007132:	4698      	mov	r8, r3
 8007134:	688a      	ldr	r2, [r1, #8]
 8007136:	690b      	ldr	r3, [r1, #16]
 8007138:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800713c:	4293      	cmp	r3, r2
 800713e:	bfb8      	it	lt
 8007140:	4613      	movlt	r3, r2
 8007142:	6033      	str	r3, [r6, #0]
 8007144:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8007148:	4607      	mov	r7, r0
 800714a:	460c      	mov	r4, r1
 800714c:	b10a      	cbz	r2, 8007152 <_printf_common+0x26>
 800714e:	3301      	adds	r3, #1
 8007150:	6033      	str	r3, [r6, #0]
 8007152:	6823      	ldr	r3, [r4, #0]
 8007154:	0699      	lsls	r1, r3, #26
 8007156:	bf42      	ittt	mi
 8007158:	6833      	ldrmi	r3, [r6, #0]
 800715a:	3302      	addmi	r3, #2
 800715c:	6033      	strmi	r3, [r6, #0]
 800715e:	6825      	ldr	r5, [r4, #0]
 8007160:	f015 0506 	ands.w	r5, r5, #6
 8007164:	d106      	bne.n	8007174 <_printf_common+0x48>
 8007166:	f104 0a19 	add.w	sl, r4, #25
 800716a:	68e3      	ldr	r3, [r4, #12]
 800716c:	6832      	ldr	r2, [r6, #0]
 800716e:	1a9b      	subs	r3, r3, r2
 8007170:	42ab      	cmp	r3, r5
 8007172:	dc26      	bgt.n	80071c2 <_printf_common+0x96>
 8007174:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8007178:	6822      	ldr	r2, [r4, #0]
 800717a:	3b00      	subs	r3, #0
 800717c:	bf18      	it	ne
 800717e:	2301      	movne	r3, #1
 8007180:	0692      	lsls	r2, r2, #26
 8007182:	d42b      	bmi.n	80071dc <_printf_common+0xb0>
 8007184:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8007188:	4641      	mov	r1, r8
 800718a:	4638      	mov	r0, r7
 800718c:	47c8      	blx	r9
 800718e:	3001      	adds	r0, #1
 8007190:	d01e      	beq.n	80071d0 <_printf_common+0xa4>
 8007192:	6823      	ldr	r3, [r4, #0]
 8007194:	6922      	ldr	r2, [r4, #16]
 8007196:	f003 0306 	and.w	r3, r3, #6
 800719a:	2b04      	cmp	r3, #4
 800719c:	bf02      	ittt	eq
 800719e:	68e5      	ldreq	r5, [r4, #12]
 80071a0:	6833      	ldreq	r3, [r6, #0]
 80071a2:	1aed      	subeq	r5, r5, r3
 80071a4:	68a3      	ldr	r3, [r4, #8]
 80071a6:	bf0c      	ite	eq
 80071a8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80071ac:	2500      	movne	r5, #0
 80071ae:	4293      	cmp	r3, r2
 80071b0:	bfc4      	itt	gt
 80071b2:	1a9b      	subgt	r3, r3, r2
 80071b4:	18ed      	addgt	r5, r5, r3
 80071b6:	2600      	movs	r6, #0
 80071b8:	341a      	adds	r4, #26
 80071ba:	42b5      	cmp	r5, r6
 80071bc:	d11a      	bne.n	80071f4 <_printf_common+0xc8>
 80071be:	2000      	movs	r0, #0
 80071c0:	e008      	b.n	80071d4 <_printf_common+0xa8>
 80071c2:	2301      	movs	r3, #1
 80071c4:	4652      	mov	r2, sl
 80071c6:	4641      	mov	r1, r8
 80071c8:	4638      	mov	r0, r7
 80071ca:	47c8      	blx	r9
 80071cc:	3001      	adds	r0, #1
 80071ce:	d103      	bne.n	80071d8 <_printf_common+0xac>
 80071d0:	f04f 30ff 	mov.w	r0, #4294967295
 80071d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80071d8:	3501      	adds	r5, #1
 80071da:	e7c6      	b.n	800716a <_printf_common+0x3e>
 80071dc:	18e1      	adds	r1, r4, r3
 80071de:	1c5a      	adds	r2, r3, #1
 80071e0:	2030      	movs	r0, #48	@ 0x30
 80071e2:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80071e6:	4422      	add	r2, r4
 80071e8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80071ec:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80071f0:	3302      	adds	r3, #2
 80071f2:	e7c7      	b.n	8007184 <_printf_common+0x58>
 80071f4:	2301      	movs	r3, #1
 80071f6:	4622      	mov	r2, r4
 80071f8:	4641      	mov	r1, r8
 80071fa:	4638      	mov	r0, r7
 80071fc:	47c8      	blx	r9
 80071fe:	3001      	adds	r0, #1
 8007200:	d0e6      	beq.n	80071d0 <_printf_common+0xa4>
 8007202:	3601      	adds	r6, #1
 8007204:	e7d9      	b.n	80071ba <_printf_common+0x8e>
	...

08007208 <_printf_i>:
 8007208:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800720c:	7e0f      	ldrb	r7, [r1, #24]
 800720e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8007210:	2f78      	cmp	r7, #120	@ 0x78
 8007212:	4691      	mov	r9, r2
 8007214:	4680      	mov	r8, r0
 8007216:	460c      	mov	r4, r1
 8007218:	469a      	mov	sl, r3
 800721a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800721e:	d807      	bhi.n	8007230 <_printf_i+0x28>
 8007220:	2f62      	cmp	r7, #98	@ 0x62
 8007222:	d80a      	bhi.n	800723a <_printf_i+0x32>
 8007224:	2f00      	cmp	r7, #0
 8007226:	f000 80d1 	beq.w	80073cc <_printf_i+0x1c4>
 800722a:	2f58      	cmp	r7, #88	@ 0x58
 800722c:	f000 80b8 	beq.w	80073a0 <_printf_i+0x198>
 8007230:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8007234:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8007238:	e03a      	b.n	80072b0 <_printf_i+0xa8>
 800723a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800723e:	2b15      	cmp	r3, #21
 8007240:	d8f6      	bhi.n	8007230 <_printf_i+0x28>
 8007242:	a101      	add	r1, pc, #4	@ (adr r1, 8007248 <_printf_i+0x40>)
 8007244:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8007248:	080072a1 	.word	0x080072a1
 800724c:	080072b5 	.word	0x080072b5
 8007250:	08007231 	.word	0x08007231
 8007254:	08007231 	.word	0x08007231
 8007258:	08007231 	.word	0x08007231
 800725c:	08007231 	.word	0x08007231
 8007260:	080072b5 	.word	0x080072b5
 8007264:	08007231 	.word	0x08007231
 8007268:	08007231 	.word	0x08007231
 800726c:	08007231 	.word	0x08007231
 8007270:	08007231 	.word	0x08007231
 8007274:	080073b3 	.word	0x080073b3
 8007278:	080072df 	.word	0x080072df
 800727c:	0800736d 	.word	0x0800736d
 8007280:	08007231 	.word	0x08007231
 8007284:	08007231 	.word	0x08007231
 8007288:	080073d5 	.word	0x080073d5
 800728c:	08007231 	.word	0x08007231
 8007290:	080072df 	.word	0x080072df
 8007294:	08007231 	.word	0x08007231
 8007298:	08007231 	.word	0x08007231
 800729c:	08007375 	.word	0x08007375
 80072a0:	6833      	ldr	r3, [r6, #0]
 80072a2:	1d1a      	adds	r2, r3, #4
 80072a4:	681b      	ldr	r3, [r3, #0]
 80072a6:	6032      	str	r2, [r6, #0]
 80072a8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80072ac:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80072b0:	2301      	movs	r3, #1
 80072b2:	e09c      	b.n	80073ee <_printf_i+0x1e6>
 80072b4:	6833      	ldr	r3, [r6, #0]
 80072b6:	6820      	ldr	r0, [r4, #0]
 80072b8:	1d19      	adds	r1, r3, #4
 80072ba:	6031      	str	r1, [r6, #0]
 80072bc:	0606      	lsls	r6, r0, #24
 80072be:	d501      	bpl.n	80072c4 <_printf_i+0xbc>
 80072c0:	681d      	ldr	r5, [r3, #0]
 80072c2:	e003      	b.n	80072cc <_printf_i+0xc4>
 80072c4:	0645      	lsls	r5, r0, #25
 80072c6:	d5fb      	bpl.n	80072c0 <_printf_i+0xb8>
 80072c8:	f9b3 5000 	ldrsh.w	r5, [r3]
 80072cc:	2d00      	cmp	r5, #0
 80072ce:	da03      	bge.n	80072d8 <_printf_i+0xd0>
 80072d0:	232d      	movs	r3, #45	@ 0x2d
 80072d2:	426d      	negs	r5, r5
 80072d4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80072d8:	4858      	ldr	r0, [pc, #352]	@ (800743c <_printf_i+0x234>)
 80072da:	230a      	movs	r3, #10
 80072dc:	e011      	b.n	8007302 <_printf_i+0xfa>
 80072de:	6821      	ldr	r1, [r4, #0]
 80072e0:	6833      	ldr	r3, [r6, #0]
 80072e2:	0608      	lsls	r0, r1, #24
 80072e4:	f853 5b04 	ldr.w	r5, [r3], #4
 80072e8:	d402      	bmi.n	80072f0 <_printf_i+0xe8>
 80072ea:	0649      	lsls	r1, r1, #25
 80072ec:	bf48      	it	mi
 80072ee:	b2ad      	uxthmi	r5, r5
 80072f0:	2f6f      	cmp	r7, #111	@ 0x6f
 80072f2:	4852      	ldr	r0, [pc, #328]	@ (800743c <_printf_i+0x234>)
 80072f4:	6033      	str	r3, [r6, #0]
 80072f6:	bf14      	ite	ne
 80072f8:	230a      	movne	r3, #10
 80072fa:	2308      	moveq	r3, #8
 80072fc:	2100      	movs	r1, #0
 80072fe:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8007302:	6866      	ldr	r6, [r4, #4]
 8007304:	60a6      	str	r6, [r4, #8]
 8007306:	2e00      	cmp	r6, #0
 8007308:	db05      	blt.n	8007316 <_printf_i+0x10e>
 800730a:	6821      	ldr	r1, [r4, #0]
 800730c:	432e      	orrs	r6, r5
 800730e:	f021 0104 	bic.w	r1, r1, #4
 8007312:	6021      	str	r1, [r4, #0]
 8007314:	d04b      	beq.n	80073ae <_printf_i+0x1a6>
 8007316:	4616      	mov	r6, r2
 8007318:	fbb5 f1f3 	udiv	r1, r5, r3
 800731c:	fb03 5711 	mls	r7, r3, r1, r5
 8007320:	5dc7      	ldrb	r7, [r0, r7]
 8007322:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8007326:	462f      	mov	r7, r5
 8007328:	42bb      	cmp	r3, r7
 800732a:	460d      	mov	r5, r1
 800732c:	d9f4      	bls.n	8007318 <_printf_i+0x110>
 800732e:	2b08      	cmp	r3, #8
 8007330:	d10b      	bne.n	800734a <_printf_i+0x142>
 8007332:	6823      	ldr	r3, [r4, #0]
 8007334:	07df      	lsls	r7, r3, #31
 8007336:	d508      	bpl.n	800734a <_printf_i+0x142>
 8007338:	6923      	ldr	r3, [r4, #16]
 800733a:	6861      	ldr	r1, [r4, #4]
 800733c:	4299      	cmp	r1, r3
 800733e:	bfde      	ittt	le
 8007340:	2330      	movle	r3, #48	@ 0x30
 8007342:	f806 3c01 	strble.w	r3, [r6, #-1]
 8007346:	f106 36ff 	addle.w	r6, r6, #4294967295
 800734a:	1b92      	subs	r2, r2, r6
 800734c:	6122      	str	r2, [r4, #16]
 800734e:	f8cd a000 	str.w	sl, [sp]
 8007352:	464b      	mov	r3, r9
 8007354:	aa03      	add	r2, sp, #12
 8007356:	4621      	mov	r1, r4
 8007358:	4640      	mov	r0, r8
 800735a:	f7ff fee7 	bl	800712c <_printf_common>
 800735e:	3001      	adds	r0, #1
 8007360:	d14a      	bne.n	80073f8 <_printf_i+0x1f0>
 8007362:	f04f 30ff 	mov.w	r0, #4294967295
 8007366:	b004      	add	sp, #16
 8007368:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800736c:	6823      	ldr	r3, [r4, #0]
 800736e:	f043 0320 	orr.w	r3, r3, #32
 8007372:	6023      	str	r3, [r4, #0]
 8007374:	4832      	ldr	r0, [pc, #200]	@ (8007440 <_printf_i+0x238>)
 8007376:	2778      	movs	r7, #120	@ 0x78
 8007378:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800737c:	6823      	ldr	r3, [r4, #0]
 800737e:	6831      	ldr	r1, [r6, #0]
 8007380:	061f      	lsls	r7, r3, #24
 8007382:	f851 5b04 	ldr.w	r5, [r1], #4
 8007386:	d402      	bmi.n	800738e <_printf_i+0x186>
 8007388:	065f      	lsls	r7, r3, #25
 800738a:	bf48      	it	mi
 800738c:	b2ad      	uxthmi	r5, r5
 800738e:	6031      	str	r1, [r6, #0]
 8007390:	07d9      	lsls	r1, r3, #31
 8007392:	bf44      	itt	mi
 8007394:	f043 0320 	orrmi.w	r3, r3, #32
 8007398:	6023      	strmi	r3, [r4, #0]
 800739a:	b11d      	cbz	r5, 80073a4 <_printf_i+0x19c>
 800739c:	2310      	movs	r3, #16
 800739e:	e7ad      	b.n	80072fc <_printf_i+0xf4>
 80073a0:	4826      	ldr	r0, [pc, #152]	@ (800743c <_printf_i+0x234>)
 80073a2:	e7e9      	b.n	8007378 <_printf_i+0x170>
 80073a4:	6823      	ldr	r3, [r4, #0]
 80073a6:	f023 0320 	bic.w	r3, r3, #32
 80073aa:	6023      	str	r3, [r4, #0]
 80073ac:	e7f6      	b.n	800739c <_printf_i+0x194>
 80073ae:	4616      	mov	r6, r2
 80073b0:	e7bd      	b.n	800732e <_printf_i+0x126>
 80073b2:	6833      	ldr	r3, [r6, #0]
 80073b4:	6825      	ldr	r5, [r4, #0]
 80073b6:	6961      	ldr	r1, [r4, #20]
 80073b8:	1d18      	adds	r0, r3, #4
 80073ba:	6030      	str	r0, [r6, #0]
 80073bc:	062e      	lsls	r6, r5, #24
 80073be:	681b      	ldr	r3, [r3, #0]
 80073c0:	d501      	bpl.n	80073c6 <_printf_i+0x1be>
 80073c2:	6019      	str	r1, [r3, #0]
 80073c4:	e002      	b.n	80073cc <_printf_i+0x1c4>
 80073c6:	0668      	lsls	r0, r5, #25
 80073c8:	d5fb      	bpl.n	80073c2 <_printf_i+0x1ba>
 80073ca:	8019      	strh	r1, [r3, #0]
 80073cc:	2300      	movs	r3, #0
 80073ce:	6123      	str	r3, [r4, #16]
 80073d0:	4616      	mov	r6, r2
 80073d2:	e7bc      	b.n	800734e <_printf_i+0x146>
 80073d4:	6833      	ldr	r3, [r6, #0]
 80073d6:	1d1a      	adds	r2, r3, #4
 80073d8:	6032      	str	r2, [r6, #0]
 80073da:	681e      	ldr	r6, [r3, #0]
 80073dc:	6862      	ldr	r2, [r4, #4]
 80073de:	2100      	movs	r1, #0
 80073e0:	4630      	mov	r0, r6
 80073e2:	f7f8 fefd 	bl	80001e0 <memchr>
 80073e6:	b108      	cbz	r0, 80073ec <_printf_i+0x1e4>
 80073e8:	1b80      	subs	r0, r0, r6
 80073ea:	6060      	str	r0, [r4, #4]
 80073ec:	6863      	ldr	r3, [r4, #4]
 80073ee:	6123      	str	r3, [r4, #16]
 80073f0:	2300      	movs	r3, #0
 80073f2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80073f6:	e7aa      	b.n	800734e <_printf_i+0x146>
 80073f8:	6923      	ldr	r3, [r4, #16]
 80073fa:	4632      	mov	r2, r6
 80073fc:	4649      	mov	r1, r9
 80073fe:	4640      	mov	r0, r8
 8007400:	47d0      	blx	sl
 8007402:	3001      	adds	r0, #1
 8007404:	d0ad      	beq.n	8007362 <_printf_i+0x15a>
 8007406:	6823      	ldr	r3, [r4, #0]
 8007408:	079b      	lsls	r3, r3, #30
 800740a:	d413      	bmi.n	8007434 <_printf_i+0x22c>
 800740c:	68e0      	ldr	r0, [r4, #12]
 800740e:	9b03      	ldr	r3, [sp, #12]
 8007410:	4298      	cmp	r0, r3
 8007412:	bfb8      	it	lt
 8007414:	4618      	movlt	r0, r3
 8007416:	e7a6      	b.n	8007366 <_printf_i+0x15e>
 8007418:	2301      	movs	r3, #1
 800741a:	4632      	mov	r2, r6
 800741c:	4649      	mov	r1, r9
 800741e:	4640      	mov	r0, r8
 8007420:	47d0      	blx	sl
 8007422:	3001      	adds	r0, #1
 8007424:	d09d      	beq.n	8007362 <_printf_i+0x15a>
 8007426:	3501      	adds	r5, #1
 8007428:	68e3      	ldr	r3, [r4, #12]
 800742a:	9903      	ldr	r1, [sp, #12]
 800742c:	1a5b      	subs	r3, r3, r1
 800742e:	42ab      	cmp	r3, r5
 8007430:	dcf2      	bgt.n	8007418 <_printf_i+0x210>
 8007432:	e7eb      	b.n	800740c <_printf_i+0x204>
 8007434:	2500      	movs	r5, #0
 8007436:	f104 0619 	add.w	r6, r4, #25
 800743a:	e7f5      	b.n	8007428 <_printf_i+0x220>
 800743c:	080082f9 	.word	0x080082f9
 8007440:	0800830a 	.word	0x0800830a

08007444 <memmove>:
 8007444:	4288      	cmp	r0, r1
 8007446:	b510      	push	{r4, lr}
 8007448:	eb01 0402 	add.w	r4, r1, r2
 800744c:	d902      	bls.n	8007454 <memmove+0x10>
 800744e:	4284      	cmp	r4, r0
 8007450:	4623      	mov	r3, r4
 8007452:	d807      	bhi.n	8007464 <memmove+0x20>
 8007454:	1e43      	subs	r3, r0, #1
 8007456:	42a1      	cmp	r1, r4
 8007458:	d008      	beq.n	800746c <memmove+0x28>
 800745a:	f811 2b01 	ldrb.w	r2, [r1], #1
 800745e:	f803 2f01 	strb.w	r2, [r3, #1]!
 8007462:	e7f8      	b.n	8007456 <memmove+0x12>
 8007464:	4402      	add	r2, r0
 8007466:	4601      	mov	r1, r0
 8007468:	428a      	cmp	r2, r1
 800746a:	d100      	bne.n	800746e <memmove+0x2a>
 800746c:	bd10      	pop	{r4, pc}
 800746e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8007472:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8007476:	e7f7      	b.n	8007468 <memmove+0x24>

08007478 <_realloc_r>:
 8007478:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800747c:	4607      	mov	r7, r0
 800747e:	4614      	mov	r4, r2
 8007480:	460d      	mov	r5, r1
 8007482:	b921      	cbnz	r1, 800748e <_realloc_r+0x16>
 8007484:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007488:	4611      	mov	r1, r2
 800748a:	f7ff bb4f 	b.w	8006b2c <_malloc_r>
 800748e:	b92a      	cbnz	r2, 800749c <_realloc_r+0x24>
 8007490:	f7ff fcaa 	bl	8006de8 <_free_r>
 8007494:	4625      	mov	r5, r4
 8007496:	4628      	mov	r0, r5
 8007498:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800749c:	f000 f81a 	bl	80074d4 <_malloc_usable_size_r>
 80074a0:	4284      	cmp	r4, r0
 80074a2:	4606      	mov	r6, r0
 80074a4:	d802      	bhi.n	80074ac <_realloc_r+0x34>
 80074a6:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80074aa:	d8f4      	bhi.n	8007496 <_realloc_r+0x1e>
 80074ac:	4621      	mov	r1, r4
 80074ae:	4638      	mov	r0, r7
 80074b0:	f7ff fb3c 	bl	8006b2c <_malloc_r>
 80074b4:	4680      	mov	r8, r0
 80074b6:	b908      	cbnz	r0, 80074bc <_realloc_r+0x44>
 80074b8:	4645      	mov	r5, r8
 80074ba:	e7ec      	b.n	8007496 <_realloc_r+0x1e>
 80074bc:	42b4      	cmp	r4, r6
 80074be:	4622      	mov	r2, r4
 80074c0:	4629      	mov	r1, r5
 80074c2:	bf28      	it	cs
 80074c4:	4632      	movcs	r2, r6
 80074c6:	f7ff fc81 	bl	8006dcc <memcpy>
 80074ca:	4629      	mov	r1, r5
 80074cc:	4638      	mov	r0, r7
 80074ce:	f7ff fc8b 	bl	8006de8 <_free_r>
 80074d2:	e7f1      	b.n	80074b8 <_realloc_r+0x40>

080074d4 <_malloc_usable_size_r>:
 80074d4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80074d8:	1f18      	subs	r0, r3, #4
 80074da:	2b00      	cmp	r3, #0
 80074dc:	bfbc      	itt	lt
 80074de:	580b      	ldrlt	r3, [r1, r0]
 80074e0:	18c0      	addlt	r0, r0, r3
 80074e2:	4770      	bx	lr

080074e4 <_init>:
 80074e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80074e6:	bf00      	nop
 80074e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80074ea:	bc08      	pop	{r3}
 80074ec:	469e      	mov	lr, r3
 80074ee:	4770      	bx	lr

080074f0 <_fini>:
 80074f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80074f2:	bf00      	nop
 80074f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80074f6:	bc08      	pop	{r3}
 80074f8:	469e      	mov	lr, r3
 80074fa:	4770      	bx	lr
